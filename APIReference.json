{
  "openapi": "3.0.0",
  "info": {
    "title": "SevenRooms Reservations API",
    "description": "The SevenRooms Reservations API is a RESTful API over HTTPS that utilizes JSON as the data response format. It allows application developers to query for data and perform actions, such as booking a reservation or looking up client data.\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->",
    "termsOfService": "https://sevenrooms.com/en/terms-of-service",
    "contact": {
      "name": "Sevenrooms support",
      "email": "support@sevenrooms.com"
    },
    "license": {
      "name": "SevenRooms License"
    },
    "version": "2.4"
  },
  "servers": [
    {
      "url": "https://demo.sevenrooms.com/api-ext/2_4",
      "description": "Demo"
    },
    {
      "url": "https://api.sevenrooms.com/2_4",
      "description": "US Production"
    },
    {
      "url": "https://api.eu.sevenrooms.com/2_4",
      "description": "EU Production"
    }
  ],
  "security": [
    {
      "ExternalAPIKeySecurity": []
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth Tags"
    },
    {
      "name": "Venues",
      "description": "Venue Tags"
    },
    {
      "name": "Availability",
      "description": "Availability Tags"
    },
    {
      "name": "Reservation Holds",
      "description": "Reservation Hold Tags"
    },
    {
      "name": "Reservation Requests",
      "description": "Reservation Request Tags"
    },
    {
      "name": "Reservations",
      "description": "Reservation Tags"
    },
    {
      "name": "Events",
      "description": "Event Tags"
    },
    {
      "name": "Waitlist",
      "description": "Waitlist Tags"
    },
    {
      "name": "Clients",
      "description": "Client Tags"
    },
    {
      "name": "Charges",
      "description": "Charges Tags"
    },
    {
      "name": "Shifts",
      "description": "Shift tags"
    },
    {
      "name": "Programs",
      "description": "Program Tags"
    },
    {
      "name": "Reservation Feedback",
      "description": "Reservation Feedback Tags"
    },
    {
      "name": "Upgrades",
      "description": "Upgrade Tags"
    },
    {
      "name": "Upgrade Categories",
      "description": "Upgrade Category Tags"
    },
    {
      "name": "Activity Logs",
      "description": "Activity Log Tags"
    },
    {
      "name": "Payments",
      "description": "Payments"
    },
    {
      "name": "Paylinks",
      "description": "Paylink Tags"
    },
    {
      "name": "Orders",
      "description": "Order Tags"
    }
  ],
  "paths": {
    "/auth": {
      "post": {
        "operationId": "create_auth_token",
        "security": [],
        "summary": "Create an API Authorization Token",
        "description": "Create an API Authorization Token for making requests to the SevenRooms Reservations API.",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "JSON object containing an Authorization token that expires after 24 hours.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AuthorizationResponse",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "msg": {
                      "description": "Human‐readable message describing the response status.",
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "description": "Authentication token required to fulfill requests. Expires after 24 hours.",
                          "type": "string"
                        },
                        "token_expiration_datetime": {
                          "description": "Date/Time when the token will expire",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "msg": "Successfully authenticated.",
                  "status": 200,
                  "data": {
                    "token": "e179b0a6a6b293ef36972864ab0401c234e6524dce80d9f7235c64758dd6a69cd8d5d10aa0868faf8dd487c87ed12a308bdbed5aedf0f18327ab1b63a4060bdd",
                    "token_expiration_datetime": "2023-08-01T14:20:38.874800"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venue_id}": {
      "get": {
        "summary": "Get a Venue",
        "description": "Fetch a venue by ID.",
        "operationId": "get_venue",
        "tags": [
          "Venues"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/path"
          }
        ],
        "responses": {
          "200": {
            "description": "Venue object\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "description": "Address first line",
                          "example": "122 West 27th Street",
                          "type": "string"
                        },
                        "black_logo": {
                          "type": "string"
                        },
                        "black_logo_direct": {
                          "type": "object",
                          "properties": {
                            "large": {
                              "type": "string"
                            },
                            "large_height": {
                              "type": "integer"
                            },
                            "large_width": {
                              "type": "integer"
                            },
                            "medium": {
                              "type": "string"
                            },
                            "medium_height": {
                              "type": "integer"
                            },
                            "medium_width": {
                              "type": "integer"
                            },
                            "raw": {
                              "type": "string"
                            },
                            "small": {
                              "type": "string"
                            },
                            "small_height": {
                              "type": "integer"
                            },
                            "small_width": {
                              "type": "integer"
                            }
                          }
                        },
                        "country": {
                          "description": "The country of the Client's residential address.",
                          "example": "United States",
                          "type": "string"
                        },
                        "cross_street": {
                          "type": "string"
                        },
                        "currency_code": {
                          "type": "string"
                        },
                        "external_venue_id": {
                          "type": "string",
                          "description": "Unique identifier in an external system for a Venue.      \n> You may specify your own identifiers for Venues for various reference purposes in your own systems."
                        },
                        "full_dining_backend": {
                          "type": "boolean"
                        },
                        "grid_enabled": {
                          "type": "boolean"
                        },
                        "id": {
                          "type": "string"
                        },
                        "internal_name": {
                          "description": "Venue internally-facing name that users will see when using SevenRooms, primarily for use when differentially similarly-named venues in different locations",
                          "type": "string"
                        },
                        "membership_enabled": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        },
                        "neighborhood": {
                          "description": "Neighborhood of venue",
                          "type": "string"
                        },
                        "phone_number": {
                          "description": "Phone number associated with the Reservation.      \n> Can be numerous valid formats, including international phone      \nnumbers. US phone numbers generally follow      \n1-xxx-xxx-xxxx.",
                          "example": "1-555-555-5555",
                          "type": "string"
                        },
                        "photos": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "policy": {
                          "type": "string"
                        },
                        "postal_code": {
                          "description": "`postal_code` value from the Client entity associated with the Reservation.",
                          "type": "string"
                        },
                        "primary_color": {
                          "description": "Venue primary color in hex",
                          "type": "string"
                        },
                        "secondary_color": {
                          "description": "Venue secondary color in hex",
                          "type": "string"
                        },
                        "state": {
                          "description": "`state` value from the Client entity associated with the Reservation.",
                          "type": "string"
                        },
                        "unique_confirmation_prefix": {
                          "description": "Unique prefix for a Venue's reservation within it's Venue Group",
                          "type": "string"
                        },
                        "venue_class": {
                          "type": "string"
                        },
                        "venue_group_id": {
                          "description": "Unique identifier of the venue group.",
                          "type": "string"
                        },
                        "venue_group_name": {
                          "type": "string"
                        },
                        "venue_url_key": {
                          "type": "string"
                        },
                        "website": {
                          "type": "string"
                        },
                        "white_logo": {
                          "type": "string"
                        },
                        "white_logo_direct": {
                          "type": "object",
                          "properties": {
                            "large": {
                              "type": "string"
                            },
                            "large_height": {
                              "type": "integer"
                            },
                            "large_width": {
                              "type": "integer"
                            },
                            "medium": {
                              "type": "string"
                            },
                            "medium_height": {
                              "type": "integer"
                            },
                            "medium_width": {
                              "type": "integer"
                            },
                            "raw": {
                              "type": "string"
                            },
                            "small": {
                              "type": "string"
                            },
                            "small_height": {
                              "type": "integer"
                            },
                            "small_width": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "phone_number": 12125559876,
                    "neighborhood": "Lower East Side",
                    "venue_class": "DINING",
                    "municipality": "New York",
                    "venue_group_name": "Docs Group",
                    "postal_code": 11201,
                    "id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCYqsOBCAw",
                    "external_venue_id": "10001-abc",
                    "unique_confirmation_prefix": "DCNY",
                    "secondary_color": "#0000ff",
                    "grid_enabled": true,
                    "venue_group_id": "ahZzfnNldmVub3BfVmVudWVHcm91cBic2VjdXJlLXFhciELEhRuaWdodGAgMjWsMTYCAwcm9vbXMtxv",
                    "internal_name": "Annie's",
                    "policy": "Thank you for your reservation. Should your plans change, please let us know 24 hours before your reservation time. We look forward to serving you.",
                    "white_logo": {},
                    "primary_color": "#000000",
                    "website": "None",
                    "photos": [],
                    "address": {
                      "street": "230 Park Avenue South",
                      "city": "New York"
                    },
                    "venue_url_key": "Annies",
                    "black_logo": {},
                    "name": "Annie's",
                    "cross_street": "13th Street",
                    "membership_enabled": false,
                    "full_dining_backend": true,
                    "municipality_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yGwsSFWxvY2F0aW9uX011bmljaXBhbGl0eRgBDA",
                    "currency_code": "USD"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venue_id}/availability": {
      "get": {
        "summary": "Get Venue Availability",
        "description": "Retrieve a venue's availability.",
        "operationId": "get_venue_availability",
        "tags": [
          "Availability"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/path"
          },
          {
            "$ref": "#/components/parameters/query_required"
          },
          {
            "$ref": "#/components/parameters/slot_start_time_query_required"
          },
          {
            "$ref": "#/components/parameters/slot_end_time_query_required"
          },
          {
            "$ref": "#/components/parameters/party_size_query_required"
          },
          {
            "$ref": "#/components/parameters/query_optional"
          },
          {
            "$ref": "#/components/parameters/table_query_optional"
          },
          {
            "$ref": "#/components/parameters/prev_reservation_hold_id_query_optional"
          },
          {
            "$ref": "#/components/parameters/prev_reservation_id_query_optional"
          },
          {
            "$ref": "#/components/parameters/include_payments_by_paylink_query_optional"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON list of Availability objects per shift. Each shift contains a `times` property with per time slot availability for the specified Venue.\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**\n\n\nTime Slot Types\n----------------\n| Type | Description |\n|-------|---------------- |\n| book | Time slot is available for booking. |\n| request | Time slot is accepting reservation requests. The responses with type=request mean that there is no availability for that time slot and is a request only. If the returned time slot is a type=request, this means that the venue is only accepting reservation requests at that time.|",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "availability": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "shift_persistent_id": {
                                "description": "Unique identifier of the Shift belonging to this Reservation.      \n> Concatenation of:      \n> - Venue ID      \n> - Shift Category      \n> - Timestamp when shift was created      \n>       \n> Note that Venue ID may contain dashes.",
                                "example": "ahNzfnNldmVu2dsasg- DINNER-1443199242.75",
                                "type": "string"
                              },
                              "shift_id": {
                                "type": "string"
                              },
                              "shift_category": {
                                "type": "string"
                              },
                              "is_closed": {
                                "type": "boolean"
                              },
                              "upsell_categories": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "times": {
                                "type": "array",
                                "items": {
                                  "properties": {
                                    "access_persistent_id": {
                                      "type": "string",
                                      "description": "Unique identifier for access as a result of the availability call for the given time slot.      \n\nAccess persistent ID from result of availability call for given time slot."
                                    },
                                    "access_seating_area_id": {
                                      "type": "string"
                                    },
                                    "cancellation_policy": {
                                      "type": "string"
                                    },
                                    "cc_party_size_min": {
                                      "type": "integer"
                                    },
                                    "cc_payment_rule": {
                                      "type": "string"
                                    },
                                    "charge_type": {
                                      "type": "string"
                                    },
                                    "cost": {
                                      "type": "integer"
                                    },
                                    "duration": {
                                      "description": "The amount of time, in minutes, for the Reservation.",
                                      "example": 60,
                                      "type": "integer"
                                    },
                                    "gratuity": {
                                      "type": "number"
                                    },
                                    "is_held": {
                                      "type": "boolean"
                                    },
                                    "is_using_shift_upsells": {
                                      "type": "boolean"
                                    },
                                    "pacing_covers_remaining": {
                                      "type": "integer"
                                    },
                                    "pacing_limit": {
                                      "type": "integer"
                                    },
                                    "policy": {
                                      "type": "string"
                                    },
                                    "public_description_title": {
                                      "type": "string"
                                    },
                                    "public_long_form_description": {
                                      "type": "string"
                                    },
                                    "public_photo": {
                                      "type": "string"
                                    },
                                    "public_time_slot_description": {
                                      "type": "string"
                                    },
                                    "real_datetime_of_slot": {
                                      "type": "string"
                                    },
                                    "require_credit_card": {
                                      "type": "boolean"
                                    },
                                    "reservation_tags": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "sort_order": {
                                      "type": "integer"
                                    },
                                    "tax_rate": {
                                      "type": "number"
                                    },
                                    "time": {
                                      "type": "string",
                                      "description": "Reservation time"
                                    },
                                    "time_iso": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string"
                                    },
                                    "upsell_categories": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "is_previous_version": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "availability": [
                      {
                        "name": "Day",
                        "shift_persistent_id": "ahZzfnNldhchwLEg9uaWdodGxvb3BfVmVumVucm9vbXMtc2VjdXJlLXFdWUYgIDI1uKdvQgM-DINNER-1137276712.21",
                        "shift_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXVudWUYgIDI1uKdvQgMCxIPc3JfU2hpZnREZWZhdWx0GICA6FhcjgLEg9uaWdodGxvb3BfVmKev2JcIDA",
                        "shift_category": "DINNER",
                        "is_closed": false,
                        "upsell_categories": [],
                        "times": [
                          {
                            "access_seating_area_id": null,
                            "charge_type": null,
                            "upsell_categories": [
                              "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcjoLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkMCxIRc3JfVXBzZWxsQ2F0ZWdvcnkYgICAgPD3hQoM",
                              "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcjoLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkMCxIRc3JfVXBzZWxsQ2F0ZWdvcnkYgICAgMDflwoM"
                            ],
                            "cc_party_size_min": null,
                            "public_time_slot_description": "",
                            "cancellation_policy": "If you REALLY want to cancel a reservation do it exactly 24 hours prior. For no shows or late cancellations, you will be subject to fee of $0.25 per person, plus a $2,500 annoyance fee that will be applied to the credit card on file. Payable in your local currency or organs.",
                            "pacing_covers_remaining": 9999,
                            "real_datetime_of_slot": "2019-02-24 17:00:00",
                            "cost": 0,
                            "tax_rate": null,
                            "is_using_shift_upsells": false,
                            "duration": 90,
                            "require_credit_card": true,
                            "pacing_limit": 9999,
                            "time_iso": "2024-02-24 17:00:00",
                            "access_persistent_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkM-1549771833.76-0.0955918112665",
                            "reservation_tags": [
                              "PUBLIC##ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhch8LEhJzcl9HZW5lcmljVGFnR3JvdXAYgICQ-oeg0ggM##Seating Request##Window requested",
                              "PUBLIC##ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhch8LEhJzcl9HZW5lcmljVGFnR3JvdXAYgICQ-oegkgsM##Special Attention##Non-English speaking"
                            ],
                            "gratuity": null,
                            "is_held": true,
                            "public_photo": "",
                            "sort_order": 44,
                            "time": "5:00 PM",
                            "policy": "Don't be a jerk. Let us know when you're going to cancel like a day before. Otherwise we will find you and we will drag you to your reservation.",
                            "type": "book",
                            "cc_payment_rule": "save_for_later",
                            "public_long_form_description": "<p><br></p>",
                            "public_description_title": ""
                          }
                        ],
                        "is_previous_version": false
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/venues": {
      "get": {
        "summary": "List all Venues",
        "description": "Retrieve a list of Venues.",
        "operationId": "get_venues",
        "tags": [
          "Venues"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/venue_group_id_query_optional"
          },
          {
            "$ref": "#/components/parameters/limit_query_optional"
          },
          {
            "$ref": "#/components/parameters/cursor_query_optional"
          },
          {
            "$ref": "#/components/parameters/active_query_optional"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON list of Venues\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "description": "Address first line",
                                "example": "122 West 27th Street",
                                "type": "string"
                              },
                              "black_logo": {
                                "type": "string"
                              },
                              "black_logo_direct": {
                                "type": "object",
                                "properties": {
                                  "large": {
                                    "type": "string"
                                  },
                                  "large_height": {
                                    "type": "integer"
                                  },
                                  "large_width": {
                                    "type": "integer"
                                  },
                                  "medium": {
                                    "type": "string"
                                  },
                                  "medium_height": {
                                    "type": "integer"
                                  },
                                  "medium_width": {
                                    "type": "integer"
                                  },
                                  "raw": {
                                    "type": "string"
                                  },
                                  "small": {
                                    "type": "string"
                                  },
                                  "small_height": {
                                    "type": "integer"
                                  },
                                  "small_width": {
                                    "type": "integer"
                                  }
                                }
                              },
                              "country": {
                                "description": "The country of the Client's residential address.",
                                "example": "United States",
                                "type": "string"
                              },
                              "cross_street": {
                                "type": "string"
                              },
                              "currency_code": {
                                "type": "string"
                              },
                              "external_venue_id": {
                                "type": "string",
                                "description": "Unique identifier in an external system for a Venue.      \n> You may specify your own identifiers for Venues for various reference purposes in your own systems."
                              },
                              "full_dining_backend": {
                                "type": "boolean"
                              },
                              "grid_enabled": {
                                "type": "boolean"
                              },
                              "id": {
                                "type": "string"
                              },
                              "internal_name": {
                                "description": "Venue internally-facing name that users will see when using SevenRooms, primarily for use when differentially similarly-named venues in different locations",
                                "type": "string"
                              },
                              "membership_enabled": {
                                "type": "boolean"
                              },
                              "name": {
                                "type": "string"
                              },
                              "neighborhood": {
                                "description": "Neighborhood of venue",
                                "type": "string"
                              },
                              "phone_number": {
                                "description": "Phone number associated with the Reservation.      \n> Can be numerous valid formats, including international phone      \nnumbers. US phone numbers generally follow      \n1-xxx-xxx-xxxx.",
                                "example": "1-555-555-5555",
                                "type": "string"
                              },
                              "photos": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "policy": {
                                "type": "string"
                              },
                              "postal_code": {
                                "description": "`postal_code` value from the Client entity associated with the Reservation.",
                                "type": "string"
                              },
                              "primary_color": {
                                "description": "Venue primary color in hex",
                                "type": "string"
                              },
                              "secondary_color": {
                                "description": "Venue secondary color in hex",
                                "type": "string"
                              },
                              "state": {
                                "description": "`state` value from the Client entity associated with the Reservation.",
                                "type": "string"
                              },
                              "unique_confirmation_prefix": {
                                "description": "Unique prefix for a Venue's reservation within it's Venue Group",
                                "type": "string"
                              },
                              "venue_class": {
                                "type": "string"
                              },
                              "venue_group_id": {
                                "description": "Unique identifier of the venue group.",
                                "type": "string"
                              },
                              "venue_group_name": {
                                "type": "string"
                              },
                              "venue_url_key": {
                                "type": "string"
                              },
                              "website": {
                                "type": "string"
                              },
                              "white_logo": {
                                "type": "string"
                              },
                              "white_logo_direct": {
                                "type": "object",
                                "properties": {
                                  "large": {
                                    "type": "string"
                                  },
                                  "large_height": {
                                    "type": "integer"
                                  },
                                  "large_width": {
                                    "type": "integer"
                                  },
                                  "medium": {
                                    "type": "string"
                                  },
                                  "medium_height": {
                                    "type": "integer"
                                  },
                                  "medium_width": {
                                    "type": "integer"
                                  },
                                  "raw": {
                                    "type": "string"
                                  },
                                  "small": {
                                    "type": "string"
                                  },
                                  "small_height": {
                                    "type": "integer"
                                  },
                                  "small_width": {
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "limit": {
                          "type": "string",
                          "description": "Limit on objects returned between 1 and 400. Default is 30.",
                          "minimum": 1,
                          "maximum": 400,
                          "default": 30
                        },
                        "cursor": {
                          "type": "string",
                          "description": "Cursor for pagination"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "cursor": "",
                    "limit": 50,
                    "results": [
                      {
                        "phone_number": 12125559876,
                        "neighborhood": "Lower East Side",
                        "venue_class": "DINING",
                        "municipality": "New York",
                        "venue_group_name": "Docs Group",
                        "postal_code": 11201,
                        "id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgJCYqsOBCAw",
                        "external_venue_id": "10001-abc",
                        "unique_confirmation_prefix": "DCNY",
                        "secondary_color": "#0000ff",
                        "grid_enabled": true,
                        "venue_group_id": "ahZzfnNldmVub3BfVmVudWVHcm91cBic2VjdXJlLXFhciELEhRuaWdodGAgMjWsMTYCAwcm9vbXMtxv",
                        "internal_name": "Annie's",
                        "policy": "Thank you for your reservation. Should your plans change, please let us know 24 hours before your reservation time. We look forward to serving you.",
                        "white_logo": {},
                        "primary_color": "#000000",
                        "website": "None",
                        "photos": [],
                        "address": {
                          "street": "230 Park Avenue South",
                          "city": "New York"
                        },
                        "venue_url_key": "Annies",
                        "black_logo": {},
                        "name": "Annie's",
                        "cross_street": "13th Street",
                        "membership_enabled": false,
                        "full_dining_backend": true,
                        "municipality_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yGwsSFWxvY2F0aW9uX011bmljaXBhbGl0eRgBDA",
                        "currency_code": "USD"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venue_id}/promo_codes": {
      "get": {
        "summary": "List all Venue Promo Codes",
        "description": "Retrieve a list of Venue promo codes.",
        "operationId": "get_venue_promo_codes",
        "tags": [
          "Venue Promo Codes"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/path"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON list of Venue Promo Codes\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "promo_codes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "applicable_days_of_week": {
                                "description": "Monday is 0, Sunday is 6, [] = all days applicable",
                                "type": "boolean"
                              },
                              "applicable_entity_ids": {
                                "type": "string"
                              },
                              "applies_to_base": {
                                "type": "boolean"
                              },
                              "applies_to_upgrades": {
                                "type": "boolean"
                              },
                              "batch_id": {
                                "type": "string"
                              },
                              "can_use": {
                                "type": "boolean"
                              },
                              "code": {
                                "type": "string"
                              },
                              "code_type": {
                                "type": "string"
                              },
                              "created": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Created timestamp"
                              },
                              "credit_card_type": {
                                "description": "AMERICAN_EXPRESS, DISCOVER, MASTER_CARD, VISA, DINERS_CLUB, JCB, or NONE",
                                "type": "string"
                              },
                              "deleted": {
                                "type": "string"
                              },
                              "expires": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              },
                              "import_id": {
                                "type": "string"
                              },
                              "is_active_today": {
                                "type": "boolean"
                              },
                              "is_exhausted": {
                                "type": "boolean"
                              },
                              "is_expired": {
                                "type": "boolean"
                              },
                              "is_upcoming": {
                                "type": "boolean"
                              },
                              "key": {
                                "type": "string"
                              },
                              "key_urlsafe": {
                                "type": "string"
                              },
                              "limit": {
                                "type": "string",
                                "description": "Limit on objects returned between 1 and 400. Default is 30.",
                                "minimum": 1,
                                "maximum": 400,
                                "default": 30
                              },
                              "min_subtotal": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "platform_apply_types": {
                                "description": "RESERVATION_WIDGET, EVENT_WIDGET, or ORDERING",
                                "type": "string"
                              },
                              "promo_code_description": {
                                "type": "string"
                              },
                              "promo_component": {
                                "type": "string"
                              },
                              "promo_range_apply_type": {
                                "type": "string"
                              },
                              "promo_type": {
                                "type": "string"
                              },
                              "promo_value": {
                                "type": "number"
                              },
                              "promo_value_cap": {
                                "type": "number"
                              },
                              "start_datetime": {
                                "type": "string"
                              },
                              "unique_columns": {
                                "type": "string"
                              },
                              "updated": {
                                "type": "string"
                              },
                              "uses": {
                                "type": "number"
                              },
                              "venue_group_key": {
                                "type": "string"
                              },
                              "venue_key": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "promo_codes": [
                      {
                        "applicable_days_of_week": [],
                        "applicable_entity_ids": [],
                        "applies_to_base": true,
                        "applies_to_upgrades": true,
                        "batch_id": "None",
                        "can_use": true,
                        "code": "VOUCHERCART",
                        "code_type": "VENUE_GROUP",
                        "created": "2023-12-07T14:20:38.874800",
                        "credit_card_type": "NONE",
                        "deleted": "2024-02-28T16:27:38.874800",
                        "expires": "None",
                        "id": 5314464411942912,
                        "import_id": "None",
                        "is_active_today": true,
                        "is_exhausted": "None",
                        "is_expired": false,
                        "is_upcoming": false,
                        "key": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchkLEgxzcl9Qcm9tb0NvZGUYgIDI26KvuAkM",
                        "key_urlsafe": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchkLEgxzcl9Qcm9tb0NvZGUYgIDI26KvuAkM",
                        "limit": 1,
                        "min_subtotal": "None",
                        "name": "Text Vouchercart",
                        "platform_apply_types": [
                          "RESERVATION_WIDGET"
                        ],
                        "promo_code_description": "Vouchercart",
                        "promo_component": "ALL",
                        "promo_range_apply_type": "BOOKING_DATE",
                        "promo_type": "DOLLAR_DISCOUNT",
                        "promo_value": 10000,
                        "promo_value_cap": "None",
                        "start_datetime": "2023-03-07T15:09:30.277712",
                        "unique_columns": [],
                        "updated": "2024-01-14T14:20:38.874800",
                        "uses": 0,
                        "venue_group_key": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhciELEhRuaWdodGxvb3BfVmVudWVHcm91cBiAgMjWsMTYCAw",
                        "venue_key": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgIDI1uKdvQgM"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venue_id}/book": {
      "put": {
        "summary": "Create a Reservation",
        "description": "Book a reservation at a Venue by ID.",
        "operationId": "create_reservation",
        "tags": [
          "Reservations"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/path"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateReservation_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Object containing identifiers for the created Reservation object.\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "reservation_reference_code": {
                          "type": "string"
                        },
                        "reservation_id": {
                          "type": "string",
                          "description": "Unique identifier for the reservaiton"
                        },
                        "client_reference_code": {
                          "type": "string"
                        },
                        "client_id": {
                          "description": "Unique identifier of the Client profile",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "reservation_reference_code": "54BLG3M8",
                    "reservation_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcicLEhtuaWdodGxvb3BfUmVzZXJ2YXRpb25BY3R1YWwYwdn_2J-KBgw",
                    "client_reference_code": "9H8C1X1QC",
                    "client_id": "ahZzfnNldmVucm9vbXMVudWVHcm91XFhcicLEhpuaWdcENsaWVudBiAgJiBuenrCAwtc2VjdXJlLodGxvb3BfVm"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reservations/{reservation_id}": {
      "get": {
        "summary": "Get a Reservation",
        "description": "Retrieve a specified Reservation.",
        "operationId": "get_reservation",
        "tags": [
          "Reservations"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/reservation_id_reference_code_path"
          },
          {
            "$ref": "#/components/parameters/show_auto_assignments_query_optional"
          },
          {
            "$ref": "#/components/parameters/show_problems_query_optional"
          }
        ],
        "responses": {
          "200": {
            "description": "Object containing identifiers for the created Reservation object.\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "access_persistent_id": {
                          "type": "string",
                          "description": "Unique identifier for access as a result of the availability call for the given time slot.      \n\nAccess persistent ID from result of availability call for given time slot."
                        },
                        "address": {
                          "description": "Address first line",
                          "example": "122 West 27th Street",
                          "type": "string"
                        },
                        "address_2": {
                          "description": "Address second line",
                          "example": "7th Floor",
                          "type": "string"
                        },
                        "arrival_time": {
                          "description": "Local time for the Reservation.      \n> Times begin at 6AM. Any time considered the next day, e.g. 2AM will still be considered the same evening.",
                          "example": "5:00:00 PM",
                          "type": "string"
                        },
                        "arrived_guests": {
                          "description": "Number of people that actually arrived for the Reservation.",
                          "example": 4,
                          "type": "integer"
                        },
                        "booked_by": {
                          "description": "Client who will be accredited for booking the Reservation.",
                          "example": "Peter Jones",
                          "type": "string"
                        },
                        "check_numbers": {
                          "description": "Check numbers for the Reservation.      \n\n> Comma-delimited value, entered free form or populated via POS integration.",
                          "type": "string"
                        },
                        "city": {
                          "description": "The city of the Client's residential address.      ",
                          "example": "New York",
                          "type": "string"
                        },
                        "client_id": {
                          "description": "Unique identifier of the Client profile",
                          "type": "string"
                        },
                        "client_reference_code": {
                          "type": "string"
                        },
                        "client_requests": {
                          "description": "Requests supplied by guests at the time of booking for the Reservation.",
                          "type": "string"
                        },
                        "comps": {
                          "description": "Amount comp'd on this Reservation.      \n\n> Stored as      \n  currency of the Venue's location.",
                          "example": 1500,
                          "type": "integer"
                        },
                        "comps_price_type": {
                          "description": "The type of comp provided to the Reservation.      \n\n> Can be one of:      \n>       \n> - dollar      \n> - bottle ",
                          "example": "dollar",
                          "type": "string"
                        },
                        "cost_option": {
                          "description": "Bitfield for one of the following values:      \n\n  - Fee Dollars      \n  - Minimum Dollars      \n  - Minimum Bottles      \n  - Comp      \n  - No Min",
                          "type": "integer"
                        },
                        "country": {
                          "description": "The country of the Client's residential address.",
                          "example": "United States",
                          "type": "string"
                        },
                        "created": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Created timestamp"
                        },
                        "custom_fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "system_name": {
                                "type": "string"
                              },
                              "display_order": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Date in ISO 8601 format"
                        },
                        "deleted": {
                          "type": "string"
                        },
                        "duration": {
                          "description": "The amount of time, in minutes, for the Reservation.",
                          "example": 60,
                          "type": "integer"
                        },
                        "email": {
                          "description": "Email associated with the Reservation.      \n> All emails are validated for format prior to entry into the system.",
                          "example": "support@sevenrooms.com",
                          "type": "string"
                        },
                        "external_client_id": {
                          "description": "Client or Customer ID of the external system that      \nbooked this Reservation, if applicable.      \n\n> If the Reservation was imported as part of a booking channel integration, e.g. Google Reserve, this field will be populated with the customer ID from that channel.",
                          "example": "3215klsfda",
                          "type": "string"
                        },
                        "external_id": {
                          "description": "ID for 3rd party foreign key to this reservation      \n\n> You may specify your own identifiers for Reservations that you book via the API for various reference purposes in your own systems.",
                          "example": 55602,
                          "type": "string"
                        },
                        "external_reference_code": {
                          "description": "The reference or confirmation number of the external system      \nthat booked this Reservation, if applicable",
                          "example": "1s430snmaw",
                          "type": "string"
                        },
                        "external_user_id": {
                          "description": "Third party User ID stored on the Client profile.      \n\n> You may associate an external user account with a Client in the SevenRooms database. If the associated client for the Reservation has an `external_user_id` then that value will be returned here.",
                          "example": 55602,
                          "type": "string"
                        },
                        "first_name": {
                          "description": "The Client's first name.",
                          "example": "John",
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "is_vip": {
                          "description": "VIP status of the Client booking the Reservation.",
                          "example": true,
                          "type": "boolean"
                        },
                        "last_name": {
                          "example": "Last name of the Client booking the Reservation.",
                          "type": "string"
                        },
                        "left_time": {
                          "description": "Local time the party left the Venue.",
                          "example": "9:45:00 PM",
                          "type": "string"
                        },
                        "loyalty_id": {
                          "example": "`loyalty_id` value from the Client entity associated with the Reservation.",
                          "type": "string"
                        },
                        "loyalty_rank": {
                          "example": "`loyalty_rank` value from the Client entity.",
                          "type": "integer"
                        },
                        "loyalty_tier": {
                          "description": "`loyalty_tier` value from the Client entity associated with the Reservation..",
                          "type": "string"
                        },
                        "max_guests": {
                          "description": "Number of people expected for the Reservation.",
                          "example": 6,
                          "type": "integer"
                        },
                        "mf_ratio_female": {
                          "description": "Number of females expected for the Reservation.",
                          "example": 2,
                          "type": "integer"
                        },
                        "mf_ratio_male": {
                          "description": "Number of males expected for the Reservation.",
                          "example": 2,
                          "type": "integer"
                        },
                        "min_price": {
                          "description": "Minimum price required for the Reservation.",
                          "example": 1500,
                          "type": "integer"
                        },
                        "modify_reservation_link": {
                          "description": "Link for client to modify a reservation",
                          "example": "https://sevenrooms.com/direct/modify-reservation/MzkyNDNlNjc2OTRlZThiN2I1ZmI3Y2U4MzFjNmUwZDRmYjlmZGUzZDqAAn1xAShVGGFjdHVhbF9jcmVhdGVkX3RpbWVzdGFtcHECVRExNTY3ODAxNjY0LjY4NzU2OVUJYWN0dWFsX2lkcQNVWGFoWnpmbk5sZG1WdWNtOXZiWE10YzJWamRYSmxMWEZoY2lnTEVodHVhV2RvZEd4dmIzQmZVbVZ6WlhKMllYUnBiMjVCWTNSMVlXd1lnSURRdjlxQXNnb01xBHUu",
                          "type": "string"
                        },
                        "notes": {
                          "description": "Internal, Venue facing notes for the Reservation.",
                          "type": "string"
                        },
                        "onsite_payment": {
                          "description": "Net spend before gratuity and taxes for the Reservation.      \n> Stored as currency of the Venue's location.",
                          "example": 1105.15,
                          "type": "number"
                        },
                        "paid_by": {
                          "description": "Full name of Client that paid for the Reservation.      \n> Entered free form.",
                          "example": "Peter Jones",
                          "type": "string"
                        },
                        "phone_number": {
                          "description": "Phone number associated with the Reservation.      \n> Can be numerous valid formats, including international phone      \nnumbers. US phone numbers generally follow      \n1-xxx-xxx-xxxx.",
                          "example": "1-555-555-5555",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Reservation policy for the Reservation.",
                          "type": "string"
                        },
                        "pos_tickets": {
                          "description": "JSON dictionary of Check information, including spend information and items ordered.",
                          "example": "{ <JSON Data> }",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string"
                              },
                              "admin_fee": {
                                "type": "number"
                              },
                              "code": {
                                "type": "integer"
                              },
                              "items": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "price": {
                                      "type": "number"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "quantity": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              },
                              "table_no": {
                                "type": "string"
                              },
                              "tax": {
                                "type": "number"
                              },
                              "business_id": {
                                "type": "integer"
                              },
                              "local_pos_ticket_id": {
                                "type": "string"
                              },
                              "employee_name": {
                                "type": "string"
                              },
                              "total": {
                                "type": "number"
                              },
                              "subtotal": {
                                "type": "number"
                              },
                              "start_time": {
                                "type": "string"
                              },
                              "service_charge": {
                                "type": "number"
                              },
                              "end_time": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "postal_code": {
                          "description": "`postal_code` value from the Client entity associated with the Reservation.",
                          "type": "string"
                        },
                        "prepayment": {
                          "description": "Prepayments for the Reservation.      \n> Stored as currency of the Venue's location.",
                          "example": 1263.54,
                          "type": "number"
                        },
                        "rating": {
                          "description": "A score between 1 and 10.",
                          "type": "integer"
                        },
                        "reference_code": {
                          "description": "Guest facing Reservation number. Uniqueness      \nis scoped to a Venue. If Venue prefixes are turned on,      \nuniqueness is scoped to the Venue Group level.",
                          "example": "A34CE38",
                          "type": "string"
                        },
                        "reservation_sms_opt_in": {
                          "description": "Show opt-in for receiving SMS about reservations",
                          "type": "boolean"
                        },
                        "reservation_type": {
                          "description": "Comma-delimited list of Reservation tag names.",
                          "example": "Corporate Event, Peanut Allergy",
                          "type": "string"
                        },
                        "seated_time": {
                          "description": "Local time the party was seated at the Venue.",
                          "example": "7:00:00 PM",
                          "type": "string"
                        },
                        "send_reminder_email": {
                          "description": "If True, an email is sent to remind the guest of their reservation.",
                          "type": "boolean"
                        },
                        "send_reminder_sms": {
                          "description": "If True, a SMS is sent to remind the guest of their reservation.",
                          "type": "boolean"
                        },
                        "served_by": {
                          "description": "Full name of the server for the Reservation.",
                          "example": "Allison Richards",
                          "type": "string"
                        },
                        "hotel_confirmation": {
                          "description": "Confirmation code for the hotel (if applicable)",
                          "type": "string"
                        },
                        "hotel_id": {
                          "type": "string"
                        },
                        "hotel_room": {
                          "description": "Room at hotel (if applicable and available)",
                          "type": "string"
                        },
                        "shift_category": {
                          "type": "string"
                        },
                        "shift_persistent_id": {
                          "description": "Unique identifier of the Shift belonging to this Reservation.      \n> Concatenation of:      \n> - Venue ID      \n> - Shift Category      \n> - Timestamp when shift was created      \n>       \n> Note that Venue ID may contain dashes.",
                          "example": "ahNzfnNldmVu2dsasg- DINNER-1443199242.75",
                          "type": "string"
                        },
                        "source_client_id": {
                          "description": "Foreign key to a source Client entity.      \n> The optional source client parameter refers to the client who booked the Reservation on behalf of guest, e.g. Concierge or Assistant. ",
                          "example": "sd25swfda",
                          "type": "string"
                        },
                        "state": {
                          "description": "`state` value from the Client entity associated with the Reservation.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of the Reservation.      \n\nFor more information please see the guide on Reservation Statuses [here](https://api-docs.sevenrooms.com/guides/reservation-statuses).      \n  \n> Customizable per Venue. Default statuses include:      \n> - NOT_RECONCILED      \n> - NO_ENTRY      \n> - NO_SHOW      \n> - CANCELED      \n> - LEFT_MESSAGE      \n> - WRONG_NUMBER      \n> - CONFIRMED      \n> - PRE_ARRIVED      \n> - PRE_PARTIALLY_ARRIVED      \n> - ARRIVED       \n> - ARRIVED_PARTIAL      \n> - LATE      \n> - 1ST_COURSE      \n> - 2ND_COURSE      \n> - 3RD_COURSE      \n> - DESSERT      \n> - CHECK_DROPPED      \n> - PAID      \n> - BUS_TABLE      \n> - COMPLETE      ",
                          "type": "string"
                        },
                        "status_display": {
                          "description": "Venue-configured display value for the status database      \nvalues.      \n      \nFor more information please see the guide on Reservation Statuses [here](https://api-docs.sevenrooms.com/guides/reservation-statuses).      \n\n> Configurable in Venue settings.",
                          "example": "Appetizer",
                          "type": "string"
                        },
                        "status_simple": {
                          "description": "A value of one of the following statuses:      \n- Incomplete      \n- Complete      \n- Canceled      \n- No Show      \n- No Entry      \n      \nFor more information please see the guide on Reservation Statuses [here](https://api-docs.sevenrooms.com/guides/reservation-statuses).      \n      \n> Canceled, No Show, and No Entry are specifically      \ncalled out. All other pre-service statuses (e.g.      \nBooked, Left Message) are valued as Incomplete. Any inservice      \nstatus (e.g. Seated, Left) is valued as Complete. Subject to future additions.",
                          "example": "Incomplete",
                          "type": "string"
                        },
                        "table_numbers": {
                          "description": "Comma-delimited table numbers for the Reservation.",
                          "example": "DJ, 05, 27",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "tags": {
                          "type": "array"
                        },
                        "total_payment": {
                          "description": "Sum of `prepayment` and `onsite_payment` for the Reservation.",
                          "example": 1303.09,
                          "type": "integer"
                        },
                        "updated": {
                          "type": "string"
                        },
                        "user": {
                          "description": "The SevenRooms User who created the Reservation.",
                          "example": "Chris Walker",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "venue_group_client_id": {
                          "description": "Foreign key to a Venue Group client entity.",
                          "type": "string"
                        },
                        "venue_group_id": {
                          "description": "Unique identifier of the venue group.",
                          "type": "string"
                        },
                        "venue_id": {
                          "description": "Unique identifier of the venue.",
                          "type": "string"
                        },
                        "venue_seating_area_id": {
                          "description": "The id of the seating area.  This attribute will be populated once the table has been assigned",
                          "example": "T1",
                          "type": "string"
                        },
                        "venue_seating_area_name": {
                          "description": "The name of the seating area.  This attribute will be populated once the table has been assigned",
                          "example": "Lounge",
                          "type": "string"
                        },
                        "auto_assignments": {
                          "type": "object",
                          "description": "Information about the Reservation's auto-assigned table(s).",
                          "properties": {
                            "table_codes": {
                              "type": "array",
                              "description": "One or more table codes auto-assigned to this Reservation.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "sort_order": {
                              "type": "integer",
                              "description": "The tables sort order as configured in the SevenRooms Web Portal."
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the guest auto-assigned to the table(s)."
                            },
                            "table_ids": {
                              "type": "array",
                              "description": "One or more unique table IDs auto-assigned to this Reservation.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "is_reassigned": {
                              "type": "boolean",
                              "description": "Whether or not the auto-assignment was later reassigned to a different table when the guest was seated."
                            }
                          }
                        },
                        "problems": {
                          "type": "object",
                          "description": "Information regarding any problems that exist because of the Reservation's table assignment.",
                          "properties": {
                            "[actual_id]": {
                              "type": "object",
                              "properties": {
                                "problem_name": {
                                  "type": "string"
                                },
                                "is_major": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "rating": 4.2,
                    "last_name": "Doe",
                    "external_reference_code": "DH12J78",
                    "send_reminder_email": false,
                    "external_user_id": "abczyx123",
                    "updated": "2024-01-14T14:20:38.874800",
                    "check_numbers": null,
                    "shift_persistent_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkM-BREAKFAST-1552491652.9",
                    "left_time": "None",
                    "email": "jane.doe@gmail.com",
                    "status_simple": "Complete",
                    "postal_code": 11201,
                    "comps_price_type": "dollar",
                    "duration": "None",
                    "modify_reservation_link": "https://sevenrooms.com/direct/modify-reservation/MzkyNDNlNjc2OTRlZThiN2I1ZmI3Y2U4MzFjNmUwZDRmYjlmZGUzZDqAAn1xAShVGGFjdHVhbF9jcmVhdGVkX3RpbWVzdGFtcHECVRExNTY3ODAxNjY0LjY4NzU2OVUJYWN0dWFsX2lkcQNVWGFoWnpmbk5sZG1WdWNtOXZiWE10YzJWamRYSmxMWEZoY2lnTEVodHVhV2RvZEd4dmIzQmZVbVZ6WlhKMllYUnBiMjVCWTNSMVlXd1lnSURRdjlxQXNnb01xBHUu",
                    "id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcigLEhtuaWdodGxvb3BfUmVzZXJ2YXRpb25BY3R1YWwYgIDQv9qAsgoM",
                    "reservation_type": null,
                    "seated_time": "None",
                    "first_name": "Jane",
                    "venue_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkM",
                    "reservation_sms_opt_in": "None",
                    "venue_group_client_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhciYLEhpuaWdodGxvb3BfVmVudWVHcm91cENsaWVudBiRqJmaoYoGDA",
                    "arrived_guests": 5,
                    "client_reference_code": "9H8C1X1QC",
                    "state": "NY",
                    "send_reminder_sms": false,
                    "venue_group_id": "ahZzfnNldmVub3BfVmVudWVHcm91cBic2VjdXJlLXFhciELEhRuaWdodGAgMjWsMTYCAwcm9vbXMtxv",
                    "address_2": "None",
                    "min_price": "None",
                    "custom_fields": [],
                    "policy": null,
                    "served_by": "None",
                    "client_requests": "None",
                    "status": "COMPLETE",
                    "booked_by": "Paul Smith",
                    "phone_number": 12125559876,
                    "total_payment": 50,
                    "prepayment": 65,
                    "loyalty_id": "zyxabx987",
                    "tags": "",
                    "deleted": "None",
                    "mf_ratio_male": "None",
                    "mf_ratio_female": "None",
                    "comps": "None",
                    "external_client_id": "None",
                    "client_id": "ahZzfnNldmVucm9vbXMVudWVHcm91XFhcicLEhpuaWdcENsaWVudBiAgJiBuenrCAwtc2VjdXJlLodGxvb3BfVm",
                    "city": "New York",
                    "address": {
                      "street": "230 Park Avenue South",
                      "city": "New York"
                    },
                    "date": "2023-10-11",
                    "source_client_id": "None",
                    "loyalty_rank": 3,
                    "paid_by": null,
                    "loyalty_tier": "Platinum",
                    "shift_category": "BREAKFAST",
                    "table_numbers": [
                      "002"
                    ],
                    "max_guests": 5,
                    "arrival_time": "6:00 AM",
                    "country": "United States",
                    "cost_option": 0,
                    "created": "2023-09-07T14:20:38.874800",
                    "pos_tickets": "None",
                    "access_persistent_id": "ahFkZXZ-bmlnaHRsb29wLW5ld3IcCxIPbmlnaHRsb29wX1ZlbnVlGICAgICAjtUJDA-1569360529.21-0.580892461024",
                    "is_vip": false,
                    "reference_code": "7D0HP84OJK8",
                    "status_display": "Left",
                    "external_id": "None",
                    "notes": "Comes in for business meetings",
                    "user": {
                      "id": "ahZzfnNldmi2uPzzCQwVucmnYWVfVXNlchiA9vbXMtc2VjdXJlLXFhchULEghgM",
                      "name": "Integrator Group"
                    },
                    "auto_assignments": {
                      "table_codes": [
                        "10"
                      ],
                      "sort_order": 33,
                      "name": "Ms Jane Doe",
                      "table_ids": [
                        "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yggELEhFUYWJsZUl0ZW1BbmNlc3RvciJLYWhoemZuTmxkbVZ1Y205dmJYTXRjMlZqZFhKbExXUmxiVzl5SEFzU0QyNXBaMmgwYkc5dmNGOVdaVzUxWlJpQWdOQ0t1WWV6Q2d3DAsSE25pZ2h0bG9vcF9UYWJsZUl0ZW0YgIDQ0u3F4gsM"
                      ],
                      "is_reassigned": false
                    },
                    "problems": {
                      "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcigLEhtuaWdodGxvb3BfUmVzZXJ2YXRpb25BY3R1YWwYgIDQv9qAsgoM": {
                        "problem_name": "The reservation is too small for the current table",
                        "is_major": false
                      }
                    },
                    "real_datetime_of_slot": "2023-10-11 6:00:00",
                    "time_slot_iso": "6:00:00",
                    "venue_seating_area_name": null,
                    "venue_seating_area_id": "None",
                    "prepayment_total": 0,
                    "prepayment_net": "None",
                    "prepayment_service_charge": "None",
                    "prepayment_tax": "None",
                    "prepayment_gratuity": "None",
                    "onsite_payment": "None",
                    "onsite_payment_net": "None",
                    "onsite_payment_tax": "None",
                    "onsite_payment_gratuity": "None",
                    "onsite_payment_total": 0,
                    "total_net_payment": 0,
                    "total_gross_payment": 0,
                    "using_default_duration": false,
                    "hotel_confirmation": "None",
                    "hotel_id": "None",
                    "hotel_room": "None",
                    "upgrades": [
                      {
                        "inventory_id": "ahZzfnNldmVucm9vbXMtbnRvcnkYgIDI843suaWdodGxvb3BfVmVudWUYgIDI3fTMlgoMCxIac3JfVXBzZWxsQ2F0ZWdvcnlJbnZlbnRvcnkYgIDI843s6wgM",
                        "category_id": "ahZzfnNldmTMlgoMCxIRc3JfEg9uaWdodGxvb3BfVmVudWUYgIDI3fTMlgoMCxIRc3JfVXBzZWxsQ2F0ZWdvcnkYgIDIi5PSnggM",
                        "name": "Flowers",
                        "quantity": 2,
                        "price": 100,
                        "pos_item_id": ""
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Update a Reservation",
        "description": "Update a specified Reservation.",
        "operationId": "update_reservation",
        "tags": [
          "Reservations"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/reservation_id_reference_code_path"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReservation_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Reservation object\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "access_persistent_id": {
                          "type": "string",
                          "description": "Unique identifier for access as a result of the availability call for the given time slot.      \n\nAccess persistent ID from result of availability call for given time slot."
                        },
                        "address": {
                          "description": "Address first line",
                          "example": "122 West 27th Street",
                          "type": "string"
                        },
                        "address_2": {
                          "description": "Address second line",
                          "example": "7th Floor",
                          "type": "string"
                        },
                        "arrival_time": {
                          "description": "Local time for the Reservation.      \n> Times begin at 6AM. Any time considered the next day, e.g. 2AM will still be considered the same evening.",
                          "example": "5:00:00 PM",
                          "type": "string"
                        },
                        "arrived_guests": {
                          "description": "Number of people that actually arrived for the Reservation.",
                          "example": 4,
                          "type": "integer"
                        },
                        "booked_by": {
                          "description": "Client who will be accredited for booking the Reservation.",
                          "example": "Peter Jones",
                          "type": "string"
                        },
                        "check_numbers": {
                          "description": "Check numbers for the Reservation.      \n\n> Comma-delimited value, entered free form or populated via POS integration.",
                          "type": "string"
                        },
                        "city": {
                          "description": "The city of the Client's residential address.      ",
                          "example": "New York",
                          "type": "string"
                        },
                        "client_id": {
                          "description": "Unique identifier of the Client profile",
                          "type": "string"
                        },
                        "client_reference_code": {
                          "type": "string"
                        },
                        "client_requests": {
                          "description": "Requests supplied by guests at the time of booking for the Reservation.",
                          "type": "string"
                        },
                        "comps": {
                          "description": "Amount comp'd on this Reservation.      \n\n> Stored as      \n  currency of the Venue's location.",
                          "example": 1500,
                          "type": "integer"
                        },
                        "comps_price_type": {
                          "description": "The type of comp provided to the Reservation.      \n\n> Can be one of:      \n>       \n> - dollar      \n> - bottle ",
                          "example": "dollar",
                          "type": "string"
                        },
                        "cost_option": {
                          "description": "Bitfield for one of the following values:      \n\n  - Fee Dollars      \n  - Minimum Dollars      \n  - Minimum Bottles      \n  - Comp      \n  - No Min",
                          "type": "integer"
                        },
                        "country": {
                          "description": "The country of the Client's residential address.",
                          "example": "United States",
                          "type": "string"
                        },
                        "created": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Created timestamp"
                        },
                        "custom_fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "system_name": {
                                "type": "string"
                              },
                              "display_order": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Date in ISO 8601 format"
                        },
                        "deleted": {
                          "type": "string"
                        },
                        "duration": {
                          "description": "The amount of time, in minutes, for the Reservation.",
                          "example": 60,
                          "type": "integer"
                        },
                        "email": {
                          "description": "Email associated with the Reservation.      \n> All emails are validated for format prior to entry into the system.",
                          "example": "support@sevenrooms.com",
                          "type": "string"
                        },
                        "external_client_id": {
                          "description": "Client or Customer ID of the external system that      \nbooked this Reservation, if applicable.      \n\n> If the Reservation was imported as part of a booking channel integration, e.g. Google Reserve, this field will be populated with the customer ID from that channel.",
                          "example": "3215klsfda",
                          "type": "string"
                        },
                        "external_id": {
                          "description": "ID for 3rd party foreign key to this reservation      \n\n> You may specify your own identifiers for Reservations that you book via the API for various reference purposes in your own systems.",
                          "example": 55602,
                          "type": "string"
                        },
                        "external_reference_code": {
                          "description": "The reference or confirmation number of the external system      \nthat booked this Reservation, if applicable",
                          "example": "1s430snmaw",
                          "type": "string"
                        },
                        "external_user_id": {
                          "description": "Third party User ID stored on the Client profile.      \n\n> You may associate an external user account with a Client in the SevenRooms database. If the associated client for the Reservation has an `external_user_id` then that value will be returned here.",
                          "example": 55602,
                          "type": "string"
                        },
                        "first_name": {
                          "description": "The Client's first name.",
                          "example": "John",
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "is_vip": {
                          "description": "VIP status of the Client booking the Reservation.",
                          "example": true,
                          "type": "boolean"
                        },
                        "last_name": {
                          "example": "Last name of the Client booking the Reservation.",
                          "type": "string"
                        },
                        "left_time": {
                          "description": "Local time the party left the Venue.",
                          "example": "9:45:00 PM",
                          "type": "string"
                        },
                        "loyalty_id": {
                          "example": "`loyalty_id` value from the Client entity associated with the Reservation.",
                          "type": "string"
                        },
                        "loyalty_rank": {
                          "example": "`loyalty_rank` value from the Client entity.",
                          "type": "integer"
                        },
                        "loyalty_tier": {
                          "description": "`loyalty_tier` value from the Client entity associated with the Reservation..",
                          "type": "string"
                        },
                        "max_guests": {
                          "description": "Number of people expected for the Reservation.",
                          "example": 6,
                          "type": "integer"
                        },
                        "mf_ratio_female": {
                          "description": "Number of females expected for the Reservation.",
                          "example": 2,
                          "type": "integer"
                        },
                        "mf_ratio_male": {
                          "description": "Number of males expected for the Reservation.",
                          "example": 2,
                          "type": "integer"
                        },
                        "min_price": {
                          "description": "Minimum price required for the Reservation.",
                          "example": 1500,
                          "type": "integer"
                        },
                        "modify_reservation_link": {
                          "description": "Link for client to modify a reservation",
                          "example": "https://sevenrooms.com/direct/modify-reservation/MzkyNDNlNjc2OTRlZThiN2I1ZmI3Y2U4MzFjNmUwZDRmYjlmZGUzZDqAAn1xAShVGGFjdHVhbF9jcmVhdGVkX3RpbWVzdGFtcHECVRExNTY3ODAxNjY0LjY4NzU2OVUJYWN0dWFsX2lkcQNVWGFoWnpmbk5sZG1WdWNtOXZiWE10YzJWamRYSmxMWEZoY2lnTEVodHVhV2RvZEd4dmIzQmZVbVZ6WlhKMllYUnBiMjVCWTNSMVlXd1lnSURRdjlxQXNnb01xBHUu",
                          "type": "string"
                        },
                        "notes": {
                          "description": "Internal, Venue facing notes for the Reservation.",
                          "type": "string"
                        },
                        "onsite_payment": {
                          "description": "Net spend before gratuity and taxes for the Reservation.      \n> Stored as currency of the Venue's location.",
                          "example": 1105.15,
                          "type": "number"
                        },
                        "paid_by": {
                          "description": "Full name of Client that paid for the Reservation.      \n> Entered free form.",
                          "example": "Peter Jones",
                          "type": "string"
                        },
                        "phone_number": {
                          "description": "Phone number associated with the Reservation.      \n> Can be numerous valid formats, including international phone      \nnumbers. US phone numbers generally follow      \n1-xxx-xxx-xxxx.",
                          "example": "1-555-555-5555",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Reservation policy for the Reservation.",
                          "type": "string"
                        },
                        "pos_tickets": {
                          "description": "JSON dictionary of Check information, including spend information and items ordered.",
                          "example": "{ <JSON Data> }",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string"
                              },
                              "admin_fee": {
                                "type": "number"
                              },
                              "code": {
                                "type": "integer"
                              },
                              "items": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "price": {
                                      "type": "number"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "quantity": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              },
                              "table_no": {
                                "type": "string"
                              },
                              "tax": {
                                "type": "number"
                              },
                              "business_id": {
                                "type": "integer"
                              },
                              "local_pos_ticket_id": {
                                "type": "string"
                              },
                              "employee_name": {
                                "type": "string"
                              },
                              "total": {
                                "type": "number"
                              },
                              "subtotal": {
                                "type": "number"
                              },
                              "start_time": {
                                "type": "string"
                              },
                              "service_charge": {
                                "type": "number"
                              },
                              "end_time": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "postal_code": {
                          "description": "`postal_code` value from the Client entity associated with the Reservation.",
                          "type": "string"
                        },
                        "prepayment": {
                          "description": "Prepayments for the Reservation.      \n> Stored as currency of the Venue's location.",
                          "example": 1263.54,
                          "type": "number"
                        },
                        "rating": {
                          "description": "A score between 1 and 10.",
                          "type": "integer"
                        },
                        "reference_code": {
                          "description": "Guest facing Reservation number. Uniqueness      \nis scoped to a Venue. If Venue prefixes are turned on,      \nuniqueness is scoped to the Venue Group level.",
                          "example": "A34CE38",
                          "type": "string"
                        },
                        "reservation_sms_opt_in": {
                          "description": "Show opt-in for receiving SMS about reservations",
                          "type": "boolean"
                        },
                        "reservation_type": {
                          "description": "Comma-delimited list of Reservation tag names.",
                          "example": "Corporate Event, Peanut Allergy",
                          "type": "string"
                        },
                        "seated_time": {
                          "description": "Local time the party was seated at the Venue.",
                          "example": "7:00:00 PM",
                          "type": "string"
                        },
                        "send_reminder_email": {
                          "description": "If True, an email is sent to remind the guest of their reservation.",
                          "type": "boolean"
                        },
                        "send_reminder_sms": {
                          "description": "If True, a SMS is sent to remind the guest of their reservation.",
                          "type": "boolean"
                        },
                        "served_by": {
                          "description": "Full name of the server for the Reservation.",
                          "example": "Allison Richards",
                          "type": "string"
                        },
                        "hotel_confirmation": {
                          "description": "Confirmation code for the hotel (if applicable)",
                          "type": "string"
                        },
                        "hotel_id": {
                          "type": "string"
                        },
                        "hotel_room": {
                          "description": "Room at hotel (if applicable and available)",
                          "type": "string"
                        },
                        "shift_category": {
                          "type": "string"
                        },
                        "shift_persistent_id": {
                          "description": "Unique identifier of the Shift belonging to this Reservation.      \n> Concatenation of:      \n> - Venue ID      \n> - Shift Category      \n> - Timestamp when shift was created      \n>       \n> Note that Venue ID may contain dashes.",
                          "example": "ahNzfnNldmVu2dsasg- DINNER-1443199242.75",
                          "type": "string"
                        },
                        "source_client_id": {
                          "description": "Foreign key to a source Client entity.      \n> The optional source client parameter refers to the client who booked the Reservation on behalf of guest, e.g. Concierge or Assistant. ",
                          "example": "sd25swfda",
                          "type": "string"
                        },
                        "state": {
                          "description": "`state` value from the Client entity associated with the Reservation.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of the Reservation.      \n\nFor more information please see the guide on Reservation Statuses [here](https://api-docs.sevenrooms.com/guides/reservation-statuses).      \n  \n> Customizable per Venue. Default statuses include:      \n> - NOT_RECONCILED      \n> - NO_ENTRY      \n> - NO_SHOW      \n> - CANCELED      \n> - LEFT_MESSAGE      \n> - WRONG_NUMBER      \n> - CONFIRMED      \n> - PRE_ARRIVED      \n> - PRE_PARTIALLY_ARRIVED      \n> - ARRIVED       \n> - ARRIVED_PARTIAL      \n> - LATE      \n> - 1ST_COURSE      \n> - 2ND_COURSE      \n> - 3RD_COURSE      \n> - DESSERT      \n> - CHECK_DROPPED      \n> - PAID      \n> - BUS_TABLE      \n> - COMPLETE      ",
                          "type": "string"
                        },
                        "status_display": {
                          "description": "Venue-configured display value for the status database      \nvalues.      \n      \nFor more information please see the guide on Reservation Statuses [here](https://api-docs.sevenrooms.com/guides/reservation-statuses).      \n\n> Configurable in Venue settings.",
                          "example": "Appetizer",
                          "type": "string"
                        },
                        "status_simple": {
                          "description": "A value of one of the following statuses:      \n- Incomplete      \n- Complete      \n- Canceled      \n- No Show      \n- No Entry      \n      \nFor more information please see the guide on Reservation Statuses [here](https://api-docs.sevenrooms.com/guides/reservation-statuses).      \n      \n> Canceled, No Show, and No Entry are specifically      \ncalled out. All other pre-service statuses (e.g.      \nBooked, Left Message) are valued as Incomplete. Any inservice      \nstatus (e.g. Seated, Left) is valued as Complete. Subject to future additions.",
                          "example": "Incomplete",
                          "type": "string"
                        },
                        "table_numbers": {
                          "description": "Comma-delimited table numbers for the Reservation.",
                          "example": "DJ, 05, 27",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "tags": {
                          "type": "array"
                        },
                        "total_payment": {
                          "description": "Sum of `prepayment` and `onsite_payment` for the Reservation.",
                          "example": 1303.09,
                          "type": "integer"
                        },
                        "updated": {
                          "type": "string"
                        },
                        "user": {
                          "description": "The SevenRooms User who created the Reservation.",
                          "example": "Chris Walker",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "venue_group_client_id": {
                          "description": "Foreign key to a Venue Group client entity.",
                          "type": "string"
                        },
                        "venue_group_id": {
                          "description": "Unique identifier of the venue group.",
                          "type": "string"
                        },
                        "venue_id": {
                          "description": "Unique identifier of the venue.",
                          "type": "string"
                        },
                        "venue_seating_area_id": {
                          "description": "The id of the seating area.  This attribute will be populated once the table has been assigned",
                          "example": "T1",
                          "type": "string"
                        },
                        "venue_seating_area_name": {
                          "description": "The name of the seating area.  This attribute will be populated once the table has been assigned",
                          "example": "Lounge",
                          "type": "string"
                        },
                        "auto_assignments": {
                          "type": "object",
                          "description": "Information about the Reservation's auto-assigned table(s).",
                          "properties": {
                            "table_codes": {
                              "type": "array",
                              "description": "One or more table codes auto-assigned to this Reservation.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "sort_order": {
                              "type": "integer",
                              "description": "The tables sort order as configured in the SevenRooms Web Portal."
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the guest auto-assigned to the table(s)."
                            },
                            "table_ids": {
                              "type": "array",
                              "description": "One or more unique table IDs auto-assigned to this Reservation.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "is_reassigned": {
                              "type": "boolean",
                              "description": "Whether or not the auto-assignment was later reassigned to a different table when the guest was seated."
                            }
                          }
                        },
                        "problems": {
                          "type": "object",
                          "description": "Information regarding any problems that exist because of the Reservation's table assignment.",
                          "properties": {
                            "[actual_id]": {
                              "type": "object",
                              "properties": {
                                "problem_name": {
                                  "type": "string"
                                },
                                "is_major": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "rating": 4.2,
                    "last_name": "Doe",
                    "external_reference_code": "DH12J78",
                    "send_reminder_email": false,
                    "external_user_id": "abczyx123",
                    "updated": "2024-01-14T14:20:38.874800",
                    "check_numbers": null,
                    "shift_persistent_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkM-BREAKFAST-1552491652.9",
                    "left_time": "None",
                    "email": "jane.doe@gmail.com",
                    "status_simple": "Complete",
                    "postal_code": 11201,
                    "comps_price_type": "dollar",
                    "duration": "None",
                    "modify_reservation_link": "https://sevenrooms.com/direct/modify-reservation/MzkyNDNlNjc2OTRlZThiN2I1ZmI3Y2U4MzFjNmUwZDRmYjlmZGUzZDqAAn1xAShVGGFjdHVhbF9jcmVhdGVkX3RpbWVzdGFtcHECVRExNTY3ODAxNjY0LjY4NzU2OVUJYWN0dWFsX2lkcQNVWGFoWnpmbk5sZG1WdWNtOXZiWE10YzJWamRYSmxMWEZoY2lnTEVodHVhV2RvZEd4dmIzQmZVbVZ6WlhKMllYUnBiMjVCWTNSMVlXd1lnSURRdjlxQXNnb01xBHUu",
                    "id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcigLEhtuaWdodGxvb3BfUmVzZXJ2YXRpb25BY3R1YWwYgIDQv9qAsgoM",
                    "reservation_type": null,
                    "seated_time": "None",
                    "first_name": "Jane",
                    "venue_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkM",
                    "reservation_sms_opt_in": "None",
                    "venue_group_client_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhciYLEhpuaWdodGxvb3BfVmVudWVHcm91cENsaWVudBiRqJmaoYoGDA",
                    "arrived_guests": 5,
                    "client_reference_code": "9H8C1X1QC",
                    "state": "NY",
                    "send_reminder_sms": false,
                    "venue_group_id": "ahZzfnNldmVub3BfVmVudWVHcm91cBic2VjdXJlLXFhciELEhRuaWdodGAgMjWsMTYCAwcm9vbXMtxv",
                    "address_2": "None",
                    "min_price": "None",
                    "custom_fields": [],
                    "policy": null,
                    "served_by": "None",
                    "client_requests": "None",
                    "status": "COMPLETE",
                    "booked_by": "Paul Smith",
                    "phone_number": 12125559876,
                    "total_payment": 50,
                    "prepayment": 65,
                    "loyalty_id": "zyxabx987",
                    "tags": "",
                    "deleted": "None",
                    "mf_ratio_male": "None",
                    "mf_ratio_female": "None",
                    "comps": "None",
                    "external_client_id": "None",
                    "client_id": "ahZzfnNldmVucm9vbXMVudWVHcm91XFhcicLEhpuaWdcENsaWVudBiAgJiBuenrCAwtc2VjdXJlLodGxvb3BfVm",
                    "city": "New York",
                    "address": {
                      "street": "230 Park Avenue South",
                      "city": "New York"
                    },
                    "date": "2023-10-11",
                    "source_client_id": "None",
                    "loyalty_rank": 3,
                    "paid_by": null,
                    "loyalty_tier": "Platinum",
                    "shift_category": "BREAKFAST",
                    "table_numbers": [
                      "002"
                    ],
                    "max_guests": 5,
                    "arrival_time": "6:00 AM",
                    "country": "United States",
                    "cost_option": 0,
                    "created": "2023-09-07T14:20:38.874800",
                    "pos_tickets": "None",
                    "access_persistent_id": "ahFkZXZ-bmlnaHRsb29wLW5ld3IcCxIPbmlnaHRsb29wX1ZlbnVlGICAgICAjtUJDA-1569360529.21-0.580892461024",
                    "is_vip": false,
                    "reference_code": "7D0HP84OJK8",
                    "status_display": "Left",
                    "external_id": "None",
                    "notes": "Comes in for business meetings",
                    "user": {
                      "id": "ahZzfnNldmi2uPzzCQwVucmnYWVfVXNlchiA9vbXMtc2VjdXJlLXFhchULEghgM",
                      "name": "Integrator Group"
                    },
                    "auto_assignments": {
                      "table_codes": [
                        "10"
                      ],
                      "sort_order": 33,
                      "name": "Ms Jane Doe",
                      "table_ids": [
                        "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yggELEhFUYWJsZUl0ZW1BbmNlc3RvciJLYWhoemZuTmxkbVZ1Y205dmJYTXRjMlZqZFhKbExXUmxiVzl5SEFzU0QyNXBaMmgwYkc5dmNGOVdaVzUxWlJpQWdOQ0t1WWV6Q2d3DAsSE25pZ2h0bG9vcF9UYWJsZUl0ZW0YgIDQ0u3F4gsM"
                      ],
                      "is_reassigned": false
                    },
                    "problems": {
                      "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcigLEhtuaWdodGxvb3BfUmVzZXJ2YXRpb25BY3R1YWwYgIDQv9qAsgoM": {
                        "problem_name": "The reservation is too small for the current table",
                        "is_major": false
                      }
                    },
                    "real_datetime_of_slot": "2023-10-11 6:00:00",
                    "time_slot_iso": "6:00:00",
                    "venue_seating_area_name": null,
                    "venue_seating_area_id": "None",
                    "prepayment_total": 0,
                    "prepayment_net": "None",
                    "prepayment_service_charge": "None",
                    "prepayment_tax": "None",
                    "prepayment_gratuity": "None",
                    "onsite_payment": "None",
                    "onsite_payment_net": "None",
                    "onsite_payment_tax": "None",
                    "onsite_payment_gratuity": "None",
                    "onsite_payment_total": 0,
                    "total_net_payment": 0,
                    "total_gross_payment": 0,
                    "using_default_duration": false,
                    "hotel_confirmation": "None",
                    "hotel_id": "None",
                    "hotel_room": "None",
                    "upgrades": [
                      {
                        "inventory_id": "ahZzfnNldmVucm9vbXMtbnRvcnkYgIDI843suaWdodGxvb3BfVmVudWUYgIDI3fTMlgoMCxIac3JfVXBzZWxsQ2F0ZWdvcnlJbnZlbnRvcnkYgIDI843s6wgM",
                        "category_id": "ahZzfnNldmTMlgoMCxIRc3JfEg9uaWdodGxvb3BfVmVudWUYgIDI3fTMlgoMCxIRc3JfVXBzZWxsQ2F0ZWdvcnkYgIDIi5PSnggM",
                        "name": "Flowers",
                        "quantity": 2,
                        "price": 100,
                        "pos_item_id": ""
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reservations/updates": {
      "post": {
        "summary": "Bulk Reservation Status and Table Update",
        "description": "Pass in a json payload in the body with a list of reservations you would like to update.\n\nFor each reservation, you need to have a `reservation_id` and the fields you would like to update.\n\nYou can update up to 200 reservations per API call. If you want to play it safe, batch it as 50 or 100 reservations per API call.",
        "operationId": "bulk_reservations_update",
        "tags": [
          "Reservations"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/save_partial_query_optional"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BulkStatusTableUpdate_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Reservation Update (All)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "reservation_reference_code": {
                            "type": "string"
                          },
                          "reservation_id": {
                            "type": "string",
                            "description": "Unique identifier for the reservaiton"
                          },
                          "client_reference_code": {
                            "type": "string"
                          },
                          "client_id": {
                            "description": "Unique identifier of the Client profile",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "reservation_reference_code": "54BLG3M8",
                    "reservation_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcicLEhtuaWdodGxvb3BfUmVzZXJ2YXRpb25BY3R1YWwYwdn_2J-KBgw",
                    "client_reference_code": "9H8C1X1QC",
                    "client_id": "ahZzfnNldmVucm9vbXMVudWVHcm91XFhcicLEhpuaWdcENsaWVudBiAgJiBuenrCAwtc2VjdXJlLodGxvb3BfVm"
                  }
                }
              }
            }
          },
          "400": {
            "description": "If partial or full error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "error_count": {
                          "type": "string"
                        },
                        "updated": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "reservation_id": {
                                "type": "string"
                              },
                              "client_reference_code": {
                                "type": "string"
                              },
                              "client_id": {
                                "type": "string"
                              },
                              "reservation_reference_code": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "error_message": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "reservation_id": {
                                "type": "string"
                              },
                              "error_message": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 400,
                  "data": {
                    "error_count": 1,
                    "updated": [
                      {
                        "reservation_reference_code": "54BLG3M8",
                        "reservation_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcicLEhtuaWdodGxvb3BfUmVzZXJ2YXRpb25BY3R1YWwYwdn_2J-KBgw",
                        "client_reference_code": "9H8C1X1QC",
                        "client_id": "ahZzfnNldmVucm9vbXMVudWVHcm91XFhcicLEhpuaWdcENsaWVudBiAgJiBuenrCAwtc2VjdXJlLodGxvb3BfVm"
                      }
                    ],
                    "error_message": [
                      {
                        "reservation_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcicLEhtuaWdodGxvb3BfUmVzZXJ2YXRpb25BY3R1YWwYwdn_2J-KBgw",
                        "error_message": "{\\\"status\\\": 400, \\\"code\\\": 400, \\\"msg\\\": \\\"CANCELED is not a valid status\\\"}"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/venue_groups/{venue_group_id}/availability": {
      "get": {
        "summary": "Get Venue Group Availability",
        "description": "Retrieve Availability for a specified Venue Group.",
        "operationId": "get_venue_group_availability",
        "tags": [
          "Availability"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/venue_group_id_path"
          },
          {
            "$ref": "#/components/parameters/query_required"
          },
          {
            "$ref": "#/components/parameters/slot_start_time_query_required"
          },
          {
            "$ref": "#/components/parameters/slot_end_time_query_required"
          },
          {
            "$ref": "#/components/parameters/party_size_query_required"
          },
          {
            "$ref": "#/components/parameters/municipality_id_query_optional"
          },
          {
            "$ref": "#/components/parameters/prev_reservation_hold_id_query_optional"
          },
          {
            "$ref": "#/components/parameters/prev_reservation_id_query_optional"
          },
          {
            "$ref": "#/components/parameters/include_payments_by_paylink_query_optional"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON list of Availability objects per shift. Each shift contains a `times` property with per time slot availability for each Venue in the Venue Group (optionally filtered by municipality).\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**\n\nTime Slot Types\n----------------\n| Type | Description |\n|-------|---------------- |\n| book | Time slot is available for booking. |\n| request | Time slot is accepting reservation requests. |",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "limit": {
                          "type": "string",
                          "description": "Limit on objects returned between 1 and 400. Default is 30.",
                          "minimum": 1,
                          "maximum": 400,
                          "default": 30
                        },
                        "cursor": {
                          "type": "string",
                          "description": "Cursor for pagination"
                        },
                        "availability": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "venue_id": {
                                "description": "Unique identifier of the venue.",
                                "type": "string"
                              },
                              "venue_name": {
                                "type": "string"
                              },
                              "availability": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "shift_persistent_id": {
                                      "description": "Unique identifier of the Shift belonging to this Reservation.      \n> Concatenation of:      \n> - Venue ID      \n> - Shift Category      \n> - Timestamp when shift was created      \n>       \n> Note that Venue ID may contain dashes.",
                                      "example": "ahNzfnNldmVu2dsasg- DINNER-1443199242.75",
                                      "type": "string"
                                    },
                                    "shift_id": {
                                      "type": "string"
                                    },
                                    "shift_category": {
                                      "type": "string"
                                    },
                                    "is_closed": {
                                      "type": "boolean"
                                    },
                                    "upsell_categories": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "times": {
                                      "type": "array",
                                      "items": {
                                        "properties": {
                                          "access_persistent_id": {
                                            "type": "string",
                                            "description": "Unique identifier for access as a result of the availability call for the given time slot.      \n\nAccess persistent ID from result of availability call for given time slot."
                                          },
                                          "access_seating_area_id": {
                                            "type": "string"
                                          },
                                          "cancellation_policy": {
                                            "type": "string"
                                          },
                                          "cc_party_size_min": {
                                            "type": "integer"
                                          },
                                          "cc_payment_rule": {
                                            "type": "string"
                                          },
                                          "charge_type": {
                                            "type": "string"
                                          },
                                          "cost": {
                                            "type": "integer"
                                          },
                                          "duration": {
                                            "description": "The amount of time, in minutes, for the Reservation.",
                                            "example": 60,
                                            "type": "integer"
                                          },
                                          "gratuity": {
                                            "type": "number"
                                          },
                                          "is_held": {
                                            "type": "boolean"
                                          },
                                          "is_using_shift_upsells": {
                                            "type": "boolean"
                                          },
                                          "pacing_covers_remaining": {
                                            "type": "integer"
                                          },
                                          "pacing_limit": {
                                            "type": "integer"
                                          },
                                          "policy": {
                                            "type": "string"
                                          },
                                          "public_description_title": {
                                            "type": "string"
                                          },
                                          "public_long_form_description": {
                                            "type": "string"
                                          },
                                          "public_photo": {
                                            "type": "string"
                                          },
                                          "public_time_slot_description": {
                                            "type": "string"
                                          },
                                          "real_datetime_of_slot": {
                                            "type": "string"
                                          },
                                          "require_credit_card": {
                                            "type": "boolean"
                                          },
                                          "reservation_tags": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "sort_order": {
                                            "type": "integer"
                                          },
                                          "tax_rate": {
                                            "type": "number"
                                          },
                                          "time": {
                                            "type": "string",
                                            "description": "Reservation time"
                                          },
                                          "time_iso": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string"
                                          },
                                          "upsell_categories": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "is_previous_version": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "limit": 20,
                    "cursor": "CjwSNmoWc35zZXZlbCxIPbmlnaHRsb29wX1ZlbnVlGICAyObd64wLDBgAInJvb21zLXNlY3VyZS1xYXIcAAA=",
                    "availability": [
                      {
                        "venue_id": "ahZzfnNl-dmVucm9vbXMtc2VjgMCxIPc3JfU2hpZnREZWZhdWx0GdXJlLXVudWUYgIDI1uKdvQasdf",
                        "venue_name": "Sevenrooms Cafe",
                        "availability": [
                          {
                            "name": "Day",
                            "shift_persistent_id": "ahZzfnNldhchwLEg9uaWdodGxvb3BfVmVumVucm9vbXMtc2VjdXJlLXFdWUYgIDI1uKdvQgM-DINNER-1137276712.21",
                            "shift_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXVudWUYgIDI1uKdvQgMCxIPc3JfU2hpZnREZWZhdWx0GICA6FhcjgLEg9uaWdodGxvb3BfVmKev2JcIDA",
                            "shift_category": "DINNER",
                            "is_closed": false,
                            "upsell_categories": [],
                            "times": [
                              {
                                "access_seating_area_id": null,
                                "charge_type": null,
                                "upsell_categories": [
                                  "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcjoLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkMCxIRc3JfVXBzZWxsQ2F0ZWdvcnkYgICAgPD3hQoM",
                                  "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcjoLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkMCxIRc3JfVXBzZWxsQ2F0ZWdvcnkYgICAgMDflwoM"
                                ],
                                "cc_party_size_min": null,
                                "public_time_slot_description": "",
                                "cancellation_policy": "If you REALLY want to cancel a reservation do it exactly 24 hours prior. For no shows or late cancellations, you will be subject to fee of $0.25 per person, plus a $2,500 annoyance fee that will be applied to the credit card on file. Payable in your local currency or organs.",
                                "pacing_covers_remaining": 9999,
                                "real_datetime_of_slot": "2019-02-24 17:00:00",
                                "cost": 0,
                                "tax_rate": null,
                                "is_using_shift_upsells": false,
                                "duration": 90,
                                "require_credit_card": true,
                                "pacing_limit": 9999,
                                "time_iso": "2024-02-24 17:00:00",
                                "access_persistent_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkM-1549771833.76-0.0955918112665",
                                "reservation_tags": [
                                  "PUBLIC##ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhch8LEhJzcl9HZW5lcmljVGFnR3JvdXAYgICQ-oeg0ggM##Seating Request##Window requested",
                                  "PUBLIC##ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhch8LEhJzcl9HZW5lcmljVGFnR3JvdXAYgICQ-oegkgsM##Special Attention##Non-English speaking"
                                ],
                                "gratuity": null,
                                "is_held": true,
                                "public_photo": "",
                                "sort_order": 44,
                                "time": "5:00 PM",
                                "policy": "Don't be a jerk. Let us know when you're going to cancel like a day before. Otherwise we will find you and we will drag you to your reservation.",
                                "type": "book",
                                "cc_payment_rule": "save_for_later",
                                "public_long_form_description": "<p><br></p>",
                                "public_description_title": ""
                              }
                            ],
                            "is_previous_version": false
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venue_id}/hold": {
      "put": {
        "summary": "Create a Reservation Hold",
        "description": "Book a reservation hold for a specific time with an optional expiration time.",
        "operationId": "create_reservation_hold",
        "tags": [
          "Reservation Holds"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/path"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateReservationHold_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Reservation Hold object\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "hold_duration_sec": {
                          "type": "integer"
                        },
                        "access_persistent_id": {
                          "type": "string"
                        },
                        "reservation_hold_id": {
                          "type": "string",
                          "description": "Unique identifier for a Reservation Hold"
                        },
                        "shift_persistent_id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "hold_duration_sec": 300,
                    "access_persistent_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkM-1549771833.76-0.0955918112665",
                    "reservation_hold_id": "1550988003.536256",
                    "shift_persistent_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkM-DINNER-1542390516.02"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venue_id}/hold/{reservation_hold_id}/release": {
      "post": {
        "summary": "Delete a Reservation Hold",
        "description": "Release a previously created reservation hold",
        "operationId": "delete_reservation_hold",
        "tags": [
          "Reservation Holds"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/path"
          },
          {
            "$ref": "#/components/parameters/reservation_hold_id_path"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeleteReservationHold_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Object containing HTTP response status\n",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer"
                    }
                  }
                },
                "example": {
                  "status": 200
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venue_id}/request": {
      "put": {
        "summary": "Create a Reservation Request",
        "description": "Place a Reservation Request at a Venue by ID.",
        "operationId": "create_reservation_request",
        "tags": [
          "Reservation Requests"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/path"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateReservationRequest_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Object containing the created Reservation Request unique identifier\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "request_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yKQsSHG5pZ2h0bG9vcF9SZXNlcnZhdGlvblJlcXVlc3QYgIDQioXtzAsM"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/requests/{request_id}": {
      "get": {
        "summary": "Get a Reservation Request",
        "description": "Retrieve a specified Reservation Request.",
        "operationId": "get_reservation_request",
        "tags": [
          "Reservation Requests"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/request_id_path"
          }
        ],
        "responses": {
          "200": {
            "description": "Reservation Request object\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "arrival_time": {
                          "description": "Local time for the Reservation.      \n> Times begin at 6AM. Any time considered the next day, e.g. 2AM will still be considered the same evening.",
                          "example": "5:00:00 PM",
                          "type": "string"
                        },
                        "booked_by": {
                          "description": "Client who will be accredited for booking the Reservation.",
                          "example": "Peter Jones",
                          "type": "string"
                        },
                        "cost_option": {
                          "description": "Bitfield for one of the following values:      \n\n- Fee Dollars      \n- Minimum Dollars      \n- Minimum Bottles      \n- Comp      \n- No Min",
                          "type": "integer"
                        },
                        "created": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Created timestamp"
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "Date in ISO 8601 format"
                        },
                        "deleted": {
                          "type": "string"
                        },
                        "email": {
                          "description": "Email associated with the Reservation.      \n> All emails are validated for format prior to entry into the system.",
                          "example": "support@sevenrooms.com",
                          "type": "string"
                        },
                        "expiration": {
                          "type": "string"
                        },
                        "external_user_id": {
                          "description": "Third party User ID stored on the Client profile.      \n\n> You may associate an external user account with a Client in the SevenRooms database. If the associated client for the Reservation has an `external_user_id` then that value will be returned here.",
                          "example": 55602,
                          "type": "string"
                        },
                        "first_name": {
                          "description": "The Client's first name.",
                          "example": "John",
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "is_expired": {
                          "type": "boolean"
                        },
                        "is_offer_pending": {
                          "type": "boolean"
                        },
                        "last_name": {
                          "example": "Last name of the Client booking the Reservation.",
                          "type": "string"
                        },
                        "max_guests": {
                          "description": "Number of people expected for the Reservation.",
                          "example": 6,
                          "type": "integer"
                        },
                        "mf_ratio_female": {
                          "description": "Number of females expected for the Reservation.",
                          "example": 2,
                          "type": "integer"
                        },
                        "mf_ratio_male": {
                          "description": "Number of males expected for the Reservation.",
                          "example": 2,
                          "type": "integer"
                        },
                        "min_price": {
                          "description": "Minimum price required for the Reservation.",
                          "example": 1500,
                          "type": "integer"
                        },
                        "notes": {
                          "description": "Internal, Venue facing notes for the Reservation.",
                          "type": "string"
                        },
                        "phone_number": {
                          "description": "Phone number associated with the Reservation.      \n> Can be numerous valid formats, including international phone      \nnumbers. US phone numbers generally follow      \n1-xxx-xxx-xxxx.",
                          "example": "1-555-555-5555",
                          "type": "string"
                        },
                        "reservation_id": {
                          "type": "string",
                          "description": "Unique identifier for the reservaiton"
                        },
                        "status": {
                          "type": "integer"
                        },
                        "updated": {
                          "type": "string"
                        },
                        "user": {
                          "description": "The SevenRooms User who created the Reservation.",
                          "example": "Chris Walker",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "venue_group_client_id": {
                          "description": "Foreign key to a Venue Group client entity.",
                          "type": "string"
                        },
                        "venue_id": {
                          "description": "Unique identifier of the venue.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "phone_number": "+12125559876",
                    "last_name": "Doe",
                    "external_user_id": "abczyx123",
                    "reservation_id": "None",
                    "id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yKQsSHG5pZ2h0bG9vcF9SZXNlcnZhdGlvblJlcXVlc3QYgIDQioXtzAsM",
                    "first_name": "Jane",
                    "venue_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgNCylufYCAw",
                    "venue_group_client_id": "None",
                    "min_price": null,
                    "email": "jane.doe@gmail.com",
                    "status": "UNAPPROVED",
                    "booked_by": "Docs Group",
                    "updated": "2024-12-14T14:20:38.874800",
                    "deleted": null,
                    "mf_ratio_male": "None",
                    "mf_ratio_female": "None",
                    "arrival_time": "7:00 PM",
                    "user": {
                      "id": "ahZzfnNldmi2uPzzCQwVucmnYWVfVXNlchiA9vbXMtc2VjdXJlLXFhchULEghgM",
                      "name": "Integrator Group"
                    },
                    "date": "2023-12-18",
                    "is_offer_pending": false,
                    "max_guests": 2,
                    "created": "2023-12-07T14:20:38.874800",
                    "cost_option": 0,
                    "expiration": "12/16/23 7:53 PM",
                    "is_expired": false,
                    "notes": "Comes in for business meetings"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reservations/{reservation_id}/cancel": {
      "post": {
        "summary": "Cancel a Reservation",
        "description": "Cancel an existing reservation. The `reservation_id` parameter can either be the Reservation GUID or the Reservation reference code. Note that reference codes are only unique to a single venue unless venue prefixes are enabled for a venue group.",
        "operationId": "delete_reservation",
        "tags": [
          "Reservations"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/reservation_id_reference_code_path"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CancelReservation_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Object containing identifiers for the deleted Reservation.\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "reservation_reference_code": {
                          "type": "string"
                        },
                        "reservation_id": {
                          "type": "string",
                          "description": "Unique identifier for the reservaiton"
                        },
                        "client_reference_code": {
                          "type": "string"
                        },
                        "client_id": {
                          "description": "Unique identifier of the Client profile",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "reservation_reference_code": "54BLG3M8",
                    "reservation_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcicLEhtuaWdodGxvb3BfUmVzZXJ2YXRpb25BY3R1YWwYwdn_2J-KBgw",
                    "client_reference_code": "9H8C1X1QC",
                    "client_id": "ahZzfnNldmVucm9vbXMVudWVHcm91XFhcicLEhpuaWdcENsaWVudBiAgJiBuenrCAwtc2VjdXJlLodGxvb3BfVm"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reservations": {
      "get": {
        "summary": "Export All Reservations",
        "description": "Export all Reservations, specified by Venue ID and Venue Group ID.",
        "operationId": "create_reservations_export",
        "tags": [
          "Reservations"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/venue_id_multi_query_optional"
          },
          {
            "$ref": "#/components/parameters/search_limit_query_optional"
          },
          {
            "$ref": "#/components/parameters/cursor_query_optional"
          },
          {
            "$ref": "#/components/parameters/external_user_id_query_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_res_filter_query_optional"
          },
          {
            "$ref": "#/components/parameters/reservation_reference_code_query_optional"
          },
          {
            "$ref": "#/components/parameters/external_reference_code_query_optional"
          },
          {
            "$ref": "#/components/parameters/from_date_query_optional"
          },
          {
            "$ref": "#/components/parameters/to_date_query_optional"
          },
          {
            "$ref": "#/components/parameters/reservation_updated_since_query_optional"
          },
          {
            "$ref": "#/components/parameters/shift_category_query_optional"
          },
          {
            "$ref": "#/components/parameters/name_query_optional"
          },
          {
            "$ref": "#/components/parameters/phone_query_optional"
          },
          {
            "$ref": "#/components/parameters/email_query_optional"
          },
          {
            "$ref": "#/components/parameters/birthday_start_query_optional"
          },
          {
            "$ref": "#/components/parameters/birthday_end_query_optional"
          },
          {
            "$ref": "#/components/parameters/reservation_status_query_optional"
          },
          {
            "$ref": "#/components/parameters/venue_group_id_query_optional"
          },
          {
            "$ref": "#/components/parameters/external_id_query_optional"
          },
          {
            "$ref": "#/components/parameters/reservation_sort_order_query_optional"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON list of Reservation objects\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "cursor": {
                          "type": "integer",
                          "description": "Cursor for pagination"
                        },
                        "limit": {
                          "type": "string",
                          "description": "Limit on objects returned between 1 and 400. Default is 30.",
                          "minimum": 1,
                          "maximum": 400,
                          "default": 30
                        },
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "access_persistent_id": {
                                "type": "string",
                                "description": "Unique identifier for access as a result of the availability call for the given time slot.      \n\nAccess persistent ID from result of availability call for given time slot."
                              },
                              "address": {
                                "description": "Address first line",
                                "example": "122 West 27th Street",
                                "type": "string"
                              },
                              "address_2": {
                                "description": "Address second line",
                                "example": "7th Floor",
                                "type": "string"
                              },
                              "arrival_time": {
                                "description": "Local time for the Reservation.      \n> Times begin at 6AM. Any time considered the next day, e.g. 2AM will still be considered the same evening.",
                                "example": "5:00:00 PM",
                                "type": "string"
                              },
                              "arrived_guests": {
                                "description": "Number of people that actually arrived for the Reservation.",
                                "example": 4,
                                "type": "integer"
                              },
                              "booked_by": {
                                "description": "Client who will be accredited for booking the Reservation.",
                                "example": "Peter Jones",
                                "type": "string"
                              },
                              "check_numbers": {
                                "description": "Check numbers for the Reservation.      \n\n> Comma-delimited value, entered free form or populated via POS integration.",
                                "type": "string"
                              },
                              "city": {
                                "description": "The city of the Client's residential address.      ",
                                "example": "New York",
                                "type": "string"
                              },
                              "client_id": {
                                "description": "Unique identifier of the Client profile",
                                "type": "string"
                              },
                              "client_reference_code": {
                                "type": "string"
                              },
                              "client_requests": {
                                "description": "Requests supplied by guests at the time of booking for the Reservation.",
                                "type": "string"
                              },
                              "comps": {
                                "description": "Amount comp'd on this Reservation.      \n\n> Stored as      \n  currency of the Venue's location.",
                                "example": 1500,
                                "type": "integer"
                              },
                              "comps_price_type": {
                                "description": "The type of comp provided to the Reservation.      \n\n> Can be one of:      \n>       \n> - dollar      \n> - bottle ",
                                "example": "dollar",
                                "type": "string"
                              },
                              "cost_option": {
                                "description": "Bitfield for one of the following values:      \n\n  - Fee Dollars      \n  - Minimum Dollars      \n  - Minimum Bottles      \n  - Comp      \n  - No Min",
                                "type": "integer"
                              },
                              "country": {
                                "description": "The country of the Client's residential address.",
                                "example": "United States",
                                "type": "string"
                              },
                              "created": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Created timestamp"
                              },
                              "custom_fields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "system_name": {
                                      "type": "string"
                                    },
                                    "display_order": {
                                      "type": "integer"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date in ISO 8601 format"
                              },
                              "deleted": {
                                "type": "string"
                              },
                              "duration": {
                                "description": "The amount of time, in minutes, for the Reservation.",
                                "example": 60,
                                "type": "integer"
                              },
                              "email": {
                                "description": "Email associated with the Reservation.      \n> All emails are validated for format prior to entry into the system.",
                                "example": "support@sevenrooms.com",
                                "type": "string"
                              },
                              "external_client_id": {
                                "description": "Client or Customer ID of the external system that      \nbooked this Reservation, if applicable.      \n\n> If the Reservation was imported as part of a booking channel integration, e.g. Google Reserve, this field will be populated with the customer ID from that channel.",
                                "example": "3215klsfda",
                                "type": "string"
                              },
                              "external_id": {
                                "description": "ID for 3rd party foreign key to this reservation      \n\n> You may specify your own identifiers for Reservations that you book via the API for various reference purposes in your own systems.",
                                "example": 55602,
                                "type": "string"
                              },
                              "external_reference_code": {
                                "description": "The reference or confirmation number of the external system      \nthat booked this Reservation, if applicable",
                                "example": "1s430snmaw",
                                "type": "string"
                              },
                              "external_user_id": {
                                "description": "Third party User ID stored on the Client profile.      \n\n> You may associate an external user account with a Client in the SevenRooms database. If the associated client for the Reservation has an `external_user_id` then that value will be returned here.",
                                "example": 55602,
                                "type": "string"
                              },
                              "first_name": {
                                "description": "The Client's first name.",
                                "example": "John",
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              },
                              "is_vip": {
                                "description": "VIP status of the Client booking the Reservation.",
                                "example": true,
                                "type": "boolean"
                              },
                              "last_name": {
                                "example": "Last name of the Client booking the Reservation.",
                                "type": "string"
                              },
                              "left_time": {
                                "description": "Local time the party left the Venue.",
                                "example": "9:45:00 PM",
                                "type": "string"
                              },
                              "loyalty_id": {
                                "example": "`loyalty_id` value from the Client entity associated with the Reservation.",
                                "type": "string"
                              },
                              "loyalty_rank": {
                                "example": "`loyalty_rank` value from the Client entity.",
                                "type": "integer"
                              },
                              "loyalty_tier": {
                                "description": "`loyalty_tier` value from the Client entity associated with the Reservation..",
                                "type": "string"
                              },
                              "max_guests": {
                                "description": "Number of people expected for the Reservation.",
                                "example": 6,
                                "type": "integer"
                              },
                              "mf_ratio_female": {
                                "description": "Number of females expected for the Reservation.",
                                "example": 2,
                                "type": "integer"
                              },
                              "mf_ratio_male": {
                                "description": "Number of males expected for the Reservation.",
                                "example": 2,
                                "type": "integer"
                              },
                              "min_price": {
                                "description": "Minimum price required for the Reservation.",
                                "example": 1500,
                                "type": "integer"
                              },
                              "modify_reservation_link": {
                                "description": "Link for client to modify a reservation",
                                "example": "https://sevenrooms.com/direct/modify-reservation/MzkyNDNlNjc2OTRlZThiN2I1ZmI3Y2U4MzFjNmUwZDRmYjlmZGUzZDqAAn1xAShVGGFjdHVhbF9jcmVhdGVkX3RpbWVzdGFtcHECVRExNTY3ODAxNjY0LjY4NzU2OVUJYWN0dWFsX2lkcQNVWGFoWnpmbk5sZG1WdWNtOXZiWE10YzJWamRYSmxMWEZoY2lnTEVodHVhV2RvZEd4dmIzQmZVbVZ6WlhKMllYUnBiMjVCWTNSMVlXd1lnSURRdjlxQXNnb01xBHUu",
                                "type": "string"
                              },
                              "notes": {
                                "description": "Internal, Venue facing notes for the Reservation.",
                                "type": "string"
                              },
                              "onsite_payment": {
                                "description": "Net spend before gratuity and taxes for the Reservation.      \n> Stored as currency of the Venue's location.",
                                "example": 1105.15,
                                "type": "number"
                              },
                              "paid_by": {
                                "description": "Full name of Client that paid for the Reservation.      \n> Entered free form.",
                                "example": "Peter Jones",
                                "type": "string"
                              },
                              "phone_number": {
                                "description": "Phone number associated with the Reservation.      \n> Can be numerous valid formats, including international phone      \nnumbers. US phone numbers generally follow      \n1-xxx-xxx-xxxx.",
                                "example": "1-555-555-5555",
                                "type": "string"
                              },
                              "policy": {
                                "description": "Reservation policy for the Reservation.",
                                "type": "string"
                              },
                              "pos_tickets": {
                                "description": "JSON dictionary of Check information, including spend information and items ordered.",
                                "example": "{ <JSON Data> }",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "string"
                                    },
                                    "admin_fee": {
                                      "type": "number"
                                    },
                                    "code": {
                                      "type": "integer"
                                    },
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "price": {
                                            "type": "number"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "quantity": {
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    },
                                    "table_no": {
                                      "type": "string"
                                    },
                                    "tax": {
                                      "type": "number"
                                    },
                                    "business_id": {
                                      "type": "integer"
                                    },
                                    "local_pos_ticket_id": {
                                      "type": "string"
                                    },
                                    "employee_name": {
                                      "type": "string"
                                    },
                                    "total": {
                                      "type": "number"
                                    },
                                    "subtotal": {
                                      "type": "number"
                                    },
                                    "start_time": {
                                      "type": "string"
                                    },
                                    "service_charge": {
                                      "type": "number"
                                    },
                                    "end_time": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "postal_code": {
                                "description": "`postal_code` value from the Client entity associated with the Reservation.",
                                "type": "string"
                              },
                              "prepayment": {
                                "description": "Prepayments for the Reservation.      \n> Stored as currency of the Venue's location.",
                                "example": 1263.54,
                                "type": "number"
                              },
                              "rating": {
                                "description": "A score between 1 and 10.",
                                "type": "integer"
                              },
                              "reference_code": {
                                "description": "Guest facing Reservation number. Uniqueness      \nis scoped to a Venue. If Venue prefixes are turned on,      \nuniqueness is scoped to the Venue Group level.",
                                "example": "A34CE38",
                                "type": "string"
                              },
                              "reservation_sms_opt_in": {
                                "description": "Show opt-in for receiving SMS about reservations",
                                "type": "boolean"
                              },
                              "reservation_type": {
                                "description": "Comma-delimited list of Reservation tag names.",
                                "example": "Corporate Event, Peanut Allergy",
                                "type": "string"
                              },
                              "seated_time": {
                                "description": "Local time the party was seated at the Venue.",
                                "example": "7:00:00 PM",
                                "type": "string"
                              },
                              "send_reminder_email": {
                                "description": "If True, an email is sent to remind the guest of their reservation.",
                                "type": "boolean"
                              },
                              "send_reminder_sms": {
                                "description": "If True, a SMS is sent to remind the guest of their reservation.",
                                "type": "boolean"
                              },
                              "served_by": {
                                "description": "Full name of the server for the Reservation.",
                                "example": "Allison Richards",
                                "type": "string"
                              },
                              "hotel_confirmation": {
                                "description": "Confirmation code for the hotel (if applicable)",
                                "type": "string"
                              },
                              "hotel_id": {
                                "type": "string"
                              },
                              "hotel_room": {
                                "description": "Room at hotel (if applicable and available)",
                                "type": "string"
                              },
                              "shift_category": {
                                "type": "string"
                              },
                              "shift_persistent_id": {
                                "description": "Unique identifier of the Shift belonging to this Reservation.      \n> Concatenation of:      \n> - Venue ID      \n> - Shift Category      \n> - Timestamp when shift was created      \n>       \n> Note that Venue ID may contain dashes.",
                                "example": "ahNzfnNldmVu2dsasg- DINNER-1443199242.75",
                                "type": "string"
                              },
                              "source_client_id": {
                                "description": "Foreign key to a source Client entity.      \n> The optional source client parameter refers to the client who booked the Reservation on behalf of guest, e.g. Concierge or Assistant. ",
                                "example": "sd25swfda",
                                "type": "string"
                              },
                              "state": {
                                "description": "`state` value from the Client entity associated with the Reservation.",
                                "type": "string"
                              },
                              "status": {
                                "description": "Status of the Reservation.      \n\nFor more information please see the guide on Reservation Statuses [here](https://api-docs.sevenrooms.com/guides/reservation-statuses).      \n  \n> Customizable per Venue. Default statuses include:      \n> - NOT_RECONCILED      \n> - NO_ENTRY      \n> - NO_SHOW      \n> - CANCELED      \n> - LEFT_MESSAGE      \n> - WRONG_NUMBER      \n> - CONFIRMED      \n> - PRE_ARRIVED      \n> - PRE_PARTIALLY_ARRIVED      \n> - ARRIVED       \n> - ARRIVED_PARTIAL      \n> - LATE      \n> - 1ST_COURSE      \n> - 2ND_COURSE      \n> - 3RD_COURSE      \n> - DESSERT      \n> - CHECK_DROPPED      \n> - PAID      \n> - BUS_TABLE      \n> - COMPLETE      ",
                                "type": "string"
                              },
                              "status_display": {
                                "description": "Venue-configured display value for the status database      \nvalues.      \n      \nFor more information please see the guide on Reservation Statuses [here](https://api-docs.sevenrooms.com/guides/reservation-statuses).      \n\n> Configurable in Venue settings.",
                                "example": "Appetizer",
                                "type": "string"
                              },
                              "status_simple": {
                                "description": "A value of one of the following statuses:      \n- Incomplete      \n- Complete      \n- Canceled      \n- No Show      \n- No Entry      \n      \nFor more information please see the guide on Reservation Statuses [here](https://api-docs.sevenrooms.com/guides/reservation-statuses).      \n      \n> Canceled, No Show, and No Entry are specifically      \ncalled out. All other pre-service statuses (e.g.      \nBooked, Left Message) are valued as Incomplete. Any inservice      \nstatus (e.g. Seated, Left) is valued as Complete. Subject to future additions.",
                                "example": "Incomplete",
                                "type": "string"
                              },
                              "table_numbers": {
                                "description": "Comma-delimited table numbers for the Reservation.",
                                "example": "DJ, 05, 27",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "tags": {
                                "type": "array"
                              },
                              "total_payment": {
                                "description": "Sum of `prepayment` and `onsite_payment` for the Reservation.",
                                "example": 1303.09,
                                "type": "integer"
                              },
                              "updated": {
                                "type": "string"
                              },
                              "user": {
                                "description": "The SevenRooms User who created the Reservation.",
                                "example": "Chris Walker",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                }
                              },
                              "venue_group_client_id": {
                                "description": "Foreign key to a Venue Group client entity.",
                                "type": "string"
                              },
                              "venue_group_id": {
                                "description": "Unique identifier of the venue group.",
                                "type": "string"
                              },
                              "venue_id": {
                                "description": "Unique identifier of the venue.",
                                "type": "string"
                              },
                              "venue_seating_area_id": {
                                "description": "The id of the seating area.  This attribute will be populated once the table has been assigned",
                                "example": "T1",
                                "type": "string"
                              },
                              "venue_seating_area_name": {
                                "description": "The name of the seating area.  This attribute will be populated once the table has been assigned",
                                "example": "Lounge",
                                "type": "string"
                              },
                              "auto_assignments": {
                                "type": "object",
                                "description": "Information about the Reservation's auto-assigned table(s).",
                                "properties": {
                                  "table_codes": {
                                    "type": "array",
                                    "description": "One or more table codes auto-assigned to this Reservation.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "sort_order": {
                                    "type": "integer",
                                    "description": "The tables sort order as configured in the SevenRooms Web Portal."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the guest auto-assigned to the table(s)."
                                  },
                                  "table_ids": {
                                    "type": "array",
                                    "description": "One or more unique table IDs auto-assigned to this Reservation.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "is_reassigned": {
                                    "type": "boolean",
                                    "description": "Whether or not the auto-assignment was later reassigned to a different table when the guest was seated."
                                  }
                                }
                              },
                              "problems": {
                                "type": "object",
                                "description": "Information regarding any problems that exist because of the Reservation's table assignment.",
                                "properties": {
                                  "[actual_id]": {
                                    "type": "object",
                                    "properties": {
                                      "problem_name": {
                                        "type": "string"
                                      },
                                      "is_major": {
                                        "type": "boolean"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "cursor": 1,
                    "limit": 1,
                    "results": [
                      {
                        "rating": 4.2,
                        "last_name": "Doe",
                        "external_reference_code": "DH12J78",
                        "send_reminder_email": false,
                        "external_user_id": "abczyx123",
                        "updated": "2024-01-14T14:20:38.874800",
                        "check_numbers": null,
                        "shift_persistent_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkM-BREAKFAST-1552491652.9",
                        "left_time": "None",
                        "email": "jane.doe@gmail.com",
                        "status_simple": "Complete",
                        "postal_code": 11201,
                        "comps_price_type": "dollar",
                        "duration": "None",
                        "modify_reservation_link": "https://sevenrooms.com/direct/modify-reservation/MzkyNDNlNjc2OTRlZThiN2I1ZmI3Y2U4MzFjNmUwZDRmYjlmZGUzZDqAAn1xAShVGGFjdHVhbF9jcmVhdGVkX3RpbWVzdGFtcHECVRExNTY3ODAxNjY0LjY4NzU2OVUJYWN0dWFsX2lkcQNVWGFoWnpmbk5sZG1WdWNtOXZiWE10YzJWamRYSmxMWEZoY2lnTEVodHVhV2RvZEd4dmIzQmZVbVZ6WlhKMllYUnBiMjVCWTNSMVlXd1lnSURRdjlxQXNnb01xBHUu",
                        "id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcigLEhtuaWdodGxvb3BfUmVzZXJ2YXRpb25BY3R1YWwYgIDQv9qAsgoM",
                        "reservation_type": null,
                        "seated_time": "None",
                        "first_name": "Jane",
                        "venue_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkM",
                        "reservation_sms_opt_in": "None",
                        "venue_group_client_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhciYLEhpuaWdodGxvb3BfVmVudWVHcm91cENsaWVudBiRqJmaoYoGDA",
                        "arrived_guests": 5,
                        "client_reference_code": "9H8C1X1QC",
                        "state": "NY",
                        "send_reminder_sms": false,
                        "venue_group_id": "ahZzfnNldmVub3BfVmVudWVHcm91cBic2VjdXJlLXFhciELEhRuaWdodGAgMjWsMTYCAwcm9vbXMtxv",
                        "address_2": "None",
                        "min_price": "None",
                        "custom_fields": [],
                        "policy": null,
                        "served_by": "None",
                        "client_requests": "None",
                        "status": "COMPLETE",
                        "booked_by": "Paul Smith",
                        "phone_number": 12125559876,
                        "total_payment": 50,
                        "prepayment": 65,
                        "loyalty_id": "zyxabx987",
                        "tags": "",
                        "deleted": "None",
                        "mf_ratio_male": "None",
                        "mf_ratio_female": "None",
                        "comps": "None",
                        "external_client_id": "None",
                        "client_id": "ahZzfnNldmVucm9vbXMVudWVHcm91XFhcicLEhpuaWdcENsaWVudBiAgJiBuenrCAwtc2VjdXJlLodGxvb3BfVm",
                        "city": "New York",
                        "address": {
                          "street": "230 Park Avenue South",
                          "city": "New York"
                        },
                        "date": "2023-10-11",
                        "source_client_id": "None",
                        "loyalty_rank": 3,
                        "paid_by": null,
                        "loyalty_tier": "Platinum",
                        "shift_category": "BREAKFAST",
                        "table_numbers": [
                          "002"
                        ],
                        "max_guests": 5,
                        "arrival_time": "6:00 AM",
                        "country": "United States",
                        "cost_option": 0,
                        "created": "2023-09-07T14:20:38.874800",
                        "pos_tickets": "None",
                        "access_persistent_id": "ahFkZXZ-bmlnaHRsb29wLW5ld3IcCxIPbmlnaHRsb29wX1ZlbnVlGICAgICAjtUJDA-1569360529.21-0.580892461024",
                        "is_vip": false,
                        "reference_code": "7D0HP84OJK8",
                        "status_display": "Left",
                        "external_id": "None",
                        "notes": "Comes in for business meetings",
                        "user": {
                          "id": "ahZzfnNldmi2uPzzCQwVucmnYWVfVXNlchiA9vbXMtc2VjdXJlLXFhchULEghgM",
                          "name": "Integrator Group"
                        },
                        "auto_assignments": {
                          "table_codes": [
                            "10"
                          ],
                          "sort_order": 33,
                          "name": "Ms Jane Doe",
                          "table_ids": [
                            "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yggELEhFUYWJsZUl0ZW1BbmNlc3RvciJLYWhoemZuTmxkbVZ1Y205dmJYTXRjMlZqZFhKbExXUmxiVzl5SEFzU0QyNXBaMmgwYkc5dmNGOVdaVzUxWlJpQWdOQ0t1WWV6Q2d3DAsSE25pZ2h0bG9vcF9UYWJsZUl0ZW0YgIDQ0u3F4gsM"
                          ],
                          "is_reassigned": false
                        },
                        "problems": {
                          "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcigLEhtuaWdodGxvb3BfUmVzZXJ2YXRpb25BY3R1YWwYgIDQv9qAsgoM": {
                            "problem_name": "The reservation is too small for the current table",
                            "is_major": false
                          }
                        },
                        "real_datetime_of_slot": "2023-10-11 6:00:00",
                        "time_slot_iso": "6:00:00",
                        "venue_seating_area_name": null,
                        "venue_seating_area_id": "None",
                        "prepayment_total": 0,
                        "prepayment_net": "None",
                        "prepayment_service_charge": "None",
                        "prepayment_tax": "None",
                        "prepayment_gratuity": "None",
                        "onsite_payment": "None",
                        "onsite_payment_net": "None",
                        "onsite_payment_tax": "None",
                        "onsite_payment_gratuity": "None",
                        "onsite_payment_total": 0,
                        "total_net_payment": 0,
                        "total_gross_payment": 0,
                        "using_default_duration": false,
                        "hotel_confirmation": "None",
                        "hotel_id": "None",
                        "hotel_room": "None",
                        "upgrades": [
                          {
                            "inventory_id": "ahZzfnNldmVucm9vbXMtbnRvcnkYgIDI843suaWdodGxvb3BfVmVudWUYgIDI3fTMlgoMCxIac3JfVXBzZWxsQ2F0ZWdvcnlJbnZlbnRvcnkYgIDI843s6wgM",
                            "category_id": "ahZzfnNldmTMlgoMCxIRc3JfEg9uaWdodGxvb3BfVmVudWUYgIDI3fTMlgoMCxIRc3JfVXBzZWxsQ2F0ZWdvcnkYgIDIi5PSnggM",
                            "name": "Flowers",
                            "quantity": 2,
                            "price": 100,
                            "pos_item_id": ""
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reservations/export": {
      "get": {
        "summary": "Search Reservations",
        "description": "Search for existing Reservations for a Venue Group, list of Venues, or a single Venue.\n",
        "operationId": "search_reservations",
        "tags": [
          "Reservations"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/venue_group_id_query_optional"
          },
          {
            "$ref": "#/components/parameters/venue_id_multi_query_optional"
          },
          {
            "$ref": "#/components/parameters/search_limit_query_optional"
          },
          {
            "$ref": "#/components/parameters/cursor_query_optional"
          },
          {
            "$ref": "#/components/parameters/external_user_id_query_optional"
          },
          {
            "$ref": "#/components/parameters/client_id_res_filter_query_optional"
          },
          {
            "$ref": "#/components/parameters/reservation_reference_code_query_optional"
          },
          {
            "$ref": "#/components/parameters/external_reference_code_query_optional"
          },
          {
            "$ref": "#/components/parameters/from_date_query_optional"
          },
          {
            "$ref": "#/components/parameters/to_date_query_optional"
          },
          {
            "$ref": "#/components/parameters/reservation_updated_since_query_optional"
          },
          {
            "$ref": "#/components/parameters/shift_category_query_optional"
          },
          {
            "$ref": "#/components/parameters/name_query_optional"
          },
          {
            "$ref": "#/components/parameters/phone_query_optional"
          },
          {
            "$ref": "#/components/parameters/email_query_optional"
          },
          {
            "$ref": "#/components/parameters/birthday_start_query_optional"
          },
          {
            "$ref": "#/components/parameters/birthday_end_query_optional"
          },
          {
            "$ref": "#/components/parameters/reservation_status_query_optional"
          },
          {
            "$ref": "#/components/parameters/reservation_sort_order_query_optional"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON list of Reservation objects\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "cursor": {
                          "type": "string",
                          "description": "Cursor for pagination"
                        },
                        "limit": {
                          "type": "string",
                          "description": "Limit on objects returned between 1 and 400. Default is 30.",
                          "minimum": 1,
                          "maximum": 400,
                          "default": 30
                        },
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "access_persistent_id": {
                                "type": "string",
                                "description": "Unique identifier for access as a result of the availability call for the given time slot.      \n\nAccess persistent ID from result of availability call for given time slot."
                              },
                              "address": {
                                "description": "Address first line",
                                "example": "122 West 27th Street",
                                "type": "string"
                              },
                              "address_2": {
                                "description": "Address second line",
                                "example": "7th Floor",
                                "type": "string"
                              },
                              "arrival_time": {
                                "description": "Local time for the Reservation.      \n> Times begin at 6AM. Any time considered the next day, e.g. 2AM will still be considered the same evening.",
                                "example": "5:00:00 PM",
                                "type": "string"
                              },
                              "arrived_guests": {
                                "description": "Number of people that actually arrived for the Reservation.",
                                "example": 4,
                                "type": "integer"
                              },
                              "booked_by": {
                                "description": "Client who will be accredited for booking the Reservation.",
                                "example": "Peter Jones",
                                "type": "string"
                              },
                              "check_numbers": {
                                "description": "Check numbers for the Reservation.      \n\n> Comma-delimited value, entered free form or populated via POS integration.",
                                "type": "string"
                              },
                              "city": {
                                "description": "The city of the Client's residential address.      ",
                                "example": "New York",
                                "type": "string"
                              },
                              "client_id": {
                                "description": "Unique identifier of the Client profile",
                                "type": "string"
                              },
                              "client_reference_code": {
                                "type": "string"
                              },
                              "client_requests": {
                                "description": "Requests supplied by guests at the time of booking for the Reservation.",
                                "type": "string"
                              },
                              "comps": {
                                "description": "Amount comp'd on this Reservation.      \n\n> Stored as      \n  currency of the Venue's location.",
                                "example": 1500,
                                "type": "integer"
                              },
                              "comps_price_type": {
                                "description": "The type of comp provided to the Reservation.      \n\n> Can be one of:      \n>       \n> - dollar      \n> - bottle ",
                                "example": "dollar",
                                "type": "string"
                              },
                              "cost_option": {
                                "description": "Bitfield for one of the following values:      \n\n  - Fee Dollars      \n  - Minimum Dollars      \n  - Minimum Bottles      \n  - Comp      \n  - No Min",
                                "type": "integer"
                              },
                              "country": {
                                "description": "The country of the Client's residential address.",
                                "example": "United States",
                                "type": "string"
                              },
                              "created": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Created timestamp"
                              },
                              "custom_fields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "system_name": {
                                      "type": "string"
                                    },
                                    "display_order": {
                                      "type": "integer"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date in ISO 8601 format"
                              },
                              "deleted": {
                                "type": "string"
                              },
                              "duration": {
                                "description": "The amount of time, in minutes, for the Reservation.",
                                "example": 60,
                                "type": "integer"
                              },
                              "email": {
                                "description": "Email associated with the Reservation.      \n> All emails are validated for format prior to entry into the system.",
                                "example": "support@sevenrooms.com",
                                "type": "string"
                              },
                              "external_client_id": {
                                "description": "Client or Customer ID of the external system that      \nbooked this Reservation, if applicable.      \n\n> If the Reservation was imported as part of a booking channel integration, e.g. Google Reserve, this field will be populated with the customer ID from that channel.",
                                "example": "3215klsfda",
                                "type": "string"
                              },
                              "external_id": {
                                "description": "ID for 3rd party foreign key to this reservation      \n\n> You may specify your own identifiers for Reservations that you book via the API for various reference purposes in your own systems.",
                                "example": 55602,
                                "type": "string"
                              },
                              "external_reference_code": {
                                "description": "The reference or confirmation number of the external system      \nthat booked this Reservation, if applicable",
                                "example": "1s430snmaw",
                                "type": "string"
                              },
                              "external_user_id": {
                                "description": "Third party User ID stored on the Client profile.      \n\n> You may associate an external user account with a Client in the SevenRooms database. If the associated client for the Reservation has an `external_user_id` then that value will be returned here.",
                                "example": 55602,
                                "type": "string"
                              },
                              "first_name": {
                                "description": "The Client's first name.",
                                "example": "John",
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              },
                              "is_vip": {
                                "description": "VIP status of the Client booking the Reservation.",
                                "example": true,
                                "type": "boolean"
                              },
                              "last_name": {
                                "example": "Last name of the Client booking the Reservation.",
                                "type": "string"
                              },
                              "left_time": {
                                "description": "Local time the party left the Venue.",
                                "example": "9:45:00 PM",
                                "type": "string"
                              },
                              "loyalty_id": {
                                "example": "`loyalty_id` value from the Client entity associated with the Reservation.",
                                "type": "string"
                              },
                              "loyalty_rank": {
                                "example": "`loyalty_rank` value from the Client entity.",
                                "type": "integer"
                              },
                              "loyalty_tier": {
                                "description": "`loyalty_tier` value from the Client entity associated with the Reservation..",
                                "type": "string"
                              },
                              "max_guests": {
                                "description": "Number of people expected for the Reservation.",
                                "example": 6,
                                "type": "integer"
                              },
                              "mf_ratio_female": {
                                "description": "Number of females expected for the Reservation.",
                                "example": 2,
                                "type": "integer"
                              },
                              "mf_ratio_male": {
                                "description": "Number of males expected for the Reservation.",
                                "example": 2,
                                "type": "integer"
                              },
                              "min_price": {
                                "description": "Minimum price required for the Reservation.",
                                "example": 1500,
                                "type": "integer"
                              },
                              "modify_reservation_link": {
                                "description": "Link for client to modify a reservation",
                                "example": "https://sevenrooms.com/direct/modify-reservation/MzkyNDNlNjc2OTRlZThiN2I1ZmI3Y2U4MzFjNmUwZDRmYjlmZGUzZDqAAn1xAShVGGFjdHVhbF9jcmVhdGVkX3RpbWVzdGFtcHECVRExNTY3ODAxNjY0LjY4NzU2OVUJYWN0dWFsX2lkcQNVWGFoWnpmbk5sZG1WdWNtOXZiWE10YzJWamRYSmxMWEZoY2lnTEVodHVhV2RvZEd4dmIzQmZVbVZ6WlhKMllYUnBiMjVCWTNSMVlXd1lnSURRdjlxQXNnb01xBHUu",
                                "type": "string"
                              },
                              "notes": {
                                "description": "Internal, Venue facing notes for the Reservation.",
                                "type": "string"
                              },
                              "onsite_payment": {
                                "description": "Net spend before gratuity and taxes for the Reservation.      \n> Stored as currency of the Venue's location.",
                                "example": 1105.15,
                                "type": "number"
                              },
                              "paid_by": {
                                "description": "Full name of Client that paid for the Reservation.      \n> Entered free form.",
                                "example": "Peter Jones",
                                "type": "string"
                              },
                              "phone_number": {
                                "description": "Phone number associated with the Reservation.      \n> Can be numerous valid formats, including international phone      \nnumbers. US phone numbers generally follow      \n1-xxx-xxx-xxxx.",
                                "example": "1-555-555-5555",
                                "type": "string"
                              },
                              "policy": {
                                "description": "Reservation policy for the Reservation.",
                                "type": "string"
                              },
                              "pos_tickets": {
                                "description": "JSON dictionary of Check information, including spend information and items ordered.",
                                "example": "{ <JSON Data> }",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "string"
                                    },
                                    "admin_fee": {
                                      "type": "number"
                                    },
                                    "code": {
                                      "type": "integer"
                                    },
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "price": {
                                            "type": "number"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "quantity": {
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    },
                                    "table_no": {
                                      "type": "string"
                                    },
                                    "tax": {
                                      "type": "number"
                                    },
                                    "business_id": {
                                      "type": "integer"
                                    },
                                    "local_pos_ticket_id": {
                                      "type": "string"
                                    },
                                    "employee_name": {
                                      "type": "string"
                                    },
                                    "total": {
                                      "type": "number"
                                    },
                                    "subtotal": {
                                      "type": "number"
                                    },
                                    "start_time": {
                                      "type": "string"
                                    },
                                    "service_charge": {
                                      "type": "number"
                                    },
                                    "end_time": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "postal_code": {
                                "description": "`postal_code` value from the Client entity associated with the Reservation.",
                                "type": "string"
                              },
                              "prepayment": {
                                "description": "Prepayments for the Reservation.      \n> Stored as currency of the Venue's location.",
                                "example": 1263.54,
                                "type": "number"
                              },
                              "rating": {
                                "description": "A score between 1 and 10.",
                                "type": "integer"
                              },
                              "reference_code": {
                                "description": "Guest facing Reservation number. Uniqueness      \nis scoped to a Venue. If Venue prefixes are turned on,      \nuniqueness is scoped to the Venue Group level.",
                                "example": "A34CE38",
                                "type": "string"
                              },
                              "reservation_sms_opt_in": {
                                "description": "Show opt-in for receiving SMS about reservations",
                                "type": "boolean"
                              },
                              "reservation_type": {
                                "description": "Comma-delimited list of Reservation tag names.",
                                "example": "Corporate Event, Peanut Allergy",
                                "type": "string"
                              },
                              "seated_time": {
                                "description": "Local time the party was seated at the Venue.",
                                "example": "7:00:00 PM",
                                "type": "string"
                              },
                              "send_reminder_email": {
                                "description": "If True, an email is sent to remind the guest of their reservation.",
                                "type": "boolean"
                              },
                              "send_reminder_sms": {
                                "description": "If True, a SMS is sent to remind the guest of their reservation.",
                                "type": "boolean"
                              },
                              "served_by": {
                                "description": "Full name of the server for the Reservation.",
                                "example": "Allison Richards",
                                "type": "string"
                              },
                              "hotel_confirmation": {
                                "description": "Confirmation code for the hotel (if applicable)",
                                "type": "string"
                              },
                              "hotel_id": {
                                "type": "string"
                              },
                              "hotel_room": {
                                "description": "Room at hotel (if applicable and available)",
                                "type": "string"
                              },
                              "shift_category": {
                                "type": "string"
                              },
                              "shift_persistent_id": {
                                "description": "Unique identifier of the Shift belonging to this Reservation.      \n> Concatenation of:      \n> - Venue ID      \n> - Shift Category      \n> - Timestamp when shift was created      \n>       \n> Note that Venue ID may contain dashes.",
                                "example": "ahNzfnNldmVu2dsasg- DINNER-1443199242.75",
                                "type": "string"
                              },
                              "source_client_id": {
                                "description": "Foreign key to a source Client entity.      \n> The optional source client parameter refers to the client who booked the Reservation on behalf of guest, e.g. Concierge or Assistant. ",
                                "example": "sd25swfda",
                                "type": "string"
                              },
                              "state": {
                                "description": "`state` value from the Client entity associated with the Reservation.",
                                "type": "string"
                              },
                              "status": {
                                "description": "Status of the Reservation.      \n\nFor more information please see the guide on Reservation Statuses [here](https://api-docs.sevenrooms.com/guides/reservation-statuses).      \n  \n> Customizable per Venue. Default statuses include:      \n> - NOT_RECONCILED      \n> - NO_ENTRY      \n> - NO_SHOW      \n> - CANCELED      \n> - LEFT_MESSAGE      \n> - WRONG_NUMBER      \n> - CONFIRMED      \n> - PRE_ARRIVED      \n> - PRE_PARTIALLY_ARRIVED      \n> - ARRIVED       \n> - ARRIVED_PARTIAL      \n> - LATE      \n> - 1ST_COURSE      \n> - 2ND_COURSE      \n> - 3RD_COURSE      \n> - DESSERT      \n> - CHECK_DROPPED      \n> - PAID      \n> - BUS_TABLE      \n> - COMPLETE      ",
                                "type": "string"
                              },
                              "status_display": {
                                "description": "Venue-configured display value for the status database      \nvalues.      \n      \nFor more information please see the guide on Reservation Statuses [here](https://api-docs.sevenrooms.com/guides/reservation-statuses).      \n\n> Configurable in Venue settings.",
                                "example": "Appetizer",
                                "type": "string"
                              },
                              "status_simple": {
                                "description": "A value of one of the following statuses:      \n- Incomplete      \n- Complete      \n- Canceled      \n- No Show      \n- No Entry      \n      \nFor more information please see the guide on Reservation Statuses [here](https://api-docs.sevenrooms.com/guides/reservation-statuses).      \n      \n> Canceled, No Show, and No Entry are specifically      \ncalled out. All other pre-service statuses (e.g.      \nBooked, Left Message) are valued as Incomplete. Any inservice      \nstatus (e.g. Seated, Left) is valued as Complete. Subject to future additions.",
                                "example": "Incomplete",
                                "type": "string"
                              },
                              "table_numbers": {
                                "description": "Comma-delimited table numbers for the Reservation.",
                                "example": "DJ, 05, 27",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "tags": {
                                "type": "array"
                              },
                              "total_payment": {
                                "description": "Sum of `prepayment` and `onsite_payment` for the Reservation.",
                                "example": 1303.09,
                                "type": "integer"
                              },
                              "updated": {
                                "type": "string"
                              },
                              "user": {
                                "description": "The SevenRooms User who created the Reservation.",
                                "example": "Chris Walker",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                }
                              },
                              "venue_group_client_id": {
                                "description": "Foreign key to a Venue Group client entity.",
                                "type": "string"
                              },
                              "venue_group_id": {
                                "description": "Unique identifier of the venue group.",
                                "type": "string"
                              },
                              "venue_id": {
                                "description": "Unique identifier of the venue.",
                                "type": "string"
                              },
                              "venue_seating_area_id": {
                                "description": "The id of the seating area.  This attribute will be populated once the table has been assigned",
                                "example": "T1",
                                "type": "string"
                              },
                              "venue_seating_area_name": {
                                "description": "The name of the seating area.  This attribute will be populated once the table has been assigned",
                                "example": "Lounge",
                                "type": "string"
                              },
                              "auto_assignments": {
                                "type": "object",
                                "description": "Information about the Reservation's auto-assigned table(s).",
                                "properties": {
                                  "table_codes": {
                                    "type": "array",
                                    "description": "One or more table codes auto-assigned to this Reservation.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "sort_order": {
                                    "type": "integer",
                                    "description": "The tables sort order as configured in the SevenRooms Web Portal."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the guest auto-assigned to the table(s)."
                                  },
                                  "table_ids": {
                                    "type": "array",
                                    "description": "One or more unique table IDs auto-assigned to this Reservation.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "is_reassigned": {
                                    "type": "boolean",
                                    "description": "Whether or not the auto-assignment was later reassigned to a different table when the guest was seated."
                                  }
                                }
                              },
                              "problems": {
                                "type": "object",
                                "description": "Information regarding any problems that exist because of the Reservation's table assignment.",
                                "properties": {
                                  "[actual_id]": {
                                    "type": "object",
                                    "properties": {
                                      "problem_name": {
                                        "type": "string"
                                      },
                                      "is_major": {
                                        "type": "boolean"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "cursor": "DXF1ZXJ5QW5kRmV0Y2gBAAAAAACIdOUWdTRXQy1UOGdUMEtvbkp2TVBwUmdOdw==",
                    "limit": 1,
                    "results": [
                      {
                        "rating": 4.2,
                        "last_name": "Doe",
                        "external_reference_code": "DH12J78",
                        "send_reminder_email": false,
                        "external_user_id": "abczyx123",
                        "updated": "2024-01-14T14:20:38.874800",
                        "check_numbers": null,
                        "shift_persistent_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkM-BREAKFAST-1552491652.9",
                        "left_time": "None",
                        "email": "jane.doe@gmail.com",
                        "status_simple": "Complete",
                        "postal_code": 11201,
                        "comps_price_type": "dollar",
                        "duration": "None",
                        "modify_reservation_link": "https://sevenrooms.com/direct/modify-reservation/MzkyNDNlNjc2OTRlZThiN2I1ZmI3Y2U4MzFjNmUwZDRmYjlmZGUzZDqAAn1xAShVGGFjdHVhbF9jcmVhdGVkX3RpbWVzdGFtcHECVRExNTY3ODAxNjY0LjY4NzU2OVUJYWN0dWFsX2lkcQNVWGFoWnpmbk5sZG1WdWNtOXZiWE10YzJWamRYSmxMWEZoY2lnTEVodHVhV2RvZEd4dmIzQmZVbVZ6WlhKMllYUnBiMjVCWTNSMVlXd1lnSURRdjlxQXNnb01xBHUu",
                        "id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcigLEhtuaWdodGxvb3BfUmVzZXJ2YXRpb25BY3R1YWwYgIDQv9qAsgoM",
                        "reservation_type": null,
                        "seated_time": "None",
                        "first_name": "Jane",
                        "venue_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkM",
                        "reservation_sms_opt_in": "None",
                        "venue_group_client_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhciYLEhpuaWdodGxvb3BfVmVudWVHcm91cENsaWVudBiRqJmaoYoGDA",
                        "arrived_guests": 5,
                        "client_reference_code": "9H8C1X1QC",
                        "state": "NY",
                        "send_reminder_sms": false,
                        "venue_group_id": "ahZzfnNldmVub3BfVmVudWVHcm91cBic2VjdXJlLXFhciELEhRuaWdodGAgMjWsMTYCAwcm9vbXMtxv",
                        "address_2": "None",
                        "min_price": "None",
                        "custom_fields": [],
                        "policy": null,
                        "served_by": "None",
                        "client_requests": "None",
                        "status": "COMPLETE",
                        "booked_by": "Paul Smith",
                        "phone_number": 12125559876,
                        "total_payment": 50,
                        "prepayment": 65,
                        "loyalty_id": "zyxabx987",
                        "tags": "",
                        "deleted": "None",
                        "mf_ratio_male": "None",
                        "mf_ratio_female": "None",
                        "comps": "None",
                        "external_client_id": "None",
                        "client_id": "ahZzfnNldmVucm9vbXMVudWVHcm91XFhcicLEhpuaWdcENsaWVudBiAgJiBuenrCAwtc2VjdXJlLodGxvb3BfVm",
                        "city": "New York",
                        "address": {
                          "street": "230 Park Avenue South",
                          "city": "New York"
                        },
                        "date": "2023-10-11",
                        "source_client_id": "None",
                        "loyalty_rank": 3,
                        "paid_by": null,
                        "loyalty_tier": "Platinum",
                        "shift_category": "BREAKFAST",
                        "table_numbers": [
                          "002"
                        ],
                        "max_guests": 5,
                        "arrival_time": "6:00 AM",
                        "country": "United States",
                        "cost_option": 0,
                        "created": "2023-09-07T14:20:38.874800",
                        "pos_tickets": "None",
                        "access_persistent_id": "ahFkZXZ-bmlnaHRsb29wLW5ld3IcCxIPbmlnaHRsb29wX1ZlbnVlGICAgICAjtUJDA-1569360529.21-0.580892461024",
                        "is_vip": false,
                        "reference_code": "7D0HP84OJK8",
                        "status_display": "Left",
                        "external_id": "None",
                        "notes": "Comes in for business meetings",
                        "user": {
                          "id": "ahZzfnNldmi2uPzzCQwVucmnYWVfVXNlchiA9vbXMtc2VjdXJlLXFhchULEghgM",
                          "name": "Integrator Group"
                        },
                        "auto_assignments": {
                          "table_codes": [
                            "10"
                          ],
                          "sort_order": 33,
                          "name": "Ms Jane Doe",
                          "table_ids": [
                            "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yggELEhFUYWJsZUl0ZW1BbmNlc3RvciJLYWhoemZuTmxkbVZ1Y205dmJYTXRjMlZqZFhKbExXUmxiVzl5SEFzU0QyNXBaMmgwYkc5dmNGOVdaVzUxWlJpQWdOQ0t1WWV6Q2d3DAsSE25pZ2h0bG9vcF9UYWJsZUl0ZW0YgIDQ0u3F4gsM"
                          ],
                          "is_reassigned": false
                        },
                        "problems": {
                          "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcigLEhtuaWdodGxvb3BfUmVzZXJ2YXRpb25BY3R1YWwYgIDQv9qAsgoM": {
                            "problem_name": "The reservation is too small for the current table",
                            "is_major": false
                          }
                        },
                        "real_datetime_of_slot": "2023-10-11 6:00:00",
                        "time_slot_iso": "6:00:00",
                        "venue_seating_area_name": null,
                        "venue_seating_area_id": "None",
                        "prepayment_total": 0,
                        "prepayment_net": "None",
                        "prepayment_service_charge": "None",
                        "prepayment_tax": "None",
                        "prepayment_gratuity": "None",
                        "onsite_payment": "None",
                        "onsite_payment_net": "None",
                        "onsite_payment_tax": "None",
                        "onsite_payment_gratuity": "None",
                        "onsite_payment_total": 0,
                        "total_net_payment": 0,
                        "total_gross_payment": 0,
                        "using_default_duration": false,
                        "hotel_confirmation": "None",
                        "hotel_id": "None",
                        "hotel_room": "None",
                        "upgrades": [
                          {
                            "inventory_id": "ahZzfnNldmVucm9vbXMtbnRvcnkYgIDI843suaWdodGxvb3BfVmVudWUYgIDI3fTMlgoMCxIac3JfVXBzZWxsQ2F0ZWdvcnlJbnZlbnRvcnkYgIDI843s6wgM",
                            "category_id": "ahZzfnNldmTMlgoMCxIRc3JfEg9uaWdodGxvb3BfVmVudWUYgIDI3fTMlgoMCxIRc3JfVXBzZWxsQ2F0ZWdvcnkYgIDIi5PSnggM",
                            "name": "Flowers",
                            "quantity": 2,
                            "price": 100,
                            "pos_item_id": ""
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clients/clients_merge/{client_id}": {
      "post": {
        "summary": "Merge Client Profiles",
        "description": "Combines multiple client profiles into a single profile. Takes one \"winning\" client_id, and one or more \"losing\" client_id(s). Details of the losing profile(s) will be added to the winning profile. The winning client_id will remain, and the losing client_id(s) will be deleted after the merge is complete.\nBilling History, Profile Stats, Tags and Marketing History will be combined. For all other data fields the winning profile data will remain and the losing profile data will be deleted immediately. NOTE: THIS PROCESS CANNOT BE UNDONE.",
        "operationId": "merge_client",
        "tags": [
          "Clients"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/client_id_path"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/MergeClientProfiles_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A token value for passing to either the Reservations Widget or Events Widget to populate the booking form with the client's profile information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "client_reference_code": {
                          "description": "Guest facing Reservation number. Uniqueness      \nis scoped to a Venue. If Venue prefixes are turned on,      \nuniqueness is scoped to the Venue Group level.",
                          "example": "A34CE38",
                          "type": "string"
                        },
                        "client_id": {
                          "description": "Unique identifier of the Client profile",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "client_reference_code": "7D0HP84OJK8",
                    "client_id": "ahZzfnNldmVucm9vbXMVudWVHcm91XFhcicLEhpuaWdcENsaWVudBiAgJiBuenrCAwtc2VjdXJlLodGxvb3BfVm"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clients/updates": {
      "post": {
        "summary": "Update a Client",
        "description": "Update a specified Client profile.",
        "operationId": "update_client",
        "tags": [
          "Clients"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMultiClients_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Update multiple profile objects\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "client_reference_code": {
                            "description": "Guest facing Reservation number. Uniqueness      \nis scoped to a Venue. If Venue prefixes are turned on,      \nuniqueness is scoped to the Venue Group level.",
                            "example": "A34CE38",
                            "type": "string"
                          },
                          "client_id": {
                            "description": "Unique identifier of the Client profile",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": [
                    {
                      "client_reference_code": "7D0HP84OJK8",
                      "client_id": "ahZzfnNldmVucm9vbXMVudWVHcm91XFhcicLEhpuaWdcENsaWVudBiAgJiBuenrCAwtc2VjdXJlLodGxvb3BfVm"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/clients/remove_personal_data": {
      "put": {
        "summary": "Remove Multiple Clients' Personal Data",
        "operationId": "remove_multiple_client_personal_data",
        "tags": [
          "Clients"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RemoveMultiClientData_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Object containing an HTTP response status code and message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "description": "Human‐readable message describing the response status.",
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    }
                  }
                },
                "example": {
                  "msg": "Clients personal data successfully removed.",
                  "status": 200
                }
              }
            }
          }
        }
      }
    },
    "/clients": {
      "get": {
        "summary": "Search Clients",
        "description": "Retrieve a list of Client profiles.",
        "operationId": "search_clients",
        "tags": [
          "Clients"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/venue_group_id_query_optional"
          },
          {
            "$ref": "#/components/parameters/limit_query_optional"
          },
          {
            "$ref": "#/components/parameters/cursor_query_optional"
          },
          {
            "$ref": "#/components/parameters/venue_id_client_query_optional"
          },
          {
            "$ref": "#/components/parameters/external_user_id_query_optional"
          },
          {
            "$ref": "#/components/parameters/name_query_optional"
          },
          {
            "$ref": "#/components/parameters/email_query_optional"
          },
          {
            "$ref": "#/components/parameters/phone_query_optional"
          },
          {
            "$ref": "#/components/parameters/contact_type_query_optional"
          },
          {
            "$ref": "#/components/parameters/client_tags_query_optional"
          },
          {
            "$ref": "#/components/parameters/client_sort_order_query_optional"
          },
          {
            "$ref": "#/components/parameters/has_loyalty_id_query_optional"
          },
          {
            "$ref": "#/components/parameters/loyalty_id_query_optional"
          },
          {
            "$ref": "#/components/parameters/loyalty_tier_query_optional"
          },
          {
            "$ref": "#/components/parameters/loyalty_rank_min_query_optional"
          },
          {
            "$ref": "#/components/parameters/loyalty_rank_max_query_optional"
          },
          {
            "$ref": "#/components/parameters/birthday_start_query_optional"
          },
          {
            "$ref": "#/components/parameters/birthday_end_query_optional"
          },
          {
            "$ref": "#/components/parameters/updated_since_query_optional"
          },
          {
            "$ref": "#/components/parameters/include_one_time_guest_query_optional"
          }
        ],
        "responses": {
          "200": {
            "description": "Object containing an HTTP response status code and message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "cursor": {
                          "type": "string",
                          "description": "Cursor for pagination"
                        },
                        "limit": {
                          "type": "string",
                          "description": "Limit on objects returned between 1 and 400. Default is 30.",
                          "minimum": 1,
                          "maximum": 400,
                          "default": 30
                        },
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "description": "Address first line",
                                "example": "122 West 27th Street",
                                "type": "string"
                              },
                              "address_2": {
                                "description": "Address second line",
                                "example": "7th Floor",
                                "type": "string"
                              },
                              "anniversary_day": {
                                "description": "The day of the month that the Client's anniversary falls on (In `DD` format).",
                                "example": 12,
                                "type": "integer"
                              },
                              "anniversary_month": {
                                "description": "The month of the year that the Client's anniverary falls on (In `MM` format).      ",
                                "example": 4,
                                "type": "integer"
                              },
                              "avg_rating": {
                                "default": 0,
                                "description": "Average feedback rating provided by the Client on a scale of 1 to 5.",
                                "example": 4.5,
                                "type": "number"
                              },
                              "birthday_alt_day": {
                                "description": "The day of the month that the Client's birthday falls on (In `DD` format).      ",
                                "example": 8,
                                "type": "integer"
                              },
                              "birthday_alt_month": {
                                "description": "The month of the year that the Client's birthday falls on (In `MM` format).",
                                "example": 11,
                                "type": "integer"
                              },
                              "birthday_day": {
                                "description": "The day of the month that the Client's birthday falls on (In `DD` format).      ",
                                "example": 28,
                                "type": "integer"
                              },
                              "birthday_month": {
                                "description": "The month of the year that the Client's birthday falls on (In `MM` format).      ",
                                "example": 12,
                                "type": "integer"
                              },
                              "city": {
                                "description": "The city of the Client's residential address.      ",
                                "example": "New York",
                                "type": "string"
                              },
                              "client_tags": {
                                "items": {
                                  "properties": {
                                    "color": {
                                      "type": "string"
                                    },
                                    "group": {
                                      "type": "string"
                                    },
                                    "group_display": {
                                      "type": "string"
                                    },
                                    "tag": {
                                      "type": "string"
                                    },
                                    "tag_display": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "company": {
                                "description": "The Client's employer.",
                                "example": "SevenRooms",
                                "type": "string"
                              },
                              "country": {
                                "description": "The country of the Client's residential address.",
                                "example": "United States",
                                "type": "string"
                              },
                              "created": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Created timestamp"
                              },
                              "custom_fields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "system_name": {
                                      "type": "string"
                                    },
                                    "display_order": {
                                      "type": "integer"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "deleted": {
                                "type": "string"
                              },
                              "email": {
                                "description": "Email associated with the Reservation.      \n> All emails are validated for format prior to entry into the system.",
                                "example": "support@sevenrooms.com",
                                "type": "string"
                              },
                              "email_alt": {
                                "description": "The Client's seecondary email address.",
                                "example": "john.doe@yahoo.com",
                                "type": "string"
                              },
                              "external_user_id": {
                                "description": "Third party User ID stored on the Client profile.      \n\n> You may associate an external user account with a Client in the SevenRooms database. If the associated client for the Reservation has an `external_user_id` then that value will be returned here.",
                                "example": 55602,
                                "type": "string"
                              },
                              "first_name": {
                                "description": "The Client's first name.",
                                "example": "John",
                                "type": "string"
                              },
                              "gender": {
                                "default": "UNSPECIFIED",
                                "description": "The Client's gender.      \n\n```ENUM(\"MALE\", \"FEMALE\", \"UNSPECIFIED\")```",
                                "example": "MALE",
                                "type": "string"
                              },
                              "has_billing_profile": {
                                "default": false,
                                "description": "Whether the Client's profile has an associated billing profile.",
                                "example": true,
                                "type": "boolean"
                              },
                              "id": {
                                "type": "string"
                              },
                              "is_contact_private": {
                                "default": false,
                                "description": "Whether the Client's contact details will be hidden from users.",
                                "example": true,
                                "type": "boolean"
                              },
                              "is_one_time_guest": {
                                "default": false,
                                "example": false,
                                "type": "boolean"
                              },
                              "last_name": {
                                "example": "Last name of the Client booking the Reservation.",
                                "type": "string"
                              },
                              "loyalty_id": {
                                "example": "`loyalty_id` value from the Client entity associated with the Reservation.",
                                "type": "string"
                              },
                              "loyalty_rank": {
                                "example": "`loyalty_rank` value from the Client entity.",
                                "type": "integer"
                              },
                              "loyalty_tier": {
                                "description": "`loyalty_tier` value from the Client entity associated with the Reservation.",
                                "type": "string"
                              },
                              "marketing_opt_in": {
                                "description": "Whether the Client has opted into to the Venue Group's marketing program.",
                                "type": "boolean"
                              },
                              "marketing_opt_in_ts": {
                                "description": "Timestamp of when the Client opted in to the Venue Group's marketing program.",
                                "type": "string"
                              },
                              "member_groups": {
                                "description": "This field is deprecated. DO NOT USE",
                                "items": {
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "notes": {
                                "description": "Internal, Venue facing notes for the Reservation.",
                                "type": "string"
                              },
                              "phone_number": {
                                "description": "Phone number associated with the Reservation.      \n> Can be numerous valid formats, including international phone      \nnumbers. US phone numbers generally follow      \n1-xxx-xxx-xxxx.",
                                "example": "1-555-555-5555",
                                "type": "string"
                              },
                              "phone_number_alt": {
                                "description": "The Client's alternate phone number (In `E-164` format).",
                                "example": 12125556789,
                                "type": "string"
                              },
                              "phone_number_alt_locale": {
                                "description": "The locale of the Client's alternate phone number.",
                                "example": "AU",
                                "type": "string"
                              },
                              "phone_number_locale": {
                                "description": "The locale of the Client's primary phone number.",
                                "example": "US",
                                "type": "string"
                              },
                              "photo": {
                                "properties": {
                                  "large": {
                                    "type": "string"
                                  },
                                  "large_height": {
                                    "type": "integer"
                                  },
                                  "large_width": {
                                    "type": "integer"
                                  },
                                  "medium": {
                                    "type": "string"
                                  },
                                  "medium_height": {
                                    "type": "integer"
                                  },
                                  "medium_width": {
                                    "type": "integer"
                                  },
                                  "raw": {
                                    "type": "string"
                                  },
                                  "small": {
                                    "type": "string"
                                  },
                                  "small_height": {
                                    "type": "integer"
                                  },
                                  "small_width": {
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "photo_crop_info": {
                                "properties": {
                                  "height": {
                                    "type": "number"
                                  },
                                  "width": {
                                    "type": "number"
                                  },
                                  "x": {
                                    "type": "integer"
                                  },
                                  "y": {
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "postal_code": {
                                "description": "`postal_code` value from the Client entity associated with the Reservation.",
                                "type": "string"
                              },
                              "private_notes": {
                                "type": "string"
                              },
                              "reference_code": {
                                "description": "Guest facing Reservation number. Uniqueness      \nis scoped to a Venue. If Venue prefixes are turned on,      \nuniqueness is scoped to the Venue Group level.",
                                "example": "A34CE38",
                                "type": "string"
                              },
                              "salutation": {
                                "type": "string"
                              },
                              "state": {
                                "description": "`state` value from the Client entity associated with the Reservation.",
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "tags": {
                                "items": {
                                  "properties": {
                                    "color": {
                                      "type": "string"
                                    },
                                    "group": {
                                      "type": "string"
                                    },
                                    "group_display": {
                                      "type": "string"
                                    },
                                    "tag": {
                                      "type": "string"
                                    },
                                    "tag_display": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "title": {
                                "type": "string"
                              },
                              "total_cancellations": {
                                "type": "integer"
                              },
                              "total_covers": {
                                "type": "integer"
                              },
                              "total_noshows": {
                                "type": "integer"
                              },
                              "total_spend": {
                                "type": "number"
                              },
                              "total_spend_per_cover": {
                                "type": "number"
                              },
                              "total_spend_per_visit": {
                                "type": "number"
                              },
                              "total_visits": {
                                "type": "integer"
                              },
                              "updated": {
                                "type": "string"
                              },
                              "user": {
                                "description": "The SevenRooms User who created the Reservation.",
                                "example": "Chris Walker",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                }
                              },
                              "venue_group_id": {
                                "description": "Unique identifier of the venue group.",
                                "type": "string"
                              },
                              "venue_stats": {
                                "properties": {
                                  "venue_id": {
                                    "properties": {
                                      "avg_rating": {
                                        "type": "integer"
                                      },
                                      "booked_by_names": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "last_visit_date": {
                                        "type": "string"
                                      },
                                      "num_ratings": {
                                        "type": "integer"
                                      },
                                      "total_cancellations": {
                                        "type": "integer"
                                      },
                                      "total_covers": {
                                        "type": "integer"
                                      },
                                      "total_noshows": {
                                        "type": "integer"
                                      },
                                      "total_spend": {
                                        "type": "number"
                                      },
                                      "total_spend_local": {
                                        "type": "number"
                                      },
                                      "total_spend_local_per_cover": {
                                        "type": "number"
                                      },
                                      "total_spend_local_per_visit": {
                                        "type": "number"
                                      },
                                      "total_spend_per_cover": {
                                        "type": "number"
                                      },
                                      "total_spend_per_visit": {
                                        "type": "number"
                                      },
                                      "total_visits": {
                                        "type": "integer"
                                      },
                                      "venue_marketing_opt_in": {
                                        "type": "boolean"
                                      },
                                      "venue_marketing_opt_in_ts": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "cursor": "DXF1ZXJ5QW5kRmV0Y2gBAAAAAACIdOUWdTRXQy1UOGdUMEtvbkp2TVBwUmdOdw==",
                    "limit": 1,
                    "results": [
                      {
                        "address": {
                          "street": "230 Park Avenue South",
                          "city": "New York"
                        },
                        "address_2": null,
                        "anniversary_day": 28,
                        "anniversary_month": "06",
                        "avg_rating": 0,
                        "birthday_alt_day": 24,
                        "birthday_alt_month": 11,
                        "birthday_day": 1,
                        "birthday_month": 10,
                        "city": "New York",
                        "client_tags": [
                          {
                            "color": "#fdf66e",
                            "tag_display": "VIP",
                            "group_display\"": "VIP client type",
                            "group\"": "VIP client type",
                            "tag": "VIP"
                          }
                        ],
                        "company": "SevenRooms",
                        "country": "United States",
                        "created": "2023-12-07T14:20:38.874800",
                        "custom_fields": [],
                        "deleted": "2024-02-28T16:27:38.874800",
                        "email": "jane.doe@gmail.com",
                        "email_alt": "jane.doe@yahoo.com",
                        "external_user_id": "abczyx123",
                        "first_name": "Jane",
                        "gender": "FEMALE",
                        "has_billing_profile": false,
                        "id": "ahZzfnNldmVucm9vbXMVudWVHcm91XFhcicLEhpuaWdcENsaWVudBiAgJiBuenrCAwtc2VjdXJlLodGxvb3BfVm",
                        "is_contact_private": null,
                        "is_one_time_guest": false,
                        "last_name": "Doe",
                        "loyalty_id": "zyxabx987",
                        "loyalty_rank": 3,
                        "loyalty_tier": "Platinum",
                        "marketing_opt_in": false,
                        "marketing_opt_in_ts": null,
                        "member_groups": [],
                        "notes": "Comes in for business meetings",
                        "phone_number": "+12125559876",
                        "phone_number_alt": "+12125556789",
                        "phone_number_alt_locale": "US",
                        "phone_number_locale": "US",
                        "photo": {
                          "medium": "AMIfv95U8RPaBedSB-anKWoT1ViuNgxnCWxEpIp3_JzDUFOg2wNjicrTYLm3giaqlWUdsfkgS-MFTF6OLvu7_361GygtS_60ZL4GbVY9aAm0WkdhYKuMtURDtqoyYNMT4j2fefxMJswTjSdrErNKjqqM6HmyD2g57PWYPFaP3FovcYQtIXesLS51QeoGRhDtx11UFycR2X5WeKCIp8eajCPrc3M9cZpYpcVTTTUHSkB65VvNFNH7NRq0gntV5RRZQN18eQaD-d_Px3JyhYKXhSRF6pkb9GfOUiFOm4koX2jMpvWPwd92gmeA4Tja41Bk9jGODWG-hGY5_TrhCKmEaOGyRvfKPMgSUZrUSEG1xdoFrEPTq9oaVHDh-6AzhAo30LXEjY6OEWywrPgUJzlopMOpMItOLUGR0B35s48F5wBZx3IEgk-OUBZetQI3_uGEVn3vZkro7rTRFxTwU5ncT3oHg--z_ex_GaH9CVBRPJwM-lwquZf2rd0xfClcsjZYNnCfumJ2m0NhMecXUTpcyc8pUhL5X-9Gu_3_x8DsFtIOUOjNgdN_TJpqWkUv9paYAwDDomwaUC212dyg_iBCu54WzdAIPxjAwdakPO6x-vdiq4E5PXXz7dY",
                          "large_height": 129,
                          "small_width": 100,
                          "medium_width": 129,
                          "small_height": 100,
                          "large": "AMIfv961ThuQQk4xEkPccx85fLc2eHnShNCxF-3G2UNi1An2QHBDQLBlGzAZgeNPy6f_qic4zAE2yH_jFFPAH9u51pwPJHGQt-pPcY0wG0XGYpGQWFlM4nJoayzGDpkDrawrNW8KwBcPghFbGyKcyzMYrLhwWudDW6PbsABbSH_qSsXTaC5gehT4_3DrWaey09KYYbZAiJ7P5Q_S_5Iactn2Otb0gMbH491WPCV_sDampYaGFgULwZplVGmDKxBBezLGrYtF8-AFaiSmGv-t5GBcGPnIpLCtT20pwdJeAsa40B_W4GgAsBVAKgugNSP-cbmro_59wSr2yEJWL09JGU5w9JD9w5fEb9H2CExIBGZyXrQGWTUMcKKV9oItykHJV9UoDFI9ZEZ3y2ybDS56-LQjaFUq8veX2hXuSWlQR-3FZa0q6-S52RQlGcQep_JNy0czgcJcmCZIy0gXekb0R6nXk9oYHlZF0oRMc9Y0hPCkhSsoAaWBhD8sJQk8czTwqnSYWEFR9kKuivYLovuc-iMXNjM99W6O9U0VUboReOuhn5w-ktWohtLFiUCykTJUqgWMtF1-qkhpaTtnvzYyNS6mpFtaPtnbjC-JJXyv6MopCTR4pash6Bw",
                          "raw": "AMIfv94a79Bd1ZwvSbYFnrFJWpZvP2WHQigcvIJ6GlwyOoocK0RmUz-JuFvYN-BK1StcU0kzGy4BB51ZjT2d7XruKQ_rVxLbtozpkHGvM2AF9hLVjJ-vRhpHIbvWkb93v_kSQdzBw3Sa9mZjXZnPgowN0v_lekJXdoyjhZRE7UzYQj2APM8e_XoIJQARi-_b57sPWjSYF40kBbcAJY-UXe8zYAJ1GK7dOuNTTVQcaSNN_KUAjLwKlWYkRDiCyfWcfu0sSvTA7ueEtVpxRmzqhrqhu-0a1qtTs6C7zz1KqRjnTI7Jm4hkoAGfIId1oFNx0hGiBT6_XVb3",
                          "medium_height": 129,
                          "small": "AMIfv97gGkRoyo3gu2ajDopW5oCevtzGeYKK-xqvz7CzEeUu7trzmaVIN3HQdEMK_FrMilQ3u1ZQ-fdMvhxk7dFM5QNIpBpCXF0lr-1mMZimP0-vOz-5Zx57RULHmVk3MCxr6nAszWvBOkq1nnDnUeAkTsyvRflnEPf56JDKB6bni1mKkdsKCroD4Qicd38Ah3hf3ap85yFlZn_ubGjXJEpBfzh3TfR5FoByplGBLOX5CkU3Tl2JqhFV2LWv1_mxhtcA8UT4fccu3XLDpnPnIQZo3QT1SZ_ItqOIR1tvaEBxUKXgkt8n3fYim4Ucg6_qX82oHcsoAMdk9MpoRF7-XeKgQ79hRGfksXpWXM1tlezrQqmoI8imHWQsGmUabbdOUyyBTsvuIZ1vuMV1Cwiew-CEVwJv4BvUXcKnbzewffGLqHQ72c03jbdEvPBXZphkeCbkonuQ1tj2indCRRqdDPMUpO8Li5gpFrsK1usiApFnGeEFuDOtjnH4SBLnIdlsKUbvqF3X3SBLNHsrP17UgQ9iexU168kLehjxlJ6oQ8UBFJujuKt3AYd_L3xYk8tCqkXcf04awW54SbEsbJKGHA07o_KfjtdY3H498m1fEdDZ352pj--pwCo",
                          "large_width": 129
                        },
                        "photo_crop_info": {
                          "x": 0,
                          "y": 0,
                          "height": 126.976,
                          "width": 126.976
                        },
                        "postal_code": 11201,
                        "private_notes": "Loves the chocolate lava cake",
                        "reference_code": "7D0HP84OJK8",
                        "salutation": null,
                        "state": "NY",
                        "status": "VIP",
                        "tags": "",
                        "title": "CEO",
                        "total_cancellations": 0,
                        "total_covers": 4,
                        "total_noshows": 0,
                        "total_spend": 187.5,
                        "total_spend_per_cover": 46.875,
                        "total_spend_per_visit": 187.5,
                        "total_visits": 1,
                        "updated": "2024-01-14T14:20:38.874800",
                        "user": {
                          "id": "ahZzfnNldmi2uPzzCQwVucmnYWVfVXNlchiA9vbXMtc2VjdXJlLXFhchULEghgM",
                          "name": "Integrator Group"
                        },
                        "venue_group_id": "ahZzfnNldmVub3BfVmVudWVHcm91cBic2VjdXJlLXFhciELEhRuaWdodGAgMjWsMTYCAwcm9vbXMtxv",
                        "venue_stats": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a Client",
        "description": "Create a Venue Group Client.",
        "operationId": "create_client",
        "tags": [
          "Clients"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateClient_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Client object\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "description": "Address first line",
                          "example": "122 West 27th Street",
                          "type": "string"
                        },
                        "address_2": {
                          "description": "Address second line",
                          "example": "7th Floor",
                          "type": "string"
                        },
                        "anniversary_day": {
                          "description": "The day of the month that the Client's anniversary falls on (In `DD` format).",
                          "example": 12,
                          "type": "integer"
                        },
                        "anniversary_month": {
                          "description": "The month of the year that the Client's anniverary falls on (In `MM` format).      ",
                          "example": 4,
                          "type": "integer"
                        },
                        "avg_rating": {
                          "default": 0,
                          "description": "Average feedback rating provided by the Client on a scale of 1 to 5.",
                          "example": 4.5,
                          "type": "number"
                        },
                        "birthday_alt_day": {
                          "description": "The day of the month that the Client's birthday falls on (In `DD` format).      ",
                          "example": 8,
                          "type": "integer"
                        },
                        "birthday_alt_month": {
                          "description": "The month of the year that the Client's birthday falls on (In `MM` format).",
                          "example": 11,
                          "type": "integer"
                        },
                        "birthday_day": {
                          "description": "The day of the month that the Client's birthday falls on (In `DD` format).      ",
                          "example": 28,
                          "type": "integer"
                        },
                        "birthday_month": {
                          "description": "The month of the year that the Client's birthday falls on (In `MM` format).      ",
                          "example": 12,
                          "type": "integer"
                        },
                        "city": {
                          "description": "The city of the Client's residential address.      ",
                          "example": "New York",
                          "type": "string"
                        },
                        "client_tags": {
                          "items": {
                            "properties": {
                              "color": {
                                "type": "string"
                              },
                              "group": {
                                "type": "string"
                              },
                              "group_display": {
                                "type": "string"
                              },
                              "tag": {
                                "type": "string"
                              },
                              "tag_display": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "company": {
                          "description": "The Client's employer.",
                          "example": "SevenRooms",
                          "type": "string"
                        },
                        "country": {
                          "description": "The country of the Client's residential address.",
                          "example": "United States",
                          "type": "string"
                        },
                        "created": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Created timestamp"
                        },
                        "custom_fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "system_name": {
                                "type": "string"
                              },
                              "display_order": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "deleted": {
                          "type": "string"
                        },
                        "email": {
                          "description": "Email associated with the Reservation.      \n> All emails are validated for format prior to entry into the system.",
                          "example": "support@sevenrooms.com",
                          "type": "string"
                        },
                        "email_alt": {
                          "description": "The Client's seecondary email address.",
                          "example": "john.doe@yahoo.com",
                          "type": "string"
                        },
                        "external_user_id": {
                          "description": "Third party User ID stored on the Client profile.      \n\n> You may associate an external user account with a Client in the SevenRooms database. If the associated client for the Reservation has an `external_user_id` then that value will be returned here.",
                          "example": 55602,
                          "type": "string"
                        },
                        "first_name": {
                          "description": "The Client's first name.",
                          "example": "John",
                          "type": "string"
                        },
                        "gender": {
                          "default": "UNSPECIFIED",
                          "description": "The Client's gender.      \n\n```ENUM(\"MALE\", \"FEMALE\", \"UNSPECIFIED\")```",
                          "example": "MALE",
                          "type": "string"
                        },
                        "has_billing_profile": {
                          "default": false,
                          "description": "Whether the Client's profile has an associated billing profile.",
                          "example": true,
                          "type": "boolean"
                        },
                        "id": {
                          "type": "string"
                        },
                        "is_contact_private": {
                          "default": false,
                          "description": "Whether the Client's contact details will be hidden from users.",
                          "example": true,
                          "type": "boolean"
                        },
                        "is_one_time_guest": {
                          "default": false,
                          "example": false,
                          "type": "boolean"
                        },
                        "last_name": {
                          "example": "Last name of the Client booking the Reservation.",
                          "type": "string"
                        },
                        "loyalty_id": {
                          "example": "`loyalty_id` value from the Client entity associated with the Reservation.",
                          "type": "string"
                        },
                        "loyalty_rank": {
                          "example": "`loyalty_rank` value from the Client entity.",
                          "type": "integer"
                        },
                        "loyalty_tier": {
                          "description": "`loyalty_tier` value from the Client entity associated with the Reservation.",
                          "type": "string"
                        },
                        "marketing_opt_in": {
                          "description": "Whether the Client has opted into to the Venue Group's marketing program.",
                          "type": "boolean"
                        },
                        "marketing_opt_in_ts": {
                          "description": "Timestamp of when the Client opted in to the Venue Group's marketing program.",
                          "type": "string"
                        },
                        "member_groups": {
                          "description": "This field is deprecated. DO NOT USE",
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "notes": {
                          "description": "Internal, Venue facing notes for the Reservation.",
                          "type": "string"
                        },
                        "phone_number": {
                          "description": "Phone number associated with the Reservation.      \n> Can be numerous valid formats, including international phone      \nnumbers. US phone numbers generally follow      \n1-xxx-xxx-xxxx.",
                          "example": "1-555-555-5555",
                          "type": "string"
                        },
                        "phone_number_alt": {
                          "description": "The Client's alternate phone number (In `E-164` format).",
                          "example": 12125556789,
                          "type": "string"
                        },
                        "phone_number_alt_locale": {
                          "description": "The locale of the Client's alternate phone number.",
                          "example": "AU",
                          "type": "string"
                        },
                        "phone_number_locale": {
                          "description": "The locale of the Client's primary phone number.",
                          "example": "US",
                          "type": "string"
                        },
                        "photo": {
                          "properties": {
                            "large": {
                              "type": "string"
                            },
                            "large_height": {
                              "type": "integer"
                            },
                            "large_width": {
                              "type": "integer"
                            },
                            "medium": {
                              "type": "string"
                            },
                            "medium_height": {
                              "type": "integer"
                            },
                            "medium_width": {
                              "type": "integer"
                            },
                            "raw": {
                              "type": "string"
                            },
                            "small": {
                              "type": "string"
                            },
                            "small_height": {
                              "type": "integer"
                            },
                            "small_width": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "photo_crop_info": {
                          "properties": {
                            "height": {
                              "type": "number"
                            },
                            "width": {
                              "type": "number"
                            },
                            "x": {
                              "type": "integer"
                            },
                            "y": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "postal_code": {
                          "description": "`postal_code` value from the Client entity associated with the Reservation.",
                          "type": "string"
                        },
                        "private_notes": {
                          "type": "string"
                        },
                        "reference_code": {
                          "description": "Guest facing Reservation number. Uniqueness      \nis scoped to a Venue. If Venue prefixes are turned on,      \nuniqueness is scoped to the Venue Group level.",
                          "example": "A34CE38",
                          "type": "string"
                        },
                        "salutation": {
                          "type": "string"
                        },
                        "state": {
                          "description": "`state` value from the Client entity associated with the Reservation.",
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "tags": {
                          "items": {
                            "properties": {
                              "color": {
                                "type": "string"
                              },
                              "group": {
                                "type": "string"
                              },
                              "group_display": {
                                "type": "string"
                              },
                              "tag": {
                                "type": "string"
                              },
                              "tag_display": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "title": {
                          "type": "string"
                        },
                        "total_cancellations": {
                          "type": "integer"
                        },
                        "total_covers": {
                          "type": "integer"
                        },
                        "total_noshows": {
                          "type": "integer"
                        },
                        "total_spend": {
                          "type": "number"
                        },
                        "total_spend_per_cover": {
                          "type": "number"
                        },
                        "total_spend_per_visit": {
                          "type": "number"
                        },
                        "total_visits": {
                          "type": "integer"
                        },
                        "updated": {
                          "type": "string"
                        },
                        "user": {
                          "description": "The SevenRooms User who created the Reservation.",
                          "example": "Chris Walker",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "venue_group_id": {
                          "description": "Unique identifier of the venue group.",
                          "type": "string"
                        },
                        "venue_stats": {
                          "properties": {
                            "venue_id": {
                              "properties": {
                                "avg_rating": {
                                  "type": "integer"
                                },
                                "booked_by_names": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "last_visit_date": {
                                  "type": "string"
                                },
                                "num_ratings": {
                                  "type": "integer"
                                },
                                "total_cancellations": {
                                  "type": "integer"
                                },
                                "total_covers": {
                                  "type": "integer"
                                },
                                "total_noshows": {
                                  "type": "integer"
                                },
                                "total_spend": {
                                  "type": "number"
                                },
                                "total_spend_local": {
                                  "type": "number"
                                },
                                "total_spend_local_per_cover": {
                                  "type": "number"
                                },
                                "total_spend_local_per_visit": {
                                  "type": "number"
                                },
                                "total_spend_per_cover": {
                                  "type": "number"
                                },
                                "total_spend_per_visit": {
                                  "type": "number"
                                },
                                "total_visits": {
                                  "type": "integer"
                                },
                                "venue_marketing_opt_in": {
                                  "type": "boolean"
                                },
                                "venue_marketing_opt_in_ts": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "address": {
                      "street": "230 Park Avenue South",
                      "city": "New York"
                    },
                    "address_2": null,
                    "anniversary_day": 28,
                    "anniversary_month": "06",
                    "avg_rating": 0,
                    "birthday_alt_day": 24,
                    "birthday_alt_month": 11,
                    "birthday_day": 1,
                    "birthday_month": 10,
                    "city": "New York",
                    "client_tags": [],
                    "company": "SevenRooms",
                    "country": "United States",
                    "created": "2023-12-07T14:20:38.874800",
                    "custom_fields": [],
                    "deleted": null,
                    "email": "jane.doe@gmail.com",
                    "email_alt": "jane.doe@yahoo.com",
                    "external_user_id": "abczyx123",
                    "first_name": "Jane",
                    "gender": "FEMALE",
                    "has_billing_profile": false,
                    "id": "ahZzfnNldmVucm9vbXMVudWVHcm91XFhcicLEhpuaWdcENsaWVudBiAgJiBuenrCAwtc2VjdXJlLodGxvb3BfVm",
                    "is_contact_private": null,
                    "is_one_time_guest": false,
                    "last_name": "Doe",
                    "loyalty_id": "zyxabx987",
                    "loyalty_rank": 3,
                    "loyalty_tier": "Platinum",
                    "marketing_opt_in": false,
                    "marketing_opt_in_ts": null,
                    "member_groups": [],
                    "notes": null,
                    "phone_number": "+12125559876",
                    "phone_number_alt": "+12125556789",
                    "phone_number_alt_locale": "US",
                    "phone_number_locale": "US",
                    "photo": null,
                    "photo_crop_info": {},
                    "postal_code": 11201,
                    "private_notes": null,
                    "reference_code": "7D0HP84OJK8",
                    "salutation": null,
                    "state": "NY",
                    "status": "VIP",
                    "tags": "",
                    "title": "CEO",
                    "total_cancellations": null,
                    "total_covers": null,
                    "total_noshows": null,
                    "total_spend": 0,
                    "total_spend_per_cover": null,
                    "total_spend_per_visit": null,
                    "total_visits": 0,
                    "updated": "2024-01-14T14:20:38.874800",
                    "user": {
                      "id": "ahZzfnNldmi2uPzzCQwVucmnYWVfVXNlchiA9vbXMtc2VjdXJlLXFhchULEghgM",
                      "name": "Integrator Group"
                    },
                    "venue_group_id": "ahZzfnNldmVub3BfVmVudWVHcm91cBic2VjdXJlLXFhciELEhRuaWdodGAgMjWsMTYCAwcm9vbXMtxv",
                    "venue_stats": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clients/{client_id}": {
      "get": {
        "summary": "Get a Client",
        "description": "Retrieve a specified Client profile.",
        "operationId": "get_client",
        "tags": [
          "Clients"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/client_id_path"
          }
        ],
        "responses": {
          "200": {
            "description": "Object containing an HTTP response status code and message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "description": "Address first line",
                          "example": "122 West 27th Street",
                          "type": "string"
                        },
                        "address_2": {
                          "description": "Address second line",
                          "example": "7th Floor",
                          "type": "string"
                        },
                        "anniversary_day": {
                          "description": "The day of the month that the Client's anniversary falls on (In `DD` format).",
                          "example": 12,
                          "type": "integer"
                        },
                        "anniversary_month": {
                          "description": "The month of the year that the Client's anniverary falls on (In `MM` format).      ",
                          "example": 4,
                          "type": "integer"
                        },
                        "avg_rating": {
                          "default": 0,
                          "description": "Average feedback rating provided by the Client on a scale of 1 to 5.",
                          "example": 4.5,
                          "type": "number"
                        },
                        "birthday_alt_day": {
                          "description": "The day of the month that the Client's birthday falls on (In `DD` format).      ",
                          "example": 8,
                          "type": "integer"
                        },
                        "birthday_alt_month": {
                          "description": "The month of the year that the Client's birthday falls on (In `MM` format).",
                          "example": 11,
                          "type": "integer"
                        },
                        "birthday_day": {
                          "description": "The day of the month that the Client's birthday falls on (In `DD` format).      ",
                          "example": 28,
                          "type": "integer"
                        },
                        "birthday_month": {
                          "description": "The month of the year that the Client's birthday falls on (In `MM` format).      ",
                          "example": 12,
                          "type": "integer"
                        },
                        "city": {
                          "description": "The city of the Client's residential address.      ",
                          "example": "New York",
                          "type": "string"
                        },
                        "client_tags": {
                          "items": {
                            "properties": {
                              "color": {
                                "type": "string"
                              },
                              "group": {
                                "type": "string"
                              },
                              "group_display": {
                                "type": "string"
                              },
                              "tag": {
                                "type": "string"
                              },
                              "tag_display": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "company": {
                          "description": "The Client's employer.",
                          "example": "SevenRooms",
                          "type": "string"
                        },
                        "country": {
                          "description": "The country of the Client's residential address.",
                          "example": "United States",
                          "type": "string"
                        },
                        "created": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Created timestamp"
                        },
                        "custom_fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "system_name": {
                                "type": "string"
                              },
                              "display_order": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "deleted": {
                          "type": "string"
                        },
                        "email": {
                          "description": "Email associated with the Reservation.      \n> All emails are validated for format prior to entry into the system.",
                          "example": "support@sevenrooms.com",
                          "type": "string"
                        },
                        "email_alt": {
                          "description": "The Client's seecondary email address.",
                          "example": "john.doe@yahoo.com",
                          "type": "string"
                        },
                        "external_user_id": {
                          "description": "Third party User ID stored on the Client profile.      \n\n> You may associate an external user account with a Client in the SevenRooms database. If the associated client for the Reservation has an `external_user_id` then that value will be returned here.",
                          "example": 55602,
                          "type": "string"
                        },
                        "first_name": {
                          "description": "The Client's first name.",
                          "example": "John",
                          "type": "string"
                        },
                        "gender": {
                          "default": "UNSPECIFIED",
                          "description": "The Client's gender.      \n\n```ENUM(\"MALE\", \"FEMALE\", \"UNSPECIFIED\")```",
                          "example": "MALE",
                          "type": "string"
                        },
                        "has_billing_profile": {
                          "default": false,
                          "description": "Whether the Client's profile has an associated billing profile.",
                          "example": true,
                          "type": "boolean"
                        },
                        "id": {
                          "type": "string"
                        },
                        "is_contact_private": {
                          "default": false,
                          "description": "Whether the Client's contact details will be hidden from users.",
                          "example": true,
                          "type": "boolean"
                        },
                        "is_one_time_guest": {
                          "default": false,
                          "example": false,
                          "type": "boolean"
                        },
                        "last_name": {
                          "example": "Last name of the Client booking the Reservation.",
                          "type": "string"
                        },
                        "loyalty_id": {
                          "example": "`loyalty_id` value from the Client entity associated with the Reservation.",
                          "type": "string"
                        },
                        "loyalty_rank": {
                          "example": "`loyalty_rank` value from the Client entity.",
                          "type": "integer"
                        },
                        "loyalty_tier": {
                          "description": "`loyalty_tier` value from the Client entity associated with the Reservation.",
                          "type": "string"
                        },
                        "marketing_opt_in": {
                          "description": "Whether the Client has opted into to the Venue Group's marketing program.",
                          "type": "boolean"
                        },
                        "marketing_opt_in_ts": {
                          "description": "Timestamp of when the Client opted in to the Venue Group's marketing program.",
                          "type": "string"
                        },
                        "member_groups": {
                          "description": "This field is deprecated. DO NOT USE",
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "notes": {
                          "description": "Internal, Venue facing notes for the Reservation.",
                          "type": "string"
                        },
                        "phone_number": {
                          "description": "Phone number associated with the Reservation.      \n> Can be numerous valid formats, including international phone      \nnumbers. US phone numbers generally follow      \n1-xxx-xxx-xxxx.",
                          "example": "1-555-555-5555",
                          "type": "string"
                        },
                        "phone_number_alt": {
                          "description": "The Client's alternate phone number (In `E-164` format).",
                          "example": 12125556789,
                          "type": "string"
                        },
                        "phone_number_alt_locale": {
                          "description": "The locale of the Client's alternate phone number.",
                          "example": "AU",
                          "type": "string"
                        },
                        "phone_number_locale": {
                          "description": "The locale of the Client's primary phone number.",
                          "example": "US",
                          "type": "string"
                        },
                        "photo": {
                          "properties": {
                            "large": {
                              "type": "string"
                            },
                            "large_height": {
                              "type": "integer"
                            },
                            "large_width": {
                              "type": "integer"
                            },
                            "medium": {
                              "type": "string"
                            },
                            "medium_height": {
                              "type": "integer"
                            },
                            "medium_width": {
                              "type": "integer"
                            },
                            "raw": {
                              "type": "string"
                            },
                            "small": {
                              "type": "string"
                            },
                            "small_height": {
                              "type": "integer"
                            },
                            "small_width": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "photo_crop_info": {
                          "properties": {
                            "height": {
                              "type": "number"
                            },
                            "width": {
                              "type": "number"
                            },
                            "x": {
                              "type": "integer"
                            },
                            "y": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "postal_code": {
                          "description": "`postal_code` value from the Client entity associated with the Reservation.",
                          "type": "string"
                        },
                        "private_notes": {
                          "type": "string"
                        },
                        "reference_code": {
                          "description": "Guest facing Reservation number. Uniqueness      \nis scoped to a Venue. If Venue prefixes are turned on,      \nuniqueness is scoped to the Venue Group level.",
                          "example": "A34CE38",
                          "type": "string"
                        },
                        "salutation": {
                          "type": "string"
                        },
                        "state": {
                          "description": "`state` value from the Client entity associated with the Reservation.",
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "tags": {
                          "items": {
                            "properties": {
                              "color": {
                                "type": "string"
                              },
                              "group": {
                                "type": "string"
                              },
                              "group_display": {
                                "type": "string"
                              },
                              "tag": {
                                "type": "string"
                              },
                              "tag_display": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "title": {
                          "type": "string"
                        },
                        "total_cancellations": {
                          "type": "integer"
                        },
                        "total_covers": {
                          "type": "integer"
                        },
                        "total_noshows": {
                          "type": "integer"
                        },
                        "total_spend": {
                          "type": "number"
                        },
                        "total_spend_per_cover": {
                          "type": "number"
                        },
                        "total_spend_per_visit": {
                          "type": "number"
                        },
                        "total_visits": {
                          "type": "integer"
                        },
                        "updated": {
                          "type": "string"
                        },
                        "user": {
                          "description": "The SevenRooms User who created the Reservation.",
                          "example": "Chris Walker",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "venue_group_id": {
                          "description": "Unique identifier of the venue group.",
                          "type": "string"
                        },
                        "venue_stats": {
                          "properties": {
                            "venue_id": {
                              "properties": {
                                "avg_rating": {
                                  "type": "integer"
                                },
                                "booked_by_names": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "last_visit_date": {
                                  "type": "string"
                                },
                                "num_ratings": {
                                  "type": "integer"
                                },
                                "total_cancellations": {
                                  "type": "integer"
                                },
                                "total_covers": {
                                  "type": "integer"
                                },
                                "total_noshows": {
                                  "type": "integer"
                                },
                                "total_spend": {
                                  "type": "number"
                                },
                                "total_spend_local": {
                                  "type": "number"
                                },
                                "total_spend_local_per_cover": {
                                  "type": "number"
                                },
                                "total_spend_local_per_visit": {
                                  "type": "number"
                                },
                                "total_spend_per_cover": {
                                  "type": "number"
                                },
                                "total_spend_per_visit": {
                                  "type": "number"
                                },
                                "total_visits": {
                                  "type": "integer"
                                },
                                "venue_marketing_opt_in": {
                                  "type": "boolean"
                                },
                                "venue_marketing_opt_in_ts": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "address": {
                      "street": "230 Park Avenue South",
                      "city": "New York"
                    },
                    "address_2": null,
                    "anniversary_day": 28,
                    "anniversary_month": "06",
                    "avg_rating": 0,
                    "birthday_alt_day": 24,
                    "birthday_alt_month": 11,
                    "birthday_day": 1,
                    "birthday_month": 10,
                    "city": "New York",
                    "client_tags": [
                      {
                        "color": "#fdf66e",
                        "tag_display": "VIP",
                        "group_display\"": "VIP client type",
                        "group\"": "VIP client type",
                        "tag": "VIP"
                      }
                    ],
                    "company": "SevenRooms",
                    "country": "United States",
                    "created": "2023-12-07T14:20:38.874800",
                    "custom_fields": [],
                    "deleted": "2024-02-28T16:27:38.874800",
                    "email": "jane.doe@gmail.com",
                    "email_alt": "jane.doe@yahoo.com",
                    "external_user_id": "abczyx123",
                    "first_name": "Jane",
                    "gender": "FEMALE",
                    "has_billing_profile": false,
                    "id": "ahZzfnNldmVucm9vbXMVudWVHcm91XFhcicLEhpuaWdcENsaWVudBiAgJiBuenrCAwtc2VjdXJlLodGxvb3BfVm",
                    "is_contact_private": null,
                    "is_one_time_guest": false,
                    "last_name": "Doe",
                    "loyalty_id": "zyxabx987",
                    "loyalty_rank": 3,
                    "loyalty_tier": "Platinum",
                    "marketing_opt_in": false,
                    "marketing_opt_in_ts": null,
                    "member_groups": [],
                    "notes": "Comes in for business meetings",
                    "phone_number": "+12125559876",
                    "phone_number_alt": "+12125556789",
                    "phone_number_alt_locale": "US",
                    "phone_number_locale": "US",
                    "photo": {
                      "medium": "AMIfv95U8RPaBedSB-anKWoT1ViuNgxnCWxEpIp3_JzDUFOg2wNjicrTYLm3giaqlWUdsfkgS-MFTF6OLvu7_361GygtS_60ZL4GbVY9aAm0WkdhYKuMtURDtqoyYNMT4j2fefxMJswTjSdrErNKjqqM6HmyD2g57PWYPFaP3FovcYQtIXesLS51QeoGRhDtx11UFycR2X5WeKCIp8eajCPrc3M9cZpYpcVTTTUHSkB65VvNFNH7NRq0gntV5RRZQN18eQaD-d_Px3JyhYKXhSRF6pkb9GfOUiFOm4koX2jMpvWPwd92gmeA4Tja41Bk9jGODWG-hGY5_TrhCKmEaOGyRvfKPMgSUZrUSEG1xdoFrEPTq9oaVHDh-6AzhAo30LXEjY6OEWywrPgUJzlopMOpMItOLUGR0B35s48F5wBZx3IEgk-OUBZetQI3_uGEVn3vZkro7rTRFxTwU5ncT3oHg--z_ex_GaH9CVBRPJwM-lwquZf2rd0xfClcsjZYNnCfumJ2m0NhMecXUTpcyc8pUhL5X-9Gu_3_x8DsFtIOUOjNgdN_TJpqWkUv9paYAwDDomwaUC212dyg_iBCu54WzdAIPxjAwdakPO6x-vdiq4E5PXXz7dY",
                      "large_height": 129,
                      "small_width": 100,
                      "medium_width": 129,
                      "small_height": 100,
                      "large": "AMIfv961ThuQQk4xEkPccx85fLc2eHnShNCxF-3G2UNi1An2QHBDQLBlGzAZgeNPy6f_qic4zAE2yH_jFFPAH9u51pwPJHGQt-pPcY0wG0XGYpGQWFlM4nJoayzGDpkDrawrNW8KwBcPghFbGyKcyzMYrLhwWudDW6PbsABbSH_qSsXTaC5gehT4_3DrWaey09KYYbZAiJ7P5Q_S_5Iactn2Otb0gMbH491WPCV_sDampYaGFgULwZplVGmDKxBBezLGrYtF8-AFaiSmGv-t5GBcGPnIpLCtT20pwdJeAsa40B_W4GgAsBVAKgugNSP-cbmro_59wSr2yEJWL09JGU5w9JD9w5fEb9H2CExIBGZyXrQGWTUMcKKV9oItykHJV9UoDFI9ZEZ3y2ybDS56-LQjaFUq8veX2hXuSWlQR-3FZa0q6-S52RQlGcQep_JNy0czgcJcmCZIy0gXekb0R6nXk9oYHlZF0oRMc9Y0hPCkhSsoAaWBhD8sJQk8czTwqnSYWEFR9kKuivYLovuc-iMXNjM99W6O9U0VUboReOuhn5w-ktWohtLFiUCykTJUqgWMtF1-qkhpaTtnvzYyNS6mpFtaPtnbjC-JJXyv6MopCTR4pash6Bw",
                      "raw": "AMIfv94a79Bd1ZwvSbYFnrFJWpZvP2WHQigcvIJ6GlwyOoocK0RmUz-JuFvYN-BK1StcU0kzGy4BB51ZjT2d7XruKQ_rVxLbtozpkHGvM2AF9hLVjJ-vRhpHIbvWkb93v_kSQdzBw3Sa9mZjXZnPgowN0v_lekJXdoyjhZRE7UzYQj2APM8e_XoIJQARi-_b57sPWjSYF40kBbcAJY-UXe8zYAJ1GK7dOuNTTVQcaSNN_KUAjLwKlWYkRDiCyfWcfu0sSvTA7ueEtVpxRmzqhrqhu-0a1qtTs6C7zz1KqRjnTI7Jm4hkoAGfIId1oFNx0hGiBT6_XVb3",
                      "medium_height": 129,
                      "small": "AMIfv97gGkRoyo3gu2ajDopW5oCevtzGeYKK-xqvz7CzEeUu7trzmaVIN3HQdEMK_FrMilQ3u1ZQ-fdMvhxk7dFM5QNIpBpCXF0lr-1mMZimP0-vOz-5Zx57RULHmVk3MCxr6nAszWvBOkq1nnDnUeAkTsyvRflnEPf56JDKB6bni1mKkdsKCroD4Qicd38Ah3hf3ap85yFlZn_ubGjXJEpBfzh3TfR5FoByplGBLOX5CkU3Tl2JqhFV2LWv1_mxhtcA8UT4fccu3XLDpnPnIQZo3QT1SZ_ItqOIR1tvaEBxUKXgkt8n3fYim4Ucg6_qX82oHcsoAMdk9MpoRF7-XeKgQ79hRGfksXpWXM1tlezrQqmoI8imHWQsGmUabbdOUyyBTsvuIZ1vuMV1Cwiew-CEVwJv4BvUXcKnbzewffGLqHQ72c03jbdEvPBXZphkeCbkonuQ1tj2indCRRqdDPMUpO8Li5gpFrsK1usiApFnGeEFuDOtjnH4SBLnIdlsKUbvqF3X3SBLNHsrP17UgQ9iexU168kLehjxlJ6oQ8UBFJujuKt3AYd_L3xYk8tCqkXcf04awW54SbEsbJKGHA07o_KfjtdY3H498m1fEdDZ352pj--pwCo",
                      "large_width": 129
                    },
                    "photo_crop_info": {
                      "x": 0,
                      "y": 0,
                      "height": 126.976,
                      "width": 126.976
                    },
                    "postal_code": 11201,
                    "private_notes": "Loves the chocolate lava cake",
                    "reference_code": "7D0HP84OJK8",
                    "salutation": null,
                    "state": "NY",
                    "status": "VIP",
                    "tags": "",
                    "title": "CEO",
                    "total_cancellations": 0,
                    "total_covers": 4,
                    "total_noshows": 0,
                    "total_spend": 187.5,
                    "total_spend_per_cover": 46.875,
                    "total_spend_per_visit": 187.5,
                    "total_visits": 1,
                    "updated": "2024-01-14T14:20:38.874800",
                    "user": {
                      "id": "ahZzfnNldmi2uPzzCQwVucmnYWVfVXNlchiA9vbXMtc2VjdXJlLXFhchULEghgM",
                      "name": "Integrator Group"
                    },
                    "venue_group_id": "ahZzfnNldmVub3BfVmVudWVHcm91cBic2VjdXJlLXFhciELEhRuaWdodGAgMjWsMTYCAwcm9vbXMtxv",
                    "venue_stats": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clients/export": {
      "get": {
        "summary": "Export all Clients",
        "description": "Export all Client profiles by Venue Group ID.",
        "operationId": "create_clients_export",
        "tags": [
          "Clients"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/venue_group_id_query_optional"
          },
          {
            "$ref": "#/components/parameters/limit_query_optional"
          },
          {
            "$ref": "#/components/parameters/cursor_query_optional"
          },
          {
            "$ref": "#/components/parameters/venue_id_client_query_optional"
          },
          {
            "$ref": "#/components/parameters/external_user_id_query_optional"
          },
          {
            "$ref": "#/components/parameters/name_query_optional"
          },
          {
            "$ref": "#/components/parameters/email_query_optional"
          },
          {
            "$ref": "#/components/parameters/phone_query_optional"
          },
          {
            "$ref": "#/components/parameters/contact_type_query_optional"
          },
          {
            "$ref": "#/components/parameters/client_tags_query_optional"
          },
          {
            "$ref": "#/components/parameters/client_sort_order_query_optional"
          },
          {
            "$ref": "#/components/parameters/has_loyalty_id_query_optional"
          },
          {
            "$ref": "#/components/parameters/loyalty_id_query_optional"
          },
          {
            "$ref": "#/components/parameters/loyalty_tier_query_optional"
          },
          {
            "$ref": "#/components/parameters/loyalty_rank_min_query_optional"
          },
          {
            "$ref": "#/components/parameters/loyalty_rank_max_query_optional"
          },
          {
            "$ref": "#/components/parameters/birthday_start_query_optional"
          },
          {
            "$ref": "#/components/parameters/birthday_end_query_optional"
          },
          {
            "$ref": "#/components/parameters/updated_since_query_optional"
          },
          {
            "$ref": "#/components/parameters/include_one_time_guest_query_optional"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON list of Client profile objects\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "cursor": {
                          "type": "string",
                          "description": "Cursor for pagination"
                        },
                        "limit": {
                          "type": "string",
                          "description": "Limit on objects returned between 1 and 400. Default is 30.",
                          "minimum": 1,
                          "maximum": 400,
                          "default": 30
                        },
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "description": "Address first line",
                                "example": "122 West 27th Street",
                                "type": "string"
                              },
                              "address_2": {
                                "description": "Address second line",
                                "example": "7th Floor",
                                "type": "string"
                              },
                              "anniversary_day": {
                                "description": "The day of the month that the Client's anniversary falls on (In `DD` format).",
                                "example": 12,
                                "type": "integer"
                              },
                              "anniversary_month": {
                                "description": "The month of the year that the Client's anniverary falls on (In `MM` format).      ",
                                "example": 4,
                                "type": "integer"
                              },
                              "avg_rating": {
                                "default": 0,
                                "description": "Average feedback rating provided by the Client on a scale of 1 to 5.",
                                "example": 4.5,
                                "type": "number"
                              },
                              "birthday_alt_day": {
                                "description": "The day of the month that the Client's birthday falls on (In `DD` format).      ",
                                "example": 8,
                                "type": "integer"
                              },
                              "birthday_alt_month": {
                                "description": "The month of the year that the Client's birthday falls on (In `MM` format).",
                                "example": 11,
                                "type": "integer"
                              },
                              "birthday_day": {
                                "description": "The day of the month that the Client's birthday falls on (In `DD` format).      ",
                                "example": 28,
                                "type": "integer"
                              },
                              "birthday_month": {
                                "description": "The month of the year that the Client's birthday falls on (In `MM` format).      ",
                                "example": 12,
                                "type": "integer"
                              },
                              "city": {
                                "description": "The city of the Client's residential address.      ",
                                "example": "New York",
                                "type": "string"
                              },
                              "client_tags": {
                                "items": {
                                  "properties": {
                                    "color": {
                                      "type": "string"
                                    },
                                    "group": {
                                      "type": "string"
                                    },
                                    "group_display": {
                                      "type": "string"
                                    },
                                    "tag": {
                                      "type": "string"
                                    },
                                    "tag_display": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "company": {
                                "description": "The Client's employer.",
                                "example": "SevenRooms",
                                "type": "string"
                              },
                              "country": {
                                "description": "The country of the Client's residential address.",
                                "example": "United States",
                                "type": "string"
                              },
                              "created": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Created timestamp"
                              },
                              "custom_fields": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "system_name": {
                                      "type": "string"
                                    },
                                    "display_order": {
                                      "type": "integer"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "deleted": {
                                "type": "string"
                              },
                              "email": {
                                "description": "Email associated with the Reservation.      \n> All emails are validated for format prior to entry into the system.",
                                "example": "support@sevenrooms.com",
                                "type": "string"
                              },
                              "email_alt": {
                                "description": "The Client's seecondary email address.",
                                "example": "john.doe@yahoo.com",
                                "type": "string"
                              },
                              "external_user_id": {
                                "description": "Third party User ID stored on the Client profile.      \n\n> You may associate an external user account with a Client in the SevenRooms database. If the associated client for the Reservation has an `external_user_id` then that value will be returned here.",
                                "example": 55602,
                                "type": "string"
                              },
                              "first_name": {
                                "description": "The Client's first name.",
                                "example": "John",
                                "type": "string"
                              },
                              "gender": {
                                "default": "UNSPECIFIED",
                                "description": "The Client's gender.      \n\n```ENUM(\"MALE\", \"FEMALE\", \"UNSPECIFIED\")```",
                                "example": "MALE",
                                "type": "string"
                              },
                              "has_billing_profile": {
                                "default": false,
                                "description": "Whether the Client's profile has an associated billing profile.",
                                "example": true,
                                "type": "boolean"
                              },
                              "id": {
                                "type": "string"
                              },
                              "is_contact_private": {
                                "default": false,
                                "description": "Whether the Client's contact details will be hidden from users.",
                                "example": true,
                                "type": "boolean"
                              },
                              "is_one_time_guest": {
                                "default": false,
                                "example": false,
                                "type": "boolean"
                              },
                              "last_name": {
                                "example": "Last name of the Client booking the Reservation.",
                                "type": "string"
                              },
                              "loyalty_id": {
                                "example": "`loyalty_id` value from the Client entity associated with the Reservation.",
                                "type": "string"
                              },
                              "loyalty_rank": {
                                "example": "`loyalty_rank` value from the Client entity.",
                                "type": "integer"
                              },
                              "loyalty_tier": {
                                "description": "`loyalty_tier` value from the Client entity associated with the Reservation.",
                                "type": "string"
                              },
                              "marketing_opt_in": {
                                "description": "Whether the Client has opted into to the Venue Group's marketing program.",
                                "type": "boolean"
                              },
                              "marketing_opt_in_ts": {
                                "description": "Timestamp of when the Client opted in to the Venue Group's marketing program.",
                                "type": "string"
                              },
                              "member_groups": {
                                "description": "This field is deprecated. DO NOT USE",
                                "items": {
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "notes": {
                                "description": "Internal, Venue facing notes for the Reservation.",
                                "type": "string"
                              },
                              "phone_number": {
                                "description": "Phone number associated with the Reservation.      \n> Can be numerous valid formats, including international phone      \nnumbers. US phone numbers generally follow      \n1-xxx-xxx-xxxx.",
                                "example": "1-555-555-5555",
                                "type": "string"
                              },
                              "phone_number_alt": {
                                "description": "The Client's alternate phone number (In `E-164` format).",
                                "example": 12125556789,
                                "type": "string"
                              },
                              "phone_number_alt_locale": {
                                "description": "The locale of the Client's alternate phone number.",
                                "example": "AU",
                                "type": "string"
                              },
                              "phone_number_locale": {
                                "description": "The locale of the Client's primary phone number.",
                                "example": "US",
                                "type": "string"
                              },
                              "photo": {
                                "properties": {
                                  "large": {
                                    "type": "string"
                                  },
                                  "large_height": {
                                    "type": "integer"
                                  },
                                  "large_width": {
                                    "type": "integer"
                                  },
                                  "medium": {
                                    "type": "string"
                                  },
                                  "medium_height": {
                                    "type": "integer"
                                  },
                                  "medium_width": {
                                    "type": "integer"
                                  },
                                  "raw": {
                                    "type": "string"
                                  },
                                  "small": {
                                    "type": "string"
                                  },
                                  "small_height": {
                                    "type": "integer"
                                  },
                                  "small_width": {
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "photo_crop_info": {
                                "properties": {
                                  "height": {
                                    "type": "number"
                                  },
                                  "width": {
                                    "type": "number"
                                  },
                                  "x": {
                                    "type": "integer"
                                  },
                                  "y": {
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "postal_code": {
                                "description": "`postal_code` value from the Client entity associated with the Reservation.",
                                "type": "string"
                              },
                              "private_notes": {
                                "type": "string"
                              },
                              "reference_code": {
                                "description": "Guest facing Reservation number. Uniqueness      \nis scoped to a Venue. If Venue prefixes are turned on,      \nuniqueness is scoped to the Venue Group level.",
                                "example": "A34CE38",
                                "type": "string"
                              },
                              "salutation": {
                                "type": "string"
                              },
                              "state": {
                                "description": "`state` value from the Client entity associated with the Reservation.",
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "tags": {
                                "items": {
                                  "properties": {
                                    "color": {
                                      "type": "string"
                                    },
                                    "group": {
                                      "type": "string"
                                    },
                                    "group_display": {
                                      "type": "string"
                                    },
                                    "tag": {
                                      "type": "string"
                                    },
                                    "tag_display": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "title": {
                                "type": "string"
                              },
                              "total_cancellations": {
                                "type": "integer"
                              },
                              "total_covers": {
                                "type": "integer"
                              },
                              "total_noshows": {
                                "type": "integer"
                              },
                              "total_spend": {
                                "type": "number"
                              },
                              "total_spend_per_cover": {
                                "type": "number"
                              },
                              "total_spend_per_visit": {
                                "type": "number"
                              },
                              "total_visits": {
                                "type": "integer"
                              },
                              "updated": {
                                "type": "string"
                              },
                              "user": {
                                "description": "The SevenRooms User who created the Reservation.",
                                "example": "Chris Walker",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                }
                              },
                              "venue_group_id": {
                                "description": "Unique identifier of the venue group.",
                                "type": "string"
                              },
                              "venue_stats": {
                                "properties": {
                                  "venue_id": {
                                    "properties": {
                                      "avg_rating": {
                                        "type": "integer"
                                      },
                                      "booked_by_names": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "last_visit_date": {
                                        "type": "string"
                                      },
                                      "num_ratings": {
                                        "type": "integer"
                                      },
                                      "total_cancellations": {
                                        "type": "integer"
                                      },
                                      "total_covers": {
                                        "type": "integer"
                                      },
                                      "total_noshows": {
                                        "type": "integer"
                                      },
                                      "total_spend": {
                                        "type": "number"
                                      },
                                      "total_spend_local": {
                                        "type": "number"
                                      },
                                      "total_spend_local_per_cover": {
                                        "type": "number"
                                      },
                                      "total_spend_local_per_visit": {
                                        "type": "number"
                                      },
                                      "total_spend_per_cover": {
                                        "type": "number"
                                      },
                                      "total_spend_per_visit": {
                                        "type": "number"
                                      },
                                      "total_visits": {
                                        "type": "integer"
                                      },
                                      "venue_marketing_opt_in": {
                                        "type": "boolean"
                                      },
                                      "venue_marketing_opt_in_ts": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "cursor": "DXF1ZXJ5QW5kRmV0Y2gBAAAAAACIdOUWdTRXQy1UOGdUMEtvbkp2TVBwUmdOdw==",
                    "limit": 1,
                    "results": [
                      {
                        "address": {
                          "street": "230 Park Avenue South",
                          "city": "New York"
                        },
                        "address_2": null,
                        "anniversary_day": 28,
                        "anniversary_month": "06",
                        "avg_rating": 0,
                        "birthday_alt_day": 24,
                        "birthday_alt_month": 11,
                        "birthday_day": 1,
                        "birthday_month": 10,
                        "city": "New York",
                        "client_tags": [
                          {
                            "color": "#fdf66e",
                            "tag_display": "VIP",
                            "group_display\"": "VIP client type",
                            "group\"": "VIP client type",
                            "tag": "VIP"
                          }
                        ],
                        "company": "SevenRooms",
                        "country": "United States",
                        "created": "2023-12-07T14:20:38.874800",
                        "custom_fields": [],
                        "deleted": "2024-02-28T16:27:38.874800",
                        "email": "jane.doe@gmail.com",
                        "email_alt": "jane.doe@yahoo.com",
                        "external_user_id": "abczyx123",
                        "first_name": "Jane",
                        "gender": "FEMALE",
                        "has_billing_profile": false,
                        "id": "ahZzfnNldmVucm9vbXMVudWVHcm91XFhcicLEhpuaWdcENsaWVudBiAgJiBuenrCAwtc2VjdXJlLodGxvb3BfVm",
                        "is_contact_private": null,
                        "is_one_time_guest": false,
                        "last_name": "Doe",
                        "loyalty_id": "zyxabx987",
                        "loyalty_rank": 3,
                        "loyalty_tier": "Platinum",
                        "marketing_opt_in": false,
                        "marketing_opt_in_ts": null,
                        "member_groups": [],
                        "notes": "Comes in for business meetings",
                        "phone_number": "+12125559876",
                        "phone_number_alt": "+12125556789",
                        "phone_number_alt_locale": "US",
                        "phone_number_locale": "US",
                        "photo": {
                          "medium": "AMIfv95U8RPaBedSB-anKWoT1ViuNgxnCWxEpIp3_JzDUFOg2wNjicrTYLm3giaqlWUdsfkgS-MFTF6OLvu7_361GygtS_60ZL4GbVY9aAm0WkdhYKuMtURDtqoyYNMT4j2fefxMJswTjSdrErNKjqqM6HmyD2g57PWYPFaP3FovcYQtIXesLS51QeoGRhDtx11UFycR2X5WeKCIp8eajCPrc3M9cZpYpcVTTTUHSkB65VvNFNH7NRq0gntV5RRZQN18eQaD-d_Px3JyhYKXhSRF6pkb9GfOUiFOm4koX2jMpvWPwd92gmeA4Tja41Bk9jGODWG-hGY5_TrhCKmEaOGyRvfKPMgSUZrUSEG1xdoFrEPTq9oaVHDh-6AzhAo30LXEjY6OEWywrPgUJzlopMOpMItOLUGR0B35s48F5wBZx3IEgk-OUBZetQI3_uGEVn3vZkro7rTRFxTwU5ncT3oHg--z_ex_GaH9CVBRPJwM-lwquZf2rd0xfClcsjZYNnCfumJ2m0NhMecXUTpcyc8pUhL5X-9Gu_3_x8DsFtIOUOjNgdN_TJpqWkUv9paYAwDDomwaUC212dyg_iBCu54WzdAIPxjAwdakPO6x-vdiq4E5PXXz7dY",
                          "large_height": 129,
                          "small_width": 100,
                          "medium_width": 129,
                          "small_height": 100,
                          "large": "AMIfv961ThuQQk4xEkPccx85fLc2eHnShNCxF-3G2UNi1An2QHBDQLBlGzAZgeNPy6f_qic4zAE2yH_jFFPAH9u51pwPJHGQt-pPcY0wG0XGYpGQWFlM4nJoayzGDpkDrawrNW8KwBcPghFbGyKcyzMYrLhwWudDW6PbsABbSH_qSsXTaC5gehT4_3DrWaey09KYYbZAiJ7P5Q_S_5Iactn2Otb0gMbH491WPCV_sDampYaGFgULwZplVGmDKxBBezLGrYtF8-AFaiSmGv-t5GBcGPnIpLCtT20pwdJeAsa40B_W4GgAsBVAKgugNSP-cbmro_59wSr2yEJWL09JGU5w9JD9w5fEb9H2CExIBGZyXrQGWTUMcKKV9oItykHJV9UoDFI9ZEZ3y2ybDS56-LQjaFUq8veX2hXuSWlQR-3FZa0q6-S52RQlGcQep_JNy0czgcJcmCZIy0gXekb0R6nXk9oYHlZF0oRMc9Y0hPCkhSsoAaWBhD8sJQk8czTwqnSYWEFR9kKuivYLovuc-iMXNjM99W6O9U0VUboReOuhn5w-ktWohtLFiUCykTJUqgWMtF1-qkhpaTtnvzYyNS6mpFtaPtnbjC-JJXyv6MopCTR4pash6Bw",
                          "raw": "AMIfv94a79Bd1ZwvSbYFnrFJWpZvP2WHQigcvIJ6GlwyOoocK0RmUz-JuFvYN-BK1StcU0kzGy4BB51ZjT2d7XruKQ_rVxLbtozpkHGvM2AF9hLVjJ-vRhpHIbvWkb93v_kSQdzBw3Sa9mZjXZnPgowN0v_lekJXdoyjhZRE7UzYQj2APM8e_XoIJQARi-_b57sPWjSYF40kBbcAJY-UXe8zYAJ1GK7dOuNTTVQcaSNN_KUAjLwKlWYkRDiCyfWcfu0sSvTA7ueEtVpxRmzqhrqhu-0a1qtTs6C7zz1KqRjnTI7Jm4hkoAGfIId1oFNx0hGiBT6_XVb3",
                          "medium_height": 129,
                          "small": "AMIfv97gGkRoyo3gu2ajDopW5oCevtzGeYKK-xqvz7CzEeUu7trzmaVIN3HQdEMK_FrMilQ3u1ZQ-fdMvhxk7dFM5QNIpBpCXF0lr-1mMZimP0-vOz-5Zx57RULHmVk3MCxr6nAszWvBOkq1nnDnUeAkTsyvRflnEPf56JDKB6bni1mKkdsKCroD4Qicd38Ah3hf3ap85yFlZn_ubGjXJEpBfzh3TfR5FoByplGBLOX5CkU3Tl2JqhFV2LWv1_mxhtcA8UT4fccu3XLDpnPnIQZo3QT1SZ_ItqOIR1tvaEBxUKXgkt8n3fYim4Ucg6_qX82oHcsoAMdk9MpoRF7-XeKgQ79hRGfksXpWXM1tlezrQqmoI8imHWQsGmUabbdOUyyBTsvuIZ1vuMV1Cwiew-CEVwJv4BvUXcKnbzewffGLqHQ72c03jbdEvPBXZphkeCbkonuQ1tj2indCRRqdDPMUpO8Li5gpFrsK1usiApFnGeEFuDOtjnH4SBLnIdlsKUbvqF3X3SBLNHsrP17UgQ9iexU168kLehjxlJ6oQ8UBFJujuKt3AYd_L3xYk8tCqkXcf04awW54SbEsbJKGHA07o_KfjtdY3H498m1fEdDZ352pj--pwCo",
                          "large_width": 129
                        },
                        "photo_crop_info": {
                          "x": 0,
                          "y": 0,
                          "height": 126.976,
                          "width": 126.976
                        },
                        "postal_code": 11201,
                        "private_notes": "Loves the chocolate lava cake",
                        "reference_code": "7D0HP84OJK8",
                        "salutation": null,
                        "state": "NY",
                        "status": "VIP",
                        "tags": "",
                        "title": "CEO",
                        "total_cancellations": 0,
                        "total_covers": 4,
                        "total_noshows": 0,
                        "total_spend": 187.5,
                        "total_spend_per_cover": 46.875,
                        "total_spend_per_visit": 187.5,
                        "total_visits": 1,
                        "updated": "2024-01-14T14:20:38.874800",
                        "user": {
                          "id": "ahZzfnNldmi2uPzzCQwVucmnYWVfVXNlchiA9vbXMtc2VjdXJlLXFhchULEghgM",
                          "name": "Integrator Group"
                        },
                        "venue_group_id": "ahZzfnNldmVub3BfVmVudWVHcm91cBic2VjdXJlLXFhciELEhRuaWdodGAgMjWsMTYCAwcm9vbXMtxv",
                        "venue_stats": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reservations/{reservation_id}/add_charge": {
      "post": {
        "summary": "Create a Charge",
        "description": "Add charge information for a charge conducted outside of the system. The `reservation_id` path parameter provided in the request may either be the Reservation's `reservation_id` or the Reservation's `reference_code`. Note that reference codes are only unique to a single venue unless venue prefixes are enabled for a Venue Group. If the Reservation's `reference_code` is provided as the path parameter, a `venue_id` parameter is required.",
        "operationId": "create_charge",
        "tags": [
          "Charges"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "reservation_id",
            "description": "Unique identifier of the Reservation.\n\n**Note:** The Reservation's `reference_code` can be used in place of the Reservation's `id`.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateCharge_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Object containing identifiers for the created Charge object\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "invoice_id": "HSJHKDF89KLH",
                    "reference_id": "ahfzasdhfq98324rfiwesf",
                    "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                    "status": "status_succeeded"
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "invoice_id": {
                          "example": "HSJHKDF89KLH",
                          "type": "string"
                        },
                        "reference_id": {
                          "example": "ahfzasdhfq98324rfiwesf",
                          "type": "string"
                        },
                        "request_id": {
                          "default": "",
                          "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                          "type": "string"
                        },
                        "status": {
                          "default": "SUCCESS",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venue_id}/reviews": {
      "post": {
        "summary": "Create Venue Review",
        "description": "This endpoint creates a review for Venue",
        "operationId": "create_venue_review",
        "tags": [
          "Venues"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/path"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateVenueReview_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "We will return a simple 200 status when the review has been made",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer"
                    }
                  }
                },
                "example": {
                  "status": 200
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venue_id}/charges": {
      "get": {
        "summary": "List all Charges",
        "description": "Retrieve a list of charges and refunds made in the system.",
        "operationId": "get_charges",
        "tags": [
          "Charges"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/path"
          },
          {
            "$ref": "#/components/parameters/reservation_id_query_optional"
          },
          {
            "$ref": "#/components/parameters/limit_query_optional"
          },
          {
            "$ref": "#/components/parameters/cursor_query_optional"
          },
          {
            "$ref": "#/components/parameters/from_reservation_date_query_optional"
          },
          {
            "$ref": "#/components/parameters/to_reservation_date_query_optional"
          },
          {
            "$ref": "#/components/parameters/transaction_type_query_optional"
          },
          {
            "$ref": "#/components/parameters/charge_status_query_optional"
          },
          {
            "$ref": "#/components/parameters/non_zero_query_optional"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON list of Charge objects\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "charges": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "additional_fee": {
                                "type": "object",
                                "description": "Information about the additional fee",
                                "properties": {
                                  "fee_amount_type": {
                                    "type": "string"
                                  },
                                  "fee_label": {
                                    "type": "string"
                                  },
                                  "fee_amount": {
                                    "type": "integer"
                                  }
                                }
                              },
                              "amount": {
                                "type": "integer"
                              },
                              "base_amount": {
                                "type": "integer"
                              },
                              "brand": {
                                "type": "string"
                              },
                              "charged": {
                                "type": "string"
                              },
                              "entity_date": {
                                "type": "string"
                              },
                              "entity_id": {
                                "type": "string",
                                "description": "Unique identifier of either a Reservation or Subscription."
                              },
                              "failure_code": {
                                "type": "string"
                              },
                              "failure_message": {
                                "type": "string"
                              },
                              "gratuity_amount": {
                                "type": "integer"
                              },
                              "is_info_request": {
                                "type": "boolean"
                              },
                              "is_refund": {
                                "type": "boolean"
                              },
                              "last_4": {
                                "type": "string"
                              },
                              "notes": {
                                "description": "Internal, Venue facing notes for the Reservation.",
                                "type": "string"
                              },
                              "original_amount": {
                                "type": "integer"
                              },
                              "processing_fee": {
                                "type": "integer"
                              },
                              "promo_code": {
                                "type": "string",
                                "description": "Identifier of the promo code used on the charge"
                              },
                              "promo_discount_amount": {
                                "type": "string",
                                "description": "Promotion discount amount applied on the charge"
                              },
                              "reference_code": {
                                "description": "Guest facing Reservation number. Uniqueness      \nis scoped to a Venue. If Venue prefixes are turned on,      \nuniqueness is scoped to the Venue Group level.",
                                "example": "A34CE38",
                                "type": "string"
                              },
                              "reservation_notes": {
                                "type": "string"
                              },
                              "status": {
                                "type": "integer"
                              },
                              "tax_amount": {
                                "type": "integer"
                              },
                              "transaction_id": {
                                "type": "string",
                                "description": "Charge transaction ID in gateway or source system"
                              },
                              "transaction_type": {
                                "type": "string"
                              },
                              "upsell_amount": {
                                "type": "string",
                                "description": "Total amount of upsells on the specific charge"
                              },
                              "venue_group_client_id": {
                                "description": "Foreign key to a Venue Group client entity.",
                                "type": "string"
                              },
                              "venue_id": {
                                "description": "Unique identifier of the venue.",
                                "type": "string"
                              },
                              "additional_fee_tax": {
                                "type": "integer"
                              },
                              "service_charge_amount": {
                                "type": "number"
                              }
                            }
                          }
                        },
                        "cursor": {
                          "type": "string",
                          "description": "Cursor for pagination"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "charges": [
                      {
                        "entity_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcicLEhtuaWdodGxvb3BfUmVzZXJ2YXRpb25BY3R1YWwYsYv_2J-KBgw",
                        "base_amount": 10000,
                        "last_4": "4242",
                        "entity_date": "2019-02-22",
                        "additional_fee": 0,
                        "reservation_notes": "",
                        "venue_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkM",
                        "venue_group_client_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcicLEhpuaWdodGxvb3BfVmVudWVHcm91cENsaWVudBiAgJCVsZG1Cww",
                        "is_info_request": false,
                        "processing_fee": 100,
                        "original_amount": 0,
                        "booked_by_name": "Bobby Koch",
                        "transaction_id": "ch_EZtg8no9MJpQPK",
                        "status": "status_succeeded",
                        "brand": "Visa",
                        "is_refund": false,
                        "upsell_amount": 0,
                        "promo_code": null,
                        "promo_discount_amount": 0,
                        "failure_code": null,
                        "tax_amount": 0,
                        "notes": "Auto-charge for cancellation/no-show per Shift Dinner",
                        "failure_message": null,
                        "transaction_type": "transaction_type_auto_internal",
                        "amount": 10000,
                        "gratuity_amount": 0,
                        "reference_code": "51MHWSX",
                        "charged": "2019-02-22T19:40:43.160000",
                        "additional_fee_tax": 0,
                        "service_charge_amount": 0,
                        "id": "charge_id_here"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venue_id}/shifts": {
      "get": {
        "summary": "List all Shifts",
        "description": "Retrieve information about a Venue's shifts over a date range.",
        "operationId": "get_shifts",
        "tags": [
          "Shifts"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/path"
          },
          {
            "$ref": "#/components/parameters/start_date_query_required"
          },
          {
            "$ref": "#/components/parameters/end_date_query_required"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON list of Shifts sorted by date\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "shifts": {
                          "type": "object",
                          "properties": {
                            "date": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "category": {
                                    "type": "string"
                                  },
                                  "covers_per_seating_interval": {
                                    "type": "integer"
                                  },
                                  "custom_pacing": {
                                    "type": "object"
                                  },
                                  "duration_minutes_by_party_size": {
                                    "properties": {
                                      "party_size": {
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "end_time": {
                                    "type": "string"
                                  },
                                  "interval_minutes": {
                                    "type": "integer"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "start_time": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "shifts": {
                      "2024-03-17": [
                        {
                          "category": "LUNCH",
                          "custom_pacing": {},
                          "interval_minutes": 15,
                          "duration_minutes_by_party_size": {
                            "1": 60,
                            "2": 90,
                            "3": 90,
                            "4": 90,
                            "5": 120,
                            "6": 150,
                            "7": 150,
                            "8": 180,
                            "9": 180,
                            "-1": 180
                          },
                          "name": "Lunch",
                          "start_time": "11:30:00",
                          "covers_per_seating_interval": 30,
                          "end_time": "14:30:00"
                        },
                        {
                          "category": "DINNER",
                          "custom_pacing": {},
                          "interval_minutes": 15,
                          "duration_minutes_by_party_size": {
                            "1": 60,
                            "2": 90,
                            "3": 90,
                            "4": 90,
                            "5": 120,
                            "6": 150,
                            "7": 150,
                            "8": 180,
                            "9": 180,
                            "-1": 180
                          },
                          "name": "Dinner",
                          "start_time": "17:00:00",
                          "covers_per_seating_interval": 9999,
                          "end_time": "23:00:00"
                        }
                      ],
                      "2024-03-18": [
                        {
                          "category": "LUNCH",
                          "custom_pacing": {},
                          "interval_minutes": 15,
                          "duration_minutes_by_party_size": {
                            "1": 60,
                            "2": 90,
                            "3": 90,
                            "4": 90,
                            "5": 120,
                            "6": 150,
                            "7": 150,
                            "8": 180,
                            "9": 180,
                            "-1": 180
                          },
                          "name": "Lunch",
                          "start_time": "11:30:00",
                          "covers_per_seating_interval": 30,
                          "end_time": "14:30:00"
                        },
                        {
                          "category": "DINNER",
                          "custom_pacing": {},
                          "interval_minutes": 15,
                          "duration_minutes_by_party_size": {
                            "1": 60,
                            "2": 90,
                            "3": 90,
                            "4": 90,
                            "5": 120,
                            "6": 150,
                            "7": 150,
                            "8": 180,
                            "9": 180,
                            "-1": 180
                          },
                          "name": "Dinner",
                          "start_time": "17:00:00",
                          "covers_per_seating_interval": 9999,
                          "end_time": "23:00:00"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venue_id}/dailyprogram": {
      "get": {
        "summary": "List all Programs",
        "description": "Retrieve information about daily programs and notes.",
        "operationId": "get_programs",
        "tags": [
          "Programs"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/path"
          },
          {
            "$ref": "#/components/parameters/start_date_query_required"
          },
          {
            "$ref": "#/components/parameters/end_date_query_required"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON list of Programs sorted by date\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "type": "object",
                          "properties": {
                            "note": {
                              "type": "string"
                            },
                            "programs": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "child_policy": {
                                    "type": "string"
                                  },
                                  "created": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Created timestamp"
                                  },
                                  "cuisine": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "dress_code": {
                                    "type": "string"
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "price_point": {
                                    "type": "string"
                                  },
                                  "shift_categories_display": {
                                    "type": "string"
                                  },
                                  "spend_policy": {
                                    "type": "string"
                                  },
                                  "table_holding_policy": {
                                    "type": "string"
                                  },
                                  "title": {
                                    "type": "string"
                                  },
                                  "venue_id": {
                                    "description": "Unique identifier of the venue.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "2024-03-17": {
                      "note": "",
                      "programs": [
                        {
                          "price_point": "",
                          "description": "",
                          "shift_categories_display": "Lunch",
                          "spend_policy": "",
                          "child_policy": "",
                          "id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcjcLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkMCxIOc3JfRGluaW5nRXZlbnQYgICAgMCcggoM",
                          "table_holding_policy": "",
                          "cuisine": "",
                          "venue_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkM",
                          "title": "Lunch",
                          "created": null,
                          "dress_code": ""
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/requests": {
      "get": {
        "summary": "Search Reservation Requests",
        "description": "Search Reservation Requests.",
        "operationId": "get_reservation_requests",
        "tags": [
          "Reservation Requests"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "external_user_id",
            "in": "query",
            "required": false,
            "description": "Unique identifier of an account in an external system which may be associated with the Client's profile. \n\n> Note: This field is not validated in our system as a foreign key it is simply searchable and updatable via our API",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "source_entity_id",
            "in": "query",
            "required": false,
            "description": "Unique identifier of a reservation in an external system.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from_date",
            "in": "query",
            "required": false,
            "description": "Beginning date for date range filtering",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to_date",
            "in": "query",
            "required": false,
            "description": "End date for date range filtering",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "description": "Client's email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 400, and the default is 30.",
            "schema": {
              "type": "integer",
              "default": 30
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "description": "The `cursor` field can be used to get multiple pages based on the limit (max of 400). If there are more than the limit of results then the response will include the field `cursor`. The subsequent call will include the cursor field and SevenRooms responds with the next iteration of results and so on.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "venue_id",
            "in": "query",
            "required": true,
            "description": "Unique identifier of the venue",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "JSON list of Reservation Request objects\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "cursor": null,
                    "limit": null,
                    "results": [
                      {
                        "arrival_time": "7:00 PM",
                        "booked_by": "Docs Group",
                        "cost_option": 0,
                        "created": "2023-12-07T14:20:38.874800",
                        "date": "2023-12-18",
                        "deleted": null,
                        "email": "jane.doe@gmail.com",
                        "expiration": "12/16/23 7:53 PM",
                        "external_user_id": "abczyx123",
                        "first_name": "Jane",
                        "id": "ahZzfnNldmi2uPzzCQwVucmnYWVfVXNlchiA9vbXMtc2VjdXJlLXFhchULEghgM",
                        "is_expired": false,
                        "is_offer_pending": false,
                        "last_name": "Doe",
                        "max_guests": 2,
                        "mf_ratio_female": "None",
                        "mf_ratio_male": "None",
                        "min_price": null,
                        "notes": "Comes in for business meetings",
                        "phone_number": "+12125559876",
                        "reservation_id": "None",
                        "status": "UNAPPROVED",
                        "updated": "2024-12-14T14:20:38.874800",
                        "user": {
                          "id": "ahZzfnNldmi2uPzzCQwVucmnYWVfVXNlchiA9vbXMtc2VjdXJlLXFhchULEghgM",
                          "name": "Integrator Group"
                        },
                        "venue_group_client_id": "None",
                        "venue_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgNCylufYCAw"
                      }
                    ]
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "cursor": {
                          "description": "Cursor position",
                          "type": "integer"
                        },
                        "limit": {
                          "type": "integer"
                        },
                        "results": {
                          "description": "List of requests",
                          "items": {
                            "properties": {
                              "arrival_time": {
                                "description": "Local time for the Reservation. Times begin at 6AM. \n> Any time considered the next day, e.g. 2AM will still be considered the same evening.",
                                "type": "string"
                              },
                              "booked_by": {
                                "description": "Client who will be accredited for booking the Reservation.",
                                "type": "string"
                              },
                              "cost_option": {
                                "description": "Bitfield for one of the following values:\n- Fee Dollars\n- Minimum Dollars\n- Minimum Bottles\n- Comp\n- No Min\n",
                                "type": "integer"
                              },
                              "created": {
                                "description": "Created timestamp",
                                "format": "date-time",
                                "type": "string"
                              },
                              "date": {
                                "description": "Date in ISO 8601 format",
                                "type": "string"
                              },
                              "deleted": {
                                "description": "Deleted timestamp",
                                "type": "string"
                              },
                              "email": {
                                "description": "Email associated with the Reservation. \n>All emails are validated for format prior to entry into the system.",
                                "type": "string"
                              },
                              "expiration": {
                                "description": "Expiration time",
                                "type": "string"
                              },
                              "external_user_id": {
                                "description": "Third party User ID stored on the Client profile. \n>You may associate an external user account with a Client in the SevenRooms database. If the associated client for the Reservation has an external_user_id then that value will be returned here.",
                                "type": "string"
                              },
                              "first_name": {
                                "description": "The Client's first name.",
                                "type": "string"
                              },
                              "id": {
                                "description": "Request ID",
                                "type": "string"
                              },
                              "is_expired": {
                                "description": "Is expired",
                                "type": "boolean"
                              },
                              "is_offer_pending": {
                                "description": "Is offer pending",
                                "type": "boolean"
                              },
                              "last_name": {
                                "description": "The Client's last name.",
                                "type": "string"
                              },
                              "max_guests": {
                                "description": "Number of people expected for the Reservation",
                                "type": "integer"
                              },
                              "mf_ratio_female": {
                                "description": "Number of females expected for the Reservation",
                                "type": "integer"
                              },
                              "mf_ratio_male": {
                                "description": "Number of males expected for the Reservation",
                                "type": "integer"
                              },
                              "min_price": {
                                "description": "Minimum price required for the Reservation",
                                "type": "integer"
                              },
                              "notes": {
                                "description": "Internal, Venue facing notes for the Reservation",
                                "type": "string"
                              },
                              "phone_number": {
                                "description": "Phone number associated with the Reservation. \n>Can be numerous valid formats, including international phone numbers. US phone numbers generally follow 1-xxx-xxx-xxxx.",
                                "type": "string"
                              },
                              "reservation_id": {
                                "description": "Unique identifier for the reservaiton",
                                "type": "string"
                              },
                              "status": {
                                "description": "Request status.",
                                "type": "string"
                              },
                              "updated": {
                                "description": "Updated timestamp",
                                "format": "date-time",
                                "type": "string"
                              },
                              "user": {
                                "properties": {
                                  "id": {
                                    "description": "User ID",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "User full name",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "venue_group_client_id": {
                                "description": "Foreign key to a Venue Group client entity.",
                                "type": "integer"
                              },
                              "venue_id": {
                                "description": "Unique identifier of the venue.",
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/clients/tokenize": {
      "post": {
        "summary": "Create a Client Token",
        "description": "Generates a token containing the Client information passed in the request for usage in either the Events and/or Reservation widget. The token value should be passed as a query string parameter when loading a widget for pre-populating Client information during a reservation booking. For example, `https://sevenrooms.com/reservations/<your_venue>?client_token=<token_value>.`",
        "operationId": "client_tokenize",
        "tags": [
          "Clients"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateClientToken_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Client object\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "token": "ahzelkf8231nfesfsf911fm1ajp000z"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venue_id}/feedback": {
      "get": {
        "summary": "List all Reservation Feedback",
        "operationId": "get_reservation_feedback",
        "tags": [
          "Reservation Feedback"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/path"
          },
          {
            "$ref": "#/components/parameters/feedback_start_date_query_required"
          },
          {
            "$ref": "#/components/parameters/feedback_end_date_query_required"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON list of Reservation Feedback objects\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "reservation_feedback": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "food": {
                                "type": "string"
                              },
                              "overall": {
                                "type": "string"
                              },
                              "feedback_type": {
                                "type": "string"
                              },
                              "reservation_id": {
                                "type": "string",
                                "description": "Unique identifier for the reservaiton"
                              },
                              "service": {
                                "type": "string"
                              },
                              "notes": {
                                "description": "Internal, Venue facing notes for the Reservation.",
                                "type": "string"
                              },
                              "order_id": {
                                "type": "string",
                                "description": "Unique identifier of the Order. **This field will be `null` if `feedback_type = \"VISIT\"`**"
                              },
                              "recommend_to_friend": {
                                "type": "string"
                              },
                              "reservation_date": {
                                "description": "Date of the Reservation.",
                                "example": "2019-03-30",
                                "type": "string"
                              },
                              "ambience": {
                                "type": "string"
                              },
                              "received_date": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "reservation_feedback": [
                      {
                        "food": "5",
                        "overall": "5",
                        "feedback_type": "ORDER_PICKUP",
                        "reservation_id": "ahNzfnNldmVucm9vbXMtc2VjdXJlcigLEhtuaWdodGxvb3BfUmVzZXJ2YXRpb25BY3R1YWwYgIDw5Pu4pAsM",
                        "service": "5",
                        "notes": "",
                        "order_id": "ahZzfnNldmVucm9vbXMtcZVjdXJlLXFhcksLEgVPcmRlciJAU0VWRU5ST09NU3w0NTgyNDk3NjEzNzc0ODQ4fDM0NmVhOTEyLWZkMDYtNDc5Ny",
                        "recommend_to_friend": "Yes",
                        "reservation_date": "5/17/23",
                        "ambience": null,
                        "received_date": "5/18/23"
                      },
                      {
                        "food": "5",
                        "overall": "5",
                        "feedback_type": "VISIT",
                        "reservation_id": "ahNzfnNldmVucm9vbXMtc2VjdXJlcigLEhtuaWdodGxvb3BfUmVzZXJ2YXRpb25BY3R1YWwYgIDw5Pu4pAsM",
                        "service": "5",
                        "notes": "Great service!",
                        "order_id": null,
                        "recommend_to_friend": "not filled in",
                        "reservation_date": "5/22/23",
                        "ambience": "5",
                        "received_date": "5/27/23"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/venue_groups/{venue_group_id}/feedback": {
      "get": {
        "summary": "List all Reservation Feedback for Venue Group",
        "operationId": "get_reservation_feedback_group_id",
        "tags": [
          "Reservation Feedback"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/venue_group_id_path"
          },
          {
            "$ref": "#/components/parameters/feedback_start_date_query_required"
          },
          {
            "$ref": "#/components/parameters/feedback_end_date_query_required"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON list of Reservation Feedback objects across venue group\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "reservation_feedback": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "food": {
                                "type": "string"
                              },
                              "overall": {
                                "type": "string"
                              },
                              "feedback_type": {
                                "type": "string"
                              },
                              "reservation_id": {
                                "type": "string",
                                "description": "Unique identifier for the reservaiton"
                              },
                              "service": {
                                "type": "string"
                              },
                              "notes": {
                                "description": "Internal, Venue facing notes for the Reservation.",
                                "type": "string"
                              },
                              "order_id": {
                                "type": "string",
                                "description": "Unique identifier of the Order. **This field will be `null` if `feedback_type = \"VISIT\"`**"
                              },
                              "recommend_to_friend": {
                                "type": "string"
                              },
                              "reservation_date": {
                                "description": "Date of the Reservation.",
                                "example": "2019-03-30",
                                "type": "string"
                              },
                              "ambience": {
                                "type": "string"
                              },
                              "received_date": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "reservation_feedback": [
                      {
                        "food": "5",
                        "overall": "5",
                        "feedback_type": "ORDER_PICKUP",
                        "reservation_id": "ahNzfnNldmVucm9vbXMtc2VjdXJlcigLEhtuaWdodGxvb3BfUmVzZXJ2YXRpb25BY3R1YWwYgIDw5Pu4pAsM",
                        "service": "5",
                        "notes": "",
                        "order_id": "ahZzfnNldmVucm9vbXMtcZVjdXJlLXFhcksLEgVPcmRlciJAU0VWRU5ST09NU3w0NTgyNDk3NjEzNzc0ODQ4fDM0NmVhOTEyLWZkMDYtNDc5Ny",
                        "recommend_to_friend": "Yes",
                        "reservation_date": "5/17/23",
                        "ambience": null,
                        "received_date": "5/18/23"
                      },
                      {
                        "food": "5",
                        "overall": "5",
                        "feedback_type": "VISIT",
                        "reservation_id": "ahNzfnNldmVucm9vbXMtc2VjdXJlcigLEhtuaWdodGxvb3BfUmVzZXJ2YXRpb25BY3R1YWwYgIDw5Pu4pAsM",
                        "service": "5",
                        "notes": "Great service!",
                        "order_id": null,
                        "recommend_to_friend": "not filled in",
                        "reservation_date": "5/22/23",
                        "ambience": "5",
                        "received_date": "5/27/23"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clients/{client_id}/remove_personal_data": {
      "put": {
        "summary": "Remove a Client's Personal Data",
        "operationId": "remove_client_personal_data",
        "tags": [
          "Clients"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/client_id_path"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RemoveSingleClientData_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Object containing an HTTP response status code and message",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "msg": {
                      "description": "Human‐readable message describing the response status.",
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    }
                  }
                },
                "example": {
                  "msg": "Client's personal data successfully removed.",
                  "status": 200
                }
              }
            }
          }
        }
      }
    },
    "/waitlist": {
      "get": {
        "summary": "Search Waitlist Entries",
        "description": "Search for existing Waitlist Entries for a Venue Group, list of Venues, or a single Venue.\n",
        "operationId": "search_waitlist_entries",
        "tags": [
          "Waitlist"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/venue_id_multi_query_required"
          },
          {
            "$ref": "#/components/parameters/from_date_query_optional"
          },
          {
            "$ref": "#/components/parameters/to_date_query_optional"
          },
          {
            "$ref": "#/components/parameters/shift_category_query_optional"
          },
          {
            "$ref": "#/components/parameters/search_limit_query_optional"
          },
          {
            "$ref": "#/components/parameters/cursor_query_optional"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON list of Waitlist Entry objects\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "venue_id": {
                          "description": "Unique identifier of the venue.",
                          "type": "string"
                        },
                        "cursor": {
                          "type": "integer",
                          "description": "Cursor for pagination"
                        },
                        "limit": {
                          "type": "string",
                          "description": "Limit on objects returned between 1 and 400. Default is 30.",
                          "minimum": 1,
                          "maximum": 400,
                          "default": 30
                        },
                        "waitlist_entries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "access_persistent_id": {
                                "type": "string",
                                "description": "Unique identifier for access as a result of the availability call for the given time slot.      \n\nAccess persistent ID from result of availability call for given time slot."
                              },
                              "arrival_time": {
                                "description": "Local time for the Reservation.      \n> Times begin at 6AM. Any time considered the next day, e.g. 2AM will still be considered the same evening.",
                                "example": "5:00:00 PM",
                                "type": "string"
                              },
                              "client_id": {
                                "description": "Unique identifier of the Client profile",
                                "type": "string"
                              },
                              "date": {
                                "type": "string",
                                "format": "date",
                                "description": "Date in ISO 8601 format"
                              },
                              "duration": {
                                "description": "The amount of time, in minutes, for the Reservation.",
                                "example": 60,
                                "type": "integer"
                              },
                              "email": {
                                "description": "Email associated with the Reservation.      \n> All emails are validated for format prior to entry into the system.",
                                "example": "support@sevenrooms.com",
                                "type": "string"
                              },
                              "first_name": {
                                "description": "The Client's first name.",
                                "example": "John",
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              },
                              "last_name": {
                                "example": "Last name of the Client booking the Reservation.",
                                "type": "string"
                              },
                              "notes": {
                                "description": "Internal, Venue facing notes for the Reservation.",
                                "type": "string"
                              },
                              "party_size": {
                                "type": "integer",
                                "minimum": 1,
                                "description": "Party size"
                              },
                              "phone_number": {
                                "description": "Phone number associated with the Reservation.      \n> Can be numerous valid formats, including international phone      \nnumbers. US phone numbers generally follow      \n1-xxx-xxx-xxxx.",
                                "example": "1-555-555-5555",
                                "type": "string"
                              },
                              "quoted_wait_time": {
                                "type": "integer"
                              },
                              "shift_persistent_id": {
                                "description": "Unique identifier of the Shift belonging to this Reservation.      \n> Concatenation of:      \n> - Venue ID      \n> - Shift Category      \n> - Timestamp when shift was created      \n>       \n> Note that Venue ID may contain dashes.",
                                "example": "ahNzfnNldmVu2dsasg- DINNER-1443199242.75",
                                "type": "string"
                              },
                              "sort_order": {
                                "type": "integer"
                              },
                              "parties_ahead": {
                                "type": "integer"
                              },
                              "start_wait_time": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "status": {
                                "type": "string",
                                "description": "Status of the waitlist entry. Options are 'Joined Online' (default), 'Waiting', 'Awaiting Confirmation', 'Table Ready', 'Confirmed', 'Canceled', 'Arrived', 'Removed', 'No Show'"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "venue_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkM",
                    "cursor": "DXF1ZXJ5QW5kRmV0Y2gBAAAAAACIdOUWdTRXQy1UOGdUMEtvbkp2TVBwUmdOdw==",
                    "limit": 1,
                    "waitlist_entries": [
                      {
                        "status": "Waiting",
                        "phone_number": 12125559876,
                        "first_name": "Jane",
                        "last_name": "Doe",
                        "start_wait_time": "2024-03-17 12:20:38",
                        "duration": 90,
                        "quoted_wait_time": 50,
                        "shift_persistent_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkM-BREAKFAST-1552491652.9",
                        "access_persistent_id": "ahFkZXZ-bmlnaHRsb29wLW5ld3IcCxIPbmlnaHRsb29wX1ZlbnVlGICAgICAjtUJDA-1569360529.21-0.580892461024",
                        "email": "jane.doe@gmail.com",
                        "arrival_time": "6:00 PM",
                        "sort_order": 1,
                        "client_id": "ahZzfnNldmVucm9vbXMVudWVHcm91XFhcicLEhpuaWdcENsaWVudBiAgJiBuenrCAwtc2VjdXJlLodGxvb3BfVm",
                        "date": "2024-03-17",
                        "party_size": 4,
                        "id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcigLEhtuaWdodGxvb3BfUmVzZXJ2YXRpb25BY3R1YWwYgIDQv9qAsgoM",
                        "notes": ""
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Waitlist Entry",
        "description": "Add a waitlist entry to a venue's waitlist\n",
        "operationId": "create_waitlist_entry",
        "tags": [
          "Waitlist"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateWaitlistEntry_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Waitlist object\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "waitlist_entry": {
                          "type": "object",
                          "properties": {
                            "access_persistent_id": {
                              "type": "string",
                              "description": "Unique identifier for access as a result of the availability call for the given time slot.      \n\nAccess persistent ID from result of availability call for given time slot."
                            },
                            "arrival_time": {
                              "description": "Local time for the Reservation.      \n> Times begin at 6AM. Any time considered the next day, e.g. 2AM will still be considered the same evening.",
                              "example": "5:00:00 PM",
                              "type": "string"
                            },
                            "client_id": {
                              "description": "Unique identifier of the Client profile",
                              "type": "string"
                            },
                            "date": {
                              "type": "string",
                              "format": "date",
                              "description": "Date in ISO 8601 format"
                            },
                            "duration": {
                              "description": "The amount of time, in minutes, for the Reservation.",
                              "example": 60,
                              "type": "integer"
                            },
                            "email": {
                              "description": "Email associated with the Reservation.      \n> All emails are validated for format prior to entry into the system.",
                              "example": "support@sevenrooms.com",
                              "type": "string"
                            },
                            "first_name": {
                              "description": "The Client's first name.",
                              "example": "John",
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "last_name": {
                              "example": "Last name of the Client booking the Reservation.",
                              "type": "string"
                            },
                            "notes": {
                              "description": "Internal, Venue facing notes for the Reservation.",
                              "type": "string"
                            },
                            "party_size": {
                              "type": "integer",
                              "minimum": 1,
                              "description": "Party size"
                            },
                            "phone_number": {
                              "description": "Phone number associated with the Reservation.      \n> Can be numerous valid formats, including international phone      \nnumbers. US phone numbers generally follow      \n1-xxx-xxx-xxxx.",
                              "example": "1-555-555-5555",
                              "type": "string"
                            },
                            "quoted_wait_time": {
                              "type": "integer"
                            },
                            "shift_persistent_id": {
                              "description": "Unique identifier of the Shift belonging to this Reservation.      \n> Concatenation of:      \n> - Venue ID      \n> - Shift Category      \n> - Timestamp when shift was created      \n>       \n> Note that Venue ID may contain dashes.",
                              "example": "ahNzfnNldmVu2dsasg- DINNER-1443199242.75",
                              "type": "string"
                            },
                            "sort_order": {
                              "type": "integer"
                            },
                            "parties_ahead": {
                              "type": "integer"
                            },
                            "start_wait_time": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "status": {
                              "type": "string",
                              "description": "Status of the waitlist entry. Options are 'Joined Online' (default), 'Waiting', 'Awaiting Confirmation', 'Table Ready', 'Confirmed', 'Canceled', 'Arrived', 'Removed', 'No Show'"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "waitlist_entry": {
                      "status": "Waiting",
                      "phone_number": 12125559876,
                      "first_name": "Jane",
                      "last_name": "Doe",
                      "start_wait_time": "2024-03-17 12:20:38",
                      "duration": 90,
                      "quoted_wait_time": 50,
                      "shift_persistent_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkM-BREAKFAST-1552491652.9",
                      "access_persistent_id": "ahFkZXZ-bmlnaHRsb29wLW5ld3IcCxIPbmlnaHRsb29wX1ZlbnVlGICAgICAjtUJDA-1569360529.21-0.580892461024",
                      "email": "jane.doe@gmail.com",
                      "arrival_time": "6:00 PM",
                      "sort_order": 1,
                      "client_id": "ahZzfnNldmVucm9vbXMVudWVHcm91XFhcicLEhpuaWdcENsaWVudBiAgJiBuenrCAwtc2VjdXJlLodGxvb3BfVm",
                      "date": "2024-03-17",
                      "party_size": 4,
                      "id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcigLEhtuaWdodGxvb3BfUmVzZXJ2YXRpb25BY3R1YWwYgIDQv9qAsgoM",
                      "notes": ""
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/waitlist/quote_times": {
      "get": {
        "summary": "Get Waitlist Quote Times",
        "description": "Retrieve quote times by party size for a list of venues' waitlists.\n",
        "operationId": "get_waitlist_etas",
        "tags": [
          "Waitlist"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/venue_id_multi_query_required"
          },
          {
            "$ref": "#/components/parameters/shift_category_query_optional"
          },
          {
            "$ref": "#/components/parameters/party_size_min_query_optional"
          },
          {
            "$ref": "#/components/parameters/party_size_max_query_optional"
          },
          {
            "$ref": "#/components/parameters/access_persistent_id_query_optional"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON object containing a list of waitlist quote time objects for each queried Venue. A value of `-1` will be present if the Venue does not have availability for the corresponding `party_size`.\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "venue_id": {
                          "description": "Unique identifier of the venue.",
                          "type": "string"
                        },
                        "quote_times": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "party_size": {
                                "type": "integer",
                                "minimum": 1,
                                "description": "Party size"
                              },
                              "options": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "access_persistent_id": {
                                      "type": "string",
                                      "description": "Unique identifier for access as a result of the availability call for the given time slot.      \n\nAccess persistent ID from result of availability call for given time slot."
                                    },
                                    "public_time_slot_description": {
                                      "type": "string"
                                    },
                                    "policy": {
                                      "type": "string"
                                    },
                                    "reservation_tags": {
                                      "description": "Structured list of `tag group`, `tag_display`, `group`, `group_display`, and `color`.",
                                      "example": [
                                        {
                                          "color": "#ee415b",
                                          "group": "Dietary restrictions",
                                          "group_display": "Dietary restrictions",
                                          "tag": "Allergy",
                                          "tag_display": "Allergy"
                                        }
                                      ],
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "color": {
                                            "type": "string"
                                          },
                                          "group": {
                                            "type": "string"
                                          },
                                          "group_display": {
                                            "type": "string"
                                          },
                                          "tag": {
                                            "type": "string"
                                          },
                                          "tag_display": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "cancellation_policy": {
                                      "type": "string"
                                    },
                                    "require_credit_card": {
                                      "type": "boolean"
                                    },
                                    "public_description_title": {
                                      "type": "string"
                                    },
                                    "public_long_form_description": {
                                      "type": "string"
                                    },
                                    "quote_time": {
                                      "type": "integer"
                                    },
                                    "shift_category": {
                                      "description": "Category of the Shift.",
                                      "example": "LUNCH",
                                      "type": "string"
                                    },
                                    "shift_persistent_id": {
                                      "description": "Unique identifier of the Shift belonging to this Reservation.      \n> Concatenation of:      \n> - Venue ID      \n> - Shift Category      \n> - Timestamp when shift was created      \n>       \n> Note that Venue ID may contain dashes.",
                                      "example": "ahNzfnNldmVu2dsasg- DINNER-1443199242.75",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": [
                    {
                      "venue_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkM",
                      "quote_times": [
                        {
                          "party_size": 4,
                          "options": [
                            {
                              "public_time_slot_description": "Happy Hour",
                              "policy": "Thank you for your reservation. Should your plans change, please let us know 24 hours before your reservation time. We look forward to serving you.\n",
                              "reservation_tags": [
                                {
                                  "color": "#ee415b",
                                  "tag_display": "Allergy",
                                  "group_display": "Dietary restrictions",
                                  "group": "Dietary restrictions",
                                  "tag": "Allergy"
                                }
                              ],
                              "cancellation_policy": "Thank you for your reservation. Should your plans change, please let us know 24 hours before your reservation time. We look forward to serving you.\n",
                              "require_credit_card": false,
                              "public_description_title": "",
                              "public_long_form_description": "",
                              "quote_time": 5,
                              "shift_category": "DINNER",
                              "shift_persistent_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkM-BREAKFAST-1552491652.9",
                              "access_persistent_id": "ahFkZXZ-bmlnaHRsb29wLW5ld3IcCxIPbmlnaHRsb29wX1ZlbnVlGICAgICAjtUJDA-1569360529.21-0.580892461024"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/waitlist/{waitlist_entry_id}": {
      "get": {
        "summary": "Get a Waitlist Entry",
        "description": "Retrieve information on a single waitlist entry.",
        "operationId": "get_waitlist_entry",
        "tags": [
          "Waitlist"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/waitlist_entry_id_path"
          }
        ],
        "responses": {
          "200": {
            "description": "Waitlist entry object\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "waitlist_entry": {
                          "type": "object",
                          "properties": {
                            "access_persistent_id": {
                              "type": "string",
                              "description": "Unique identifier for access as a result of the availability call for the given time slot.      \n\nAccess persistent ID from result of availability call for given time slot."
                            },
                            "arrival_time": {
                              "description": "Local time for the Reservation.      \n> Times begin at 6AM. Any time considered the next day, e.g. 2AM will still be considered the same evening.",
                              "example": "5:00:00 PM",
                              "type": "string"
                            },
                            "client_id": {
                              "description": "Unique identifier of the Client profile",
                              "type": "string"
                            },
                            "date": {
                              "type": "string",
                              "format": "date",
                              "description": "Date in ISO 8601 format"
                            },
                            "duration": {
                              "description": "The amount of time, in minutes, for the Reservation.",
                              "example": 60,
                              "type": "integer"
                            },
                            "email": {
                              "description": "Email associated with the Reservation.      \n> All emails are validated for format prior to entry into the system.",
                              "example": "support@sevenrooms.com",
                              "type": "string"
                            },
                            "first_name": {
                              "description": "The Client's first name.",
                              "example": "John",
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "last_name": {
                              "example": "Last name of the Client booking the Reservation.",
                              "type": "string"
                            },
                            "notes": {
                              "description": "Internal, Venue facing notes for the Reservation.",
                              "type": "string"
                            },
                            "party_size": {
                              "type": "integer",
                              "minimum": 1,
                              "description": "Party size"
                            },
                            "phone_number": {
                              "description": "Phone number associated with the Reservation.      \n> Can be numerous valid formats, including international phone      \nnumbers. US phone numbers generally follow      \n1-xxx-xxx-xxxx.",
                              "example": "1-555-555-5555",
                              "type": "string"
                            },
                            "quoted_wait_time": {
                              "type": "integer"
                            },
                            "shift_persistent_id": {
                              "description": "Unique identifier of the Shift belonging to this Reservation.      \n> Concatenation of:      \n> - Venue ID      \n> - Shift Category      \n> - Timestamp when shift was created      \n>       \n> Note that Venue ID may contain dashes.",
                              "example": "ahNzfnNldmVu2dsasg- DINNER-1443199242.75",
                              "type": "string"
                            },
                            "sort_order": {
                              "type": "integer"
                            },
                            "parties_ahead": {
                              "type": "integer"
                            },
                            "start_wait_time": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "status": {
                              "type": "string",
                              "description": "Status of the waitlist entry. Options are 'Joined Online' (default), 'Waiting', 'Awaiting Confirmation', 'Table Ready', 'Confirmed', 'Canceled', 'Arrived', 'Removed', 'No Show'"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "waitlist_entry": {
                      "status": "Waiting",
                      "phone_number": 12125559876,
                      "first_name": "Jane",
                      "last_name": "Doe",
                      "start_wait_time": "2024-03-17 12:20:38",
                      "duration": 90,
                      "quoted_wait_time": 50,
                      "shift_persistent_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkM-BREAKFAST-1552491652.9",
                      "access_persistent_id": "ahFkZXZ-bmlnaHRsb29wLW5ld3IcCxIPbmlnaHRsb29wX1ZlbnVlGICAgICAjtUJDA-1569360529.21-0.580892461024",
                      "email": "jane.doe@gmail.com",
                      "arrival_time": "6:00 PM",
                      "sort_order": 1,
                      "client_id": "ahZzfnNldmVucm9vbXMVudWVHcm91XFhcicLEhpuaWdcENsaWVudBiAgJiBuenrCAwtc2VjdXJlLodGxvb3BfVm",
                      "date": "2024-03-17",
                      "party_size": 4,
                      "id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcigLEhtuaWdodGxvb3BfUmVzZXJ2YXRpb25BY3R1YWwYgIDQv9qAsgoM",
                      "notes": ""
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a Waitlist Entry",
        "description": "Update a waitlist entry onto a venue's waitlist.",
        "operationId": "update_waitlist_entry",
        "tags": [
          "Waitlist"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/waitlist_entry_id_path"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWaitlistEntry_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Waitlist object\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "waitlist_entry": {
                          "type": "object",
                          "properties": {
                            "access_persistent_id": {
                              "type": "string",
                              "description": "Unique identifier for access as a result of the availability call for the given time slot.      \n\nAccess persistent ID from result of availability call for given time slot."
                            },
                            "arrival_time": {
                              "description": "Local time for the Reservation.      \n> Times begin at 6AM. Any time considered the next day, e.g. 2AM will still be considered the same evening.",
                              "example": "5:00:00 PM",
                              "type": "string"
                            },
                            "client_id": {
                              "description": "Unique identifier of the Client profile",
                              "type": "string"
                            },
                            "date": {
                              "type": "string",
                              "format": "date",
                              "description": "Date in ISO 8601 format"
                            },
                            "duration": {
                              "description": "The amount of time, in minutes, for the Reservation.",
                              "example": 60,
                              "type": "integer"
                            },
                            "email": {
                              "description": "Email associated with the Reservation.      \n> All emails are validated for format prior to entry into the system.",
                              "example": "support@sevenrooms.com",
                              "type": "string"
                            },
                            "first_name": {
                              "description": "The Client's first name.",
                              "example": "John",
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "last_name": {
                              "example": "Last name of the Client booking the Reservation.",
                              "type": "string"
                            },
                            "notes": {
                              "description": "Internal, Venue facing notes for the Reservation.",
                              "type": "string"
                            },
                            "party_size": {
                              "type": "integer",
                              "minimum": 1,
                              "description": "Party size"
                            },
                            "phone_number": {
                              "description": "Phone number associated with the Reservation.      \n> Can be numerous valid formats, including international phone      \nnumbers. US phone numbers generally follow      \n1-xxx-xxx-xxxx.",
                              "example": "1-555-555-5555",
                              "type": "string"
                            },
                            "quoted_wait_time": {
                              "type": "integer"
                            },
                            "shift_persistent_id": {
                              "description": "Unique identifier of the Shift belonging to this Reservation.      \n> Concatenation of:      \n> - Venue ID      \n> - Shift Category      \n> - Timestamp when shift was created      \n>       \n> Note that Venue ID may contain dashes.",
                              "example": "ahNzfnNldmVu2dsasg- DINNER-1443199242.75",
                              "type": "string"
                            },
                            "sort_order": {
                              "type": "integer"
                            },
                            "parties_ahead": {
                              "type": "integer"
                            },
                            "start_wait_time": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "status": {
                              "type": "string",
                              "description": "Status of the waitlist entry. Options are 'Joined Online' (default), 'Waiting', 'Awaiting Confirmation', 'Table Ready', 'Confirmed', 'Canceled', 'Arrived', 'Removed', 'No Show'"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "waitlist_entry": {
                      "status": "Waiting",
                      "phone_number": 12125559876,
                      "first_name": "Jane",
                      "last_name": "Doe",
                      "start_wait_time": "2024-03-17 12:20:38",
                      "duration": 90,
                      "quoted_wait_time": 50,
                      "shift_persistent_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkM-BREAKFAST-1552491652.9",
                      "access_persistent_id": "ahFkZXZ-bmlnaHRsb29wLW5ld3IcCxIPbmlnaHRsb29wX1ZlbnVlGICAgICAjtUJDA-1569360529.21-0.580892461024",
                      "email": "jane.doe@gmail.com",
                      "arrival_time": "6:00 PM",
                      "sort_order": 1,
                      "client_id": "ahZzfnNldmVucm9vbXMVudWVHcm91XFhcicLEhpuaWdcENsaWVudBiAgJiBuenrCAwtc2VjdXJlLodGxvb3BfVm",
                      "date": "2024-03-17",
                      "party_size": 4,
                      "id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcigLEhtuaWdodGxvb3BfUmVzZXJ2YXRpb25BY3R1YWwYgIDQv9qAsgoM",
                      "notes": ""
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a Waitlist Entry",
        "description": "Remove a waitlist entry from a venue's waitlist.",
        "operationId": "delete_waitlist_entry",
        "tags": [
          "Waitlist"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/waitlist_entry_id_path"
          }
        ],
        "responses": {
          "200": {
            "description": "Object containing the status of the HTTP response\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    }
                  }
                },
                "example": {
                  "status": 200
                }
              }
            }
          }
        }
      }
    },
    "/waitlist/hold": {
      "post": {
        "summary": "Create a Waitlist Hold at a Venue",
        "description": "Place a waitlist hold on a venue's waitlist.",
        "operationId": "create_waitlist_hold",
        "tags": [
          "Waitlist"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateWaitlistHold_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Waitlist Hold object\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "access_persistent_id": {
                          "type": "string"
                        },
                        "hold_duration_sec": {
                          "type": "integer"
                        },
                        "shift_persistent_id": {
                          "type": "string"
                        },
                        "waitlist_entry_hold_id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "access_persistent_id": "ahFkZXZ-bmlnaHRsb29wLW5ld3IcCxIPbmlnaHRsb29wX1ZlbnVlGICAgICAjtUJDA-1569360529.21-0.580892461024",
                    "hold_duration_sec": 300,
                    "shift_persistent_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkM-BREAKFAST-1552491652.9",
                    "waitlist_entry_hold_id": "1569601786.366334"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/waitlist/hold/{waitlist_hold_id}/release": {
      "post": {
        "summary": "Delete a Waitlist Hold",
        "description": "Release a waitlist hold from a venue's waitlist.",
        "operationId": "delete_waitlist_hold",
        "tags": [
          "Waitlist"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/waitlist_hold_id_path"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeleteWaitlistHold_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "JSON object with HTTP response status.\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    }
                  }
                },
                "example": {
                  "status": 200
                }
              }
            }
          }
        }
      }
    },
    "/upgrade_categories/{upgrade_category_id}/upgrades": {
      "get": {
        "summary": "List all Upgrades",
        "description": "Get all Upgrades for an Upgrade Category at a Venue.",
        "operationId": "get_upgrades",
        "tags": [
          "Upgrades"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/upgrade_category_id_path"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON list of Upgrade Objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "upgrades": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "sort_order": {
                                "type": "string"
                              },
                              "price": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "venue_id": {
                                "description": "Unique identifier of the venue.",
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "category_id": {
                                "type": "string"
                              },
                              "deleted": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "upgrades": [
                      {
                        "sort_order": null,
                        "price": 300,
                        "venue_id": "ahFkZXZ-bmlnaHRsb29wLW5ld3IcCxIPbmlnaHRsb29wX1ZlbnVlGICAgICA9ecIDA",
                        "id": "ahFkZXZ-bmlnaHRsb29wLW5ld3JDCxIPbmlnaHRsb29wX1ZlbnVlGICAgICA9ecIDAsSGnNyX1Vwc2VsbENhdGVnb3J5SW52ZW50b3J5GICAgICAzZsJDA",
                        "description": "Delicious Champagne",
                        "category_id": "ahFkZXZ-bmlnaHRsb29wLW5ld3I6CxIPbmlnaHRsb29wX1ZlbnVlGICAgICA9ecIDAsSEXNyX1Vwc2VsbENhdGVnb3J5GICAgICA9b8KDA",
                        "deleted": null,
                        "name": "Ace of Spades"
                      },
                      {
                        "sort_order": null,
                        "price": 104,
                        "venue_id": "ahFkZXZ-bmlnaHRsb29wLW5ld3IcCxIPbmlnaHRsb29wX1ZlbnVlGICAgICA9ecIDA",
                        "id": "ahFkZXZ-bmlnaHRsb29wLW5ld3JDCxIPbmlnaHRsb29wX1ZlbnVlGICAgICA9ecIDAsSGnNyX1Vwc2VsbENhdGVnb3J5SW52ZW50b3J5GICAgICA9b8JDA",
                        "description": "Limited Edition Brut Gold",
                        "category_id": "ahFkZXZ-bmlnaHRsb29wLW5ld3I6CxIPbmlnaHRsb29wX1ZlbnVlGICAgICA9ecIDAsSEXNyX1Vwc2VsbENhdGVnb3J5GICAgICA9b8KDA",
                        "deleted": null,
                        "name": "Moet & Chandon"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/upgrade_categories": {
      "get": {
        "summary": "List all Upgrade Categories",
        "description": "List all Upgrade Categories for a Venue.",
        "operationId": "get_upgrade_categories",
        "tags": [
          "Upgrade Categories"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/venue_id_query_required"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON list of Upgrade Categories.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "upgrade_categories": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "max_quantity_int": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "gratuity_percentage": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "max_quantity_type": {
                                "type": "string"
                              },
                              "tax_group_id": {
                                "type": "string"
                              },
                              "venue_id": {
                                "description": "Unique identifier of the venue.",
                                "type": "string"
                              },
                              "min_quantity_type": {
                                "type": "string"
                              },
                              "gratuity_charge_type": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              },
                              "min_quantity_int": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "is_charging_tax": {
                                "type": "boolean"
                              },
                              "is_charging_gratuity": {
                                "type": "boolean"
                              },
                              "sort_order": {
                                "type": "integer"
                              },
                              "deleted": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "show_category_flag": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "upgrade_categories": [
                      {
                        "max_quantity_int": 1,
                        "gratuity_percentage": 10,
                        "max_quantity_type": "UNLIMITED",
                        "tax_group_id": "",
                        "venue_id": "ahFkZXZ-bmlnaHRsb29wLW5ld3IcCxIPbmlnaHRsb29wX1ZlbnVlGICAgICA9ecIDA",
                        "min_quantity_type": "NONE_REQUIRED",
                        "gratuity_charge_type": "DEFAULT_GRATUITY",
                        "id": "ahFkZXZ-bmlnaHRsb29wLW5ld3I6CxIPbmlnaHRsb29wX1ZlbnVlGICAgICA9ecIDAsSEXNyX1Vwc2VsbENhdGVnb3J5GICAgICAzZsKDA",
                        "min_quantity_int": 1,
                        "is_charging_tax": true,
                        "is_charging_gratuity": true,
                        "sort_order": 0,
                        "deleted": null,
                        "name": "Bottle of Tequila",
                        "show_category_flag": true
                      },
                      {
                        "max_quantity_int": 1,
                        "gratuity_percentage": 10,
                        "max_quantity_type": "UNLIMITED",
                        "tax_group_id": "",
                        "venue_id": "ahFkZXZ-bmlnaHRsb29wLW5ld3IcCxIPbmlnaHRsb29wX1ZlbnVlGICAgICA9ecIDA",
                        "min_quantity_type": "NONE_REQUIRED",
                        "gratuity_charge_type": "DEFAULT_GRATUITY",
                        "id": "ahFkZXZ-bmlnaHRsb29wLW5ld3I6CxIPbmlnaHRsb29wX1ZlbnVlGICAgICA9ecIDAsSEXNyX1Vwc2VsbENhdGVnb3J5GICAgICA9b8KDA",
                        "min_quantity_int": 1,
                        "is_charging_tax": true,
                        "is_charging_gratuity": true,
                        "sort_order": 0,
                        "deleted": null,
                        "name": "Bottle of Champagne",
                        "show_category_flag": true
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/upgrade_categories/{upgrade_category}/upgrades/{upgrade_id}": {
      "get": {
        "summary": "Get an Upgrade",
        "description": "Get an Upgrade at a Venue by a given Upgrade Category ID and Upgrade ID.",
        "operationId": "get_upgrade",
        "tags": [
          "Upgrades"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/upgrade_category_path"
          },
          {
            "$ref": "#/components/parameters/upgrade_id_path"
          }
        ],
        "responses": {
          "200": {
            "description": "Upgrade object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "upgrade": {
                          "type": "object",
                          "properties": {
                            "sort_order": {
                              "type": "string"
                            },
                            "price": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "venue_id": {
                              "description": "Unique identifier of the venue.",
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "category_id": {
                              "type": "string"
                            },
                            "deleted": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "upgrade": {
                      "sort_order": null,
                      "price": 300,
                      "venue_id": "ahFkZXZ-bmlnaHRsb29wLW5ld3IcCxIPbmlnaHRsb29wX1ZlbnVlGICAgICA9ecIDA",
                      "id": "ahFkZXZ-bmlnaHRsb29wLW5ld3JDCxIPbmlnaHRsb29wX1ZlbnVlGICAgICA9ecIDAsSGnNyX1Vwc2VsbENhdGVnb3J5SW52ZW50b3J5GICAgICAzZsJDA",
                      "description": "Delicious Champagne",
                      "category_id": "ahFkZXZ-bmlnaHRsb29wLW5ld3I6CxIPbmlnaHRsb29wX1ZlbnVlGICAgICA9ecIDAsSEXNyX1Vwc2VsbENhdGVnb3J5GICAgICA9b8KDA",
                      "deleted": null,
                      "name": "Ace of Spades"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/upgrade_categories/{upgrade_category_id}": {
      "get": {
        "summary": "Get an Upgrade Category",
        "description": "Get an Upgrade Category at a Venue by a given Upgrade Category ID.",
        "operationId": "get_upgrade_category",
        "tags": [
          "Upgrade Categories"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/upgrade_category_id_path"
          }
        ],
        "responses": {
          "200": {
            "description": "Upgrade Category object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "max_quantity_int": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "gratuity_percentage": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "max_quantity_type": {
                          "type": "string"
                        },
                        "tax_group_id": {
                          "type": "string"
                        },
                        "venue_id": {
                          "description": "Unique identifier of the venue.",
                          "type": "string"
                        },
                        "min_quantity_type": {
                          "type": "string"
                        },
                        "gratuity_charge_type": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "min_quantity_int": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "is_charging_tax": {
                          "type": "boolean"
                        },
                        "is_charging_gratuity": {
                          "type": "boolean"
                        },
                        "sort_order": {
                          "type": "integer"
                        },
                        "deleted": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "show_category_flag": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "max_quantity_int": 1,
                    "gratuity_percentage": 10,
                    "max_quantity_type": "UNLIMITED",
                    "tax_group_id": "",
                    "venue_id": "ahFkZXZ-bmlnaHRsb29wLW5ld3IcCxIPbmlnaHRsb29wX1ZlbnVlGICAgICA9ecIDA",
                    "min_quantity_type": "NONE_REQUIRED",
                    "gratuity_charge_type": "DEFAULT_GRATUITY",
                    "id": "ahFkZXZ-bmlnaHRsb29wLW5ld3I6CxIPbmlnaHRsb29wX1ZlbnVlGICAgICA9ecIDAsSEXNyX1Vwc2VsbENhdGVnb3J5GICAgICAzZsKDA",
                    "min_quantity_int": 1,
                    "is_charging_tax": true,
                    "is_charging_gratuity": true,
                    "sort_order": 0,
                    "deleted": null,
                    "name": "Bottle of Tequila",
                    "show_category_flag": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venue_id}/activity_logs": {
      "get": {
        "summary": "Get the Activity Logs",
        "description": "Venue Level Credentials are sufficient",
        "operationId": "get_activity_logs",
        "tags": [
          "Activity Logs"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/path"
          },
          {
            "$ref": "#/components/parameters/from_date_query_optional"
          },
          {
            "$ref": "#/components/parameters/to_date_query_optional"
          },
          {
            "$ref": "#/components/parameters/search_limit_query_optional"
          },
          {
            "$ref": "#/components/parameters/cursor_query_optional"
          }
        ],
        "responses": {
          "200": {
            "description": "Upgrade object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "cursor": {
                          "type": "string",
                          "description": "Cursor for pagination"
                        },
                        "limit": {
                          "type": "string",
                          "description": "Limit on objects returned between 1 and 400. Default is 30.",
                          "minimum": 1,
                          "maximum": 400,
                          "default": 30
                        },
                        "activities": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "category": {
                                "type": "string"
                              },
                              "client_ip_address": {
                                "type": "string",
                                "description": "String denoting remote ip address"
                              },
                              "timestamp": {
                                "type": "string"
                              },
                              "client_user_agent": {
                                "type": "string",
                                "description": "String denoting client user agent"
                              },
                              "action": {
                                "type": "string"
                              },
                              "user": {
                                "type": "object",
                                "description": "Array",
                                "properties": {
                                  "first_name": {
                                    "type": "string"
                                  },
                                  "last_name": {
                                    "type": "string"
                                  },
                                  "email": {
                                    "type": "string"
                                  },
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "cursor": "ZXN0YW1wEgkI-5b36fHj_QISPGoWc35zZXZlbnJvbYXIiCxIVbmlnaHRsb29wX0FjdGl2aXR5TG9nGICAyLvaotIJDBgAIAE=",
                    "limit": 50,
                    "activities": [
                      {
                        "id": "ahZzfnNldmVucm9vbXMtc2VjdXJlb2cYgIDIu9qi0gkMLXFhciILEhVuaWdodGxvb3BfQWN0aXZpdHlM",
                        "category": "LOGIN",
                        "user": {
                          "first_name": "Jane",
                          "last_name": "Smith",
                          "id": "ahZzfnNldmVucm9vbXhnYWVfVXNlchiAgMjn3v3LCAwMtc2VjdXJlLXFhchULEg",
                          "email": "jsmith@gmail.com"
                        },
                        "client_user_agent": null,
                        "action": "Successfully logged in (web)",
                        "client_ip_address": "165.99.41.403",
                        "timestamp": "2023-03-17T21:18:10.189179+00:00"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/venue_groups/{venue_group_id}/pods": {
      "get": {
        "summary": "Fetch all Pods in a Venue Group",
        "description": "Venue Group Level Credentials are required <br> Returns all pods in the Venue Group including all `venue_ids` tied to that pod.",
        "operationId": "get_all_pods",
        "tags": [
          "Pods"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/venue_group_id_path"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Pods",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "pods": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "venue_ids": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "pods": [
                      {
                        "venue_ids": [
                          "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgIDw3N",
                          "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgIDQ2NygswoM"
                        ],
                        "id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhckkLEhRuaWdodGxvb3BfVmVudWVHcm91cBiAgJD6uq3TCgwLEgtQb2R",
                        "name": "Pod 1"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venue_id}/tables": {
      "get": {
        "summary": "Fetch all table details for a given venue",
        "description": "Venue or Venue Group Level Credentials are required <br> Returns all tables in the Venue including all `seating_area_id` and `seating_name` tied to the tables.",
        "operationId": "get_all_tables",
        "tags": [
          "Tables"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/path"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Tables",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "tables": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "table_number": {
                                "type": "string"
                              },
                              "party_size_min": {
                                "type": "number"
                              },
                              "party_size_max": {
                                "type": "number"
                              },
                              "seating_area_id": {
                                "type": "string"
                              },
                              "seating_area_name": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "tables": [
                      {
                        "id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgIDw3N",
                        "table_number": "12",
                        "party_size_min": 1,
                        "party_size_max": 12,
                        "seating_area_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGgdb3BfVmVudWUYgIDw3N",
                        "seating_area_name": "Main Hall"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a table",
        "description": "Venue or Venue Group Level Credentials are required <br> Create a table",
        "operationId": "create_table",
        "tags": [
          "Tables"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "venue_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateTable_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns created table data\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgIDw3N",
                    "party_size_max": 12,
                    "party_size_min": 1,
                    "seating_area_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGgdb3BfVmVudWUYgIDw3N",
                    "seating_area_name": "Main Hall",
                    "table_number": "12"
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "example": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgIDw3N",
                          "type": "string"
                        },
                        "party_size_max": {
                          "example": 12,
                          "type": "integer"
                        },
                        "party_size_min": {
                          "example": 1,
                          "type": "integer"
                        },
                        "seating_area_id": {
                          "example": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGgdb3BfVmVudWUYgIDw3N",
                          "type": "string"
                        },
                        "seating_area_name": {
                          "example": "Main Hall",
                          "type": "string"
                        },
                        "table_number": {
                          "example": "12",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venue_id}/events": {
      "get": {
        "summary": "Get Events",
        "description": "Retrieve venue events.",
        "operationId": "get_events",
        "tags": [
          "Events"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/path"
          },
          {
            "$ref": "#/components/parameters/start_date_query_optional"
          },
          {
            "$ref": "#/components/parameters/end_date_query_optional"
          }
        ],
        "responses": {
          "200": {
            "description": "Event object.\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "events": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "applicable_dates": {
                                "type": "array",
                                "description": "A list of dates the event applies to.",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "booking_policy_id": {
                                "type": "string"
                              },
                              "booking_policy": {
                                "type": "string"
                              },
                              "cancellation_policy_id": {
                                "type": "string"
                              },
                              "cancellation_policy": {
                                "type": "string"
                              },
                              "custom_booking_policy": {
                                "type": "string"
                              },
                              "custom_cancellation_policy": {
                                "type": "string"
                              },
                              "day_of_week": {
                                "type": "array",
                                "description": "A list of days of the week the event applies to.",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "deleted": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "end_date": {
                                "type": "string"
                              },
                              "event_end_time": {
                                "type": "string"
                              },
                              "event_start_time": {
                                "type": "string"
                              },
                              "excluded_dates": {
                                "type": "array"
                              },
                              "experience_id": {
                                "type": "string"
                              },
                              "hide_event": {
                                "type": "boolean"
                              },
                              "id": {
                                "type": "string"
                              },
                              "inventories": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "additional_fee": {
                                      "type": "object",
                                      "description": "Information about the additional fee",
                                      "properties": {
                                        "fee_amount_type": {
                                          "type": "string"
                                        },
                                        "fee_label": {
                                          "type": "string"
                                        },
                                        "fee_amount": {
                                          "type": "integer"
                                        }
                                      }
                                    },
                                    "additional_fee_tax_id": {
                                      "type": "string"
                                    },
                                    "admin_fee_type": {
                                      "type": "string"
                                    },
                                    "apply_service_charge": {
                                      "type": "boolean"
                                    },
                                    "booking_policy_id": {
                                      "type": "string"
                                    },
                                    "cancellation_policy_id": {
                                      "type": "string"
                                    },
                                    "charge_additional_fee": {
                                      "type": "boolean"
                                    },
                                    "charge_additional_fee_tax": {
                                      "type": "boolean"
                                    },
                                    "charge_gratuity": {
                                      "type": "boolean"
                                    },
                                    "charge_tax": {
                                      "type": "boolean"
                                    },
                                    "comp_text": {
                                      "type": "string"
                                    },
                                    "custom_booking_policy": {
                                      "type": "string"
                                    },
                                    "custom_cancellation_policy": {
                                      "type": "string"
                                    },
                                    "deleted": {
                                      "type": "string"
                                    },
                                    "enable_promocodes": {
                                      "type": "boolean"
                                    },
                                    "end_time": {
                                      "type": "object",
                                      "description": "The time that the inventory sales end",
                                      "properties": {
                                        "absolute_hour": {
                                          "type": "string"
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "num": {
                                          "type": "integer"
                                        },
                                        "reference_hour": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "entry_per_reservation": {
                                      "type": "integer"
                                    },
                                    "event_id": {
                                      "type": "string"
                                    },
                                    "gratuity_amount": {
                                      "type": "integer"
                                    },
                                    "gratuity_amount_type": {
                                      "type": "string"
                                    },
                                    "guest_checkout": {
                                      "type": "boolean"
                                    },
                                    "hide_inventory": {
                                      "type": "boolean"
                                    },
                                    "hide_tiering": {
                                      "type": "boolean"
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "inventory_name": {
                                      "type": "string"
                                    },
                                    "inventory_type": {
                                      "type": "string",
                                      "description": "Inventory type. Possible types are RESERVATION, GUESTLIST, GUESTLIST_FREE, and REQUEST."
                                    },
                                    "max_quantity": {
                                      "type": "integer"
                                    },
                                    "min_price": {
                                      "description": "Minimum price required for the Reservation.",
                                      "example": 1500,
                                      "type": "integer"
                                    },
                                    "min_quantity": {
                                      "type": "integer"
                                    },
                                    "price": {
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "require_gratuity_charge": {
                                      "type": "boolean"
                                    },
                                    "reservation_tags": {
                                      "description": "Structured list of `tag group`, `tag_display`, `group`, `group_display`, and `color`.",
                                      "example": [
                                        {
                                          "color": "#ee415b",
                                          "group": "Dietary restrictions",
                                          "group_display": "Dietary restrictions",
                                          "tag": "Allergy",
                                          "tag_display": "Allergy"
                                        }
                                      ],
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "color": {
                                            "type": "string"
                                          },
                                          "group": {
                                            "type": "string"
                                          },
                                          "group_display": {
                                            "type": "string"
                                          },
                                          "tag": {
                                            "type": "string"
                                          },
                                          "tag_display": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "seating_area": {
                                      "type": "string"
                                    },
                                    "service_charge_amount": {
                                      "type": "integer"
                                    },
                                    "service_charge_type": {
                                      "type": "string"
                                    },
                                    "start_time": {
                                      "description": "The time that the inventory sales begin",
                                      "type": "object",
                                      "properties": {
                                        "absolute_hour": {
                                          "type": "string"
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "num": {
                                          "type": "integer"
                                        },
                                        "reference_hour": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "tax_group_id": {
                                      "type": "string"
                                    },
                                    "tier_list": {
                                      "type": "array"
                                    },
                                    "total_quantity": {
                                      "type": "integer"
                                    },
                                    "upsell_categories": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "venue_id": {
                                      "description": "Unique identifier of the venue.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "is_past": {
                                "type": "boolean"
                              },
                              "is_recurring": {
                                "type": "boolean"
                              },
                              "name": {
                                "type": "string"
                              },
                              "photo_map": {
                                "type": "object",
                                "description": "A nested object containing information about event photos.      ",
                                "example": {
                                  "1": {
                                    "label": "",
                                    "url": null,
                                    "cropData": null
                                  }
                                }
                              },
                              "policy_dict": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "policy_text": {
                                    "type": "string"
                                  }
                                }
                              },
                              "private_event": {
                                "type": "boolean"
                              },
                              "recurring_type": {
                                "type": "string"
                              },
                              "shift_categories": {
                                "type": "array"
                              },
                              "short_url": {
                                "type": "string"
                              },
                              "start_date": {
                                "type": "string"
                              },
                              "venue_id": {
                                "description": "Unique identifier of the venue.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "events": [
                      {
                        "applicable_dates": [
                          "10/12/2023"
                        ],
                        "booking_policy_id": "ahZzfnNldZG9kR3hKbExYRmhjaHdMRWc5dWFXAsSBlBvbGljeRiAgMidzej6CAwJYTXRj",
                        "booking_policy": "Default Booking Policy --     Thank you for your reservation. Should your plans change, please let us know 24 hours before your reservation time. We look forward to serving you.\\r\\n",
                        "cancellation_policy_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLsZ29NDAsSBlBvbGljeRiAgMidzei6Cghcm8LEg5Qb2xpY3lBbmNlctVnVk",
                        "cancellation_policy": "Default Cancellation Policy -- We ask that any cancellation to your reservation be made no less than 24 hours prior. For no shows or late cancellations, you will be subject to fee of $25 per person that will be applied to the credit card on file.",
                        "custom_booking_policy": "None",
                        "custom_cancellation_policy": "None",
                        "day_of_week": [
                          "Thursday"
                        ],
                        "deleted": "None",
                        "description": "<p>Example Event</p>",
                        "end_date": "10/13/2023",
                        "event_end_time": "12:00 AM",
                        "event_start_time": "5:00 PM",
                        "excluded_dates": [],
                        "experience_id": null,
                        "hide_event": false,
                        "id": "ahZzfnNldmVucm9vbXMtcjgI3fTMlgoMCxIQc3JfR2VuLEg9uaWdodGxvb3BfVmVudWUYgIDLVmVudWUYgID",
                        "inventories": [
                          {
                            "id": "ahZzfnNldmVucm9vbXMtc2oMCxIQc3JfR2VuVmVudWVFdmVjdXJlLXFhcl4LEg9uaWdodGxvb3ICozbm17AgM",
                            "additional_fee": {
                              "fee_amount_type": "PERCENT_OF_BASE",
                              "fee_label": "Admin Fee",
                              "fee_amount": 0
                            },
                            "additional_fee_tax_id": null,
                            "admin_fee_type": "VENUE",
                            "apply_service_charge": false,
                            "booking_policy_id": "ahZzfnNldZG9kR3hKbExYRmhjaHdMRWc5dWFXAsSBlBvbGljeRiAgMidzej6CAwJYTXRj",
                            "cancellation_policy_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLsZ29NDAsSBlBvbGljeRiAgMidzei6Cghcm8LEg5Qb2xpY3lBbmNlctVnVk",
                            "charge_additional_fee": false,
                            "charge_additional_fee_tax": false,
                            "charge_gratuity": false,
                            "charge_tax": false,
                            "comp_text": "Free",
                            "custom_booking_policy": "None",
                            "custom_cancellation_policy": "None",
                            "deleted": "None",
                            "enable_promocodes": false,
                            "end_time": {
                              "absolute_hour": "None",
                              "key": "None",
                              "num": 1,
                              "reference_hour": "EVENT_START_TIME",
                              "type": "HOURS"
                            },
                            "entry_per_reservation": 1,
                            "event_id": "ahZzfnNldmVucm9vbXMtc2YgIDI3fTMlgoMCxIQc3JfR2VuVjdXJlLXFhcjgLEg9uaWdodGxvb3BfVmVudWUvZrHqooGDA",
                            "gratuity_amount": 20,
                            "gratuity_amount_type": "DEFAULT_FIXED",
                            "guest_checkout": true,
                            "hide_inventory": false,
                            "hide_tiering": true,
                            "inventory_name": "Reservation Example",
                            "inventory_type": "RESERVATION",
                            "max_quantity": 10,
                            "min_price": "None",
                            "min_quantity": 1,
                            "price": 80,
                            "require_gratuity_charge": false,
                            "reservation_tags": [],
                            "seating_area": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcoMBCxITU2VhdGluZ0FyZWFBbmNlc3RvciJIYWhaemZuTmxkbVZ1Y205dmJ",
                            "service_charge_amount": 0,
                            "service_charge_type": "DEFAULT_SERVICE_CHARGE",
                            "start_time": {
                              "absolute_hour": 43200,
                              "key": "None",
                              "num": 30,
                              "reference_hour": "NO_REF_TIME",
                              "type": "DAYS"
                            },
                            "tax_group_id": null,
                            "tier_list": [],
                            "total_quantity": 25,
                            "upsell_categories": [],
                            "venue_id": "ahZzfnNldmVucbXMtc2VjdXJlvb3BfVmVudWUYgIDI3fTMlgoMLXFhchwLEg9uaWdodGx"
                          }
                        ],
                        "is_past": false,
                        "is_recurring": false,
                        "name": "API228 Latest  Event - Octoberfest",
                        "photo_map": {
                          "1": {
                            "label": "",
                            "url": "None",
                            "cropData": "None"
                          }
                        },
                        "policy_dict": {},
                        "private_event": false,
                        "recurring_type": "ONCE",
                        "shift_categories": [],
                        "short_url": "http://sevn.ly/xcLaZ1ew",
                        "start_date": "10/12/2023",
                        "venue_id": "ahZzfnNldmVucbXMtc2VjdXJlvb3BfVmVudWUYgIDI3fTMlgoMLXFhchwLEg9uaWdodGx"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venue_id}/events/{event_id}/book": {
      "post": {
        "summary": "Create an Event Booking",
        "description": "Book a reservation at a Venue by ID.",
        "operationId": "create_event_booking",
        "tags": [
          "Events"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/path"
          },
          {
            "$ref": "#/components/parameters/event_id_path"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventBooking_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Object containing the ID and inventory type of the created event booking.\nPossible inventory types are RESERVATION, GUESTLIST, GUESTLIST_FREE, and REQUEST.\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "inventory_type": {
                          "type": "string",
                          "description": "Inventory type. Possible types are RESERVATION, GUESTLIST, GUESTLIST_FREE, and REQUEST."
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "id": "ahZzfnNldmVucm9vbXMtcjgI3fTMlgoMCxIQc3JfR2VuLEg9uaWdodGxvb3BfVmVudWUYgIDLVmVudWUYgID",
                    "inventory_type": "RESERVATION"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venue_id}/payments/payout_profile": {
      "get": {
        "summary": "Payout Profile",
        "description": "Get the credentials to use in payments flow.",
        "operationId": "payout_profile",
        "tags": [
          "Payments"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/path"
          }
        ],
        "responses": {
          "200": {
            "description": "Object containing the setup intent information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "account_id": {
                          "type": "string"
                        },
                        "payment_system": {
                          "type": "string"
                        },
                        "sevenrooms_public_key": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "account_id": "acct_1XXXXX",
                    "payment_system": "STRIPE",
                    "sevenrooms_public_key": "pk_live_XXXXX"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venue_id}/payments/begin_payment": {
      "post": {
        "summary": "Begin Payment",
        "description": "The `/begin_payment` endpoint is used when a customer is in the middle of the booking process that requires a prepayment guarantee.\nThe `/begin_payment` endpoint will create the PaymentIntent on Stripe and fetches the PaymentIntent id and client_secret to be used together with your Stripe Publishable Key on the  moment of generating the credit card form using the Stripe SDK.\n",
        "operationId": "begin_payment",
        "tags": [
          "Payments"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/path"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BeginPayment_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Object containing the setup intent information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "intent_id": {
                          "type": "string",
                          "description": "Setup intent id"
                        },
                        "client_secret": {
                          "type": "string",
                          "description": "Setup intent client secret"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "intent_id": "pi_1Dathw2eZvKYlo2CstYe1U4i",
                    "client_secret": "pi_1Dathw2eZvKYlo2CstYe1U4i_secret_1sBwqYIUWjiYtUqzAG4loDHyq"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venue_id}/payments/begin_save": {
      "post": {
        "summary": "Begin Save",
        "description": "The `begin_save` endpoint is used when a booking requires a credit card guarantee (save cared for later).  \nThe `begin_save` is used to  create the SetupIntent on Stripe and fetches the SetupIntent id and client_secret to be used together with SevenRooms Stripe Publishable Key to be used generating the credit card form using the Stripe SDK.\n",
        "operationId": "begin_save_payment",
        "tags": [
          "Payments"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/path"
          }
        ],
        "responses": {
          "200": {
            "description": "Object containing the setup intent information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "intent_id": {
                          "type": "string",
                          "description": "Setup intent id"
                        },
                        "client_secret": {
                          "type": "string",
                          "description": "Setup intent client secret"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "intent_id": "pi_1Dathw2eZvKYlo2CstYe1U4i",
                    "client_secret": "pi_1Dathw2eZvKYlo2CstYe1U4i_secret_1sBwqYIUWjiYtUqzAG4loDHyq"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venue_id}/calculate_prices": {
      "post": {
        "summary": "Calculate Reservation Price",
        "description": "This endpoint calculates the prices associated with a reservation, including upsells if an integrator wants to incorporate that.",
        "operationId": "calculate_prices",
        "tags": [
          "Reservations"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "venue_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CalculatePrices_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Object containing pricing information for the reservation.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "access_persistent_id": "ahFkZXZ-bmlnaHRsb29wLW5ld3IcCxIPbmlnaHRsb29wX1ZlbnVlGICAgICAjtUJDA-1569360529.21-0.580892461024",
                    "apply_gratuity_charge": true,
                    "apply_service_charge": true,
                    "cc_payment_rule": "advanced_payment",
                    "charge_type": "reservation",
                    "gratuity_type": "CLIENT_GRATUITY",
                    "party_size": 2,
                    "require_credit_card": true,
                    "reservation_gratuity": 35.5,
                    "reservation_service_charge": 1.5,
                    "reservation_subtotal": 200,
                    "service_charge_type": "DEFAULT_SERVICE_CHARGE",
                    "total_costs": {
                      "gratuity": 35.5,
                      "reservation_subtotal": 200,
                      "service_charge": 1.5,
                      "tax": 3.75,
                      "total_spend": 260.75,
                      "upgrade_cost": 20
                    },
                    "upsells": []
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "access_persistent_id": {
                          "description": "Unique identifier for access as a result of the availability call for the given time slot.      \n\nAccess persistent ID from result of availability call for given time slot.",
                          "type": "string"
                        },
                        "apply_gratuity_charge": {
                          "example": true,
                          "type": "boolean"
                        },
                        "apply_service_charge": {
                          "example": true,
                          "type": "boolean"
                        },
                        "cc_payment_rule": {
                          "example": "advanced_payment",
                          "type": "string"
                        },
                        "charge_type": {
                          "example": "reservation",
                          "type": "string"
                        },
                        "gratuity_type": {
                          "example": "CLIENT_GRATUITY",
                          "type": "string"
                        },
                        "party_size": {
                          "description": "Party size",
                          "example": 2,
                          "type": "integer"
                        },
                        "require_credit_card": {
                          "example": true,
                          "type": "boolean"
                        },
                        "reservation_gratuity": {
                          "example": 35.5,
                          "type": "number"
                        },
                        "reservation_service_charge": {
                          "example": 1.5,
                          "type": "number"
                        },
                        "reservation_subtotal": {
                          "example": 200,
                          "type": "number"
                        },
                        "service_charge_type": {
                          "example": "DEFAULT_SERVICE_CHARGE",
                          "type": "string"
                        },
                        "total_costs": {
                          "properties": {
                            "gratuity": {
                              "example": 35.5,
                              "type": "number"
                            },
                            "reservation_subtotal": {
                              "example": 200,
                              "type": "number"
                            },
                            "service_charge": {
                              "example": 1.5,
                              "type": "number"
                            },
                            "tax": {
                              "example": 3.75,
                              "type": "number"
                            },
                            "total_spend": {
                              "example": 260.75,
                              "type": "number"
                            },
                            "upgrade_cost": {
                              "example": 20,
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "upsells": {
                          "default": [],
                          "items": {
                            "properties": {
                              "base_price": {
                                "type": "number"
                              },
                              "category": {
                                "type": "string"
                              },
                              "category_id": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "gratuity": {
                                "type": "number"
                              },
                              "gratuity_pct": {
                                "type": "number"
                              },
                              "maximum_quantity_allowed": {
                                "type": "integer"
                              },
                              "minimum_quantity_required": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "quantity": {
                                "type": "number"
                              },
                              "service_charge": {
                                "type": "number"
                              },
                              "service_charge_pct": {
                                "type": "number"
                              },
                              "subtotal": {
                                "type": "number"
                              },
                              "tags": {
                                "type": "object"
                              },
                              "tax": {
                                "type": "number"
                              },
                              "tax_pct": {
                                "type": "number"
                              },
                              "total_cost": {
                                "type": "number"
                              },
                              "total_upgrade_cost": {
                                "type": "number"
                              },
                              "upgrade_gratuity": {
                                "type": "number"
                              },
                              "upgrade_id": {
                                "type": "string"
                              },
                              "upgrade_price": {
                                "type": "number"
                              },
                              "upgrade_service_charge": {
                                "type": "number"
                              },
                              "upgrade_service_charge_tax": {
                                "type": "number"
                              },
                              "upgrade_tax": {
                                "type": "number"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venue_id}/payments/paylink/{reservation_id}": {
      "post": {
        "summary": "Create Paylink",
        "description": "Use this endpoint to create a paylink. Paylink can be used for instant charge and for saving client's card for later payments.",
        "operationId": "create_paylink",
        "tags": [
          "Paylinks"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "venue_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservation_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Reservation.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaylink_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Object containing paylink information for the reservation.\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "gratuity_amount": null,
                    "gratuity_type": null,
                    "id": null,
                    "note_to_guest": null,
                    "paylink_auto_cancel_minutes": null,
                    "service_charge_amount": null,
                    "subtotal": null,
                    "tax_amount": null,
                    "type": "charge"
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "gratuity_amount": {
                          "type": "integer"
                        },
                        "gratuity_type": {
                          "enum": [
                            "gratuity_percentage",
                            "none",
                            "require_client_select_charge",
                            "client_select_gratuity"
                          ],
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "note_to_guest": {
                          "type": "string"
                        },
                        "paylink_auto_cancel_minutes": {
                          "type": "integer"
                        },
                        "service_charge_amount": {
                          "type": "integer"
                        },
                        "subtotal": {
                          "type": "integer"
                        },
                        "tax_amount": {
                          "type": "integer"
                        },
                        "type": {
                          "enum": [
                            "charge",
                            "collect"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venue_id}/payments/paylinks/{reservation_id}": {
      "get": {
        "summary": "List Paylinks",
        "description": "Shows the list of created paylinks for the reservation.",
        "operationId": "list_paylinks",
        "tags": [
          "Paylinks"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "venue_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservation_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Reservation.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object containing paylink information for the reservation.\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "gratuity_amount": null,
                      "gratuity_type": null,
                      "note_to_guest": null,
                      "paylink_auto_cancel_minutes": null,
                      "service_charge_amount": null,
                      "subtotal": null,
                      "tax_amount": null,
                      "type": "charge"
                    }
                  ],
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "properties": {
                          "gratuity_amount": {
                            "type": "integer"
                          },
                          "gratuity_type": {
                            "enum": [
                              "gratuity_percentage",
                              "none",
                              "require_client_select_charge",
                              "client_select_gratuity"
                            ],
                            "type": "string"
                          },
                          "note_to_guest": {
                            "type": "string"
                          },
                          "paylink_auto_cancel_minutes": {
                            "type": "integer"
                          },
                          "service_charge_amount": {
                            "type": "integer"
                          },
                          "subtotal": {
                            "type": "integer"
                          },
                          "tax_amount": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": [
                              "charge",
                              "collect"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venue_id}/payments/paylink/{paylink_id}": {
      "delete": {
        "summary": "Delete Paylink",
        "description": "Delete a paylink",
        "operationId": "delete_paylink",
        "tags": [
          "Paylinks"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "venue_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paylink_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Empty object if OK.\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**"
          }
        }
      }
    },
    "/venues/{venue_id}/orders/{order_id}": {
      "get": {
        "summary": "Get an order",
        "description": "",
        "operationId": "get_order",
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "venue_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order data\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "address": null,
                    "address_2": null,
                    "date": null,
                    "email": null,
                    "external_id": null,
                    "external_venue_id": null,
                    "first_name": null,
                    "id": null,
                    "last_name": null,
                    "order_number": null,
                    "order_status": null,
                    "order_type": null,
                    "phone_number": null,
                    "postal_code": null,
                    "time": null
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "address_2": {
                          "type": "string"
                        },
                        "date": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "external_id": {
                          "type": "string"
                        },
                        "external_venue_id": {
                          "type": "string"
                        },
                        "first_name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "last_name": {
                          "type": "string"
                        },
                        "order_number": {
                          "type": "string"
                        },
                        "order_status": {
                          "type": "string"
                        },
                        "order_type": {
                          "type": "string"
                        },
                        "phone_number": {
                          "type": "string"
                        },
                        "postal_code": {
                          "type": "string"
                        },
                        "time": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Update an order",
        "description": "",
        "operationId": "update_order",
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "venue_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrder_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Order ID\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "order_id": null
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "order_id": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an prder",
        "description": "",
        "operationId": "delete_order",
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "venue_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Empty object if OK.\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**"
          }
        }
      }
    },
    "/venues/{venue_id}/orders": {
      "post": {
        "summary": "Create an order",
        "description": "",
        "operationId": "create_order",
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "venue_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrder_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Order ID\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "order_id": null
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "order_id": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venue_id}/import_orders": {
      "post": {
        "summary": "Create orders in bulk",
        "description": "",
        "operationId": "import_orders",
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "venue_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ImportOrders_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "List of order IDs\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "order_ids": null
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "order_ids": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ExternalAPIKeySecurity": {
        "type": "apiKey",
        "description": "An Authorization `token` received in the response body of the request to the `/auth` endpoint.",
        "name": "Authorization",
        "in": "header"
      }
    },
    "schemas": {
      "body": {
        "properties": {
          "client_id": {
            "description": "Unique ID for your API Audience.",
            "type": "string"
          },
          "client_secret": {
            "description": "Unique secret for your API Audience.",
            "type": "string"
          }
        },
        "required": [
          "client_id",
          "client_secret"
        ]
      },
      "CreateReservation_body": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "description": "Date in ISO 8601 format"
          },
          "time": {
            "type": "string",
            "description": "Reservation time"
          },
          "party_size": {
            "type": "integer",
            "minimum": 1,
            "description": "Party size"
          },
          "first_name": {
            "description": "The Client's first name.",
            "example": "John",
            "type": "string"
          },
          "last_name": {
            "example": "Last name of the Client booking the Reservation.",
            "type": "string"
          },
          "phone": {
            "type": "string",
            "description": "Phone number of the Client in [E-164 format](https://en.wikipedia.org/wiki/E.164). For more information on this attribute please find our guide [here](https://api-docs.sevenrooms.com/developer-portal/phone-number-guide/)."
          },
          "reservation_id": {
            "type": "string",
            "description": "Unique identifier of the previously booked Reservation. If provided, the system will discard the Reservation when calculating availability to place the Reservation Hold."
          },
          "reservation_hold_id": {
            "type": "string",
            "description": "Unique identifier of the previously booked Reservation Hold. If booking succeeds, the system will release this Hold."
          },
          "email": {
            "description": "Email associated with the Reservation.      \n> All emails are validated for format prior to entry into the system.",
            "example": "support@sevenrooms.com",
            "type": "string"
          },
          "notes": {
            "description": "Internal, Venue facing notes for the Reservation.",
            "type": "string"
          },
          "internal_notes": {
            "type": "string",
            "description": "Internal notes for the venue staff."
          },
          "duration": {
            "description": "The amount of time, in minutes, for the Reservation.",
            "example": 60,
            "type": "integer"
          },
          "table": {
            "type": "string",
            "description": "Table number (if a table combination, comma-delimited)."
          },
          "tags": {
            "type": "string",
            "description": "Comma delimited list of reservation tags in `category:tag` format. Find available Reservation Tags [here](https://api-docs.sevenrooms.com/developer-portal/tags/)."
          },
          "salutation": {
            "type": "string"
          },
          "birthday": {
            "type": "string",
            "description": "Date in `YYYY-MM-DD` format."
          },
          "anniversary": {
            "description": "Client Profile: Anniversary",
            "type": "string"
          },
          "address": {
            "description": "Client Profile: Address first line",
            "type": "string"
          },
          "address2": {
            "description": "Client Profile: Address second line",
            "type": "string"
          },
          "city": {
            "description": "Client Profile: City",
            "type": "string"
          },
          "state": {
            "description": "Client Profile: State or province",
            "type": "string"
          },
          "country": {
            "description": "Client Profile: Country",
            "type": "string"
          },
          "postal_code": {
            "description": "Client Profile: Postal code",
            "type": "string"
          },
          "external_id": {
            "description": "ID for 3rd party foreign key to this reservation      \n\n> You may specify your own identifiers for Reservations that you book via the API for various reference purposes in your own systems.",
            "example": 55602,
            "type": "string"
          },
          "external_user_id": {
            "description": "Third party User ID stored on the Client profile.      \n\n> You may associate an external user account with a Client in the SevenRooms database. If the associated client for the Reservation has an `external_user_id` then that value will be returned here.",
            "example": 55602,
            "type": "string"
          },
          "send_client_email": {
            "type": "boolean",
            "description": "Boolean field used to send the client an email confirmation",
            "default": true
          },
          "send_client_sms": {
            "type": "boolean",
            "description": "Boolean field used to send the client a SMS confirmation",
            "default": false
          },
          "loyalty_id": {
            "example": "`loyalty_id` value from the Client entity associated with the Reservation.",
            "type": "string"
          },
          "loyalty_tier": {
            "description": "`loyalty_tier` value from the Client entity associated with the Reservation..",
            "type": "string"
          },
          "loyalty_rank": {
            "example": "`loyalty_rank` value from the Client entity.",
            "type": "integer"
          },
          "is_walkin": {
            "type": "boolean",
            "description": "Boolean field used to determine whether or not client is a walk-in or not"
          },
          "client_id": {
            "description": "Unique identifier of the Client profile.      \n\n**Note:** `external_user_id` overrides this argument.",
            "type": "string"
          },
          "access_persistent_id": {
            "type": "string",
            "description": "Unique identifier for access as a result of the availability call for the given time slot.      \n\nAccess persistent ID from result of availability call for given time slot."
          },
          "reservation_sms_opt_in": {
            "description": "Show opt-in for receiving SMS about reservations",
            "type": "boolean"
          },
          "send_reminder_email": {
            "description": "If True, an email is sent to remind the guest of their reservation.",
            "type": "boolean"
          },
          "send_reminder_sms": {
            "description": "If True, a SMS is sent to remind the guest of their reservation.",
            "type": "boolean"
          },
          "venue_group_marketing_opt_in": {
            "description": "Opt-in or opt-out a guest at the venue group level",
            "type": "boolean"
          },
          "venue_marketing_opt_in": {
            "description": "Opt-in or opt-out a guest at the venue level. This value does not need to be set if `venue_group_marketing_opt_in` is provided.",
            "type": "boolean"
          },
          "(Legacy) upgrade_categories": {
            "type": "string",
            "description": "**Note: You no longer need to include this to include upgrades with your reservation however you will not get an error if you do.**  \n\nCreate a Reservation with Upgrades using a comma-delimited list \n\n`upgrade_category_ids`. \n\n> Ex. `{\"<upgrade_category_id>\":{\"is_charging_gratuity\":false}, \"<upgrade_category_id>\":{is_charging_tax\":false}}`"
          },
          "upgrade_inventories": {
            "type": "string",
            "description": "Upgrade inventories value      \n> Ex. `{\"<upgrade_id>\":{\"price\":0, \"quantity\":1}}`"
          },
          "bypass_availability": {
            "type": "boolean",
            "default": false,
            "description": "**Note: Defaults to true if is_walkin set to true.**      \n      \nThis parameter will bypass availability (he access rule could have no tables or pacing left) during the creation of the reservation.  This is to support import use cases      \n      \nThe reservation will still be attached to the access rule based on shift and time so that the access rule seating areas and reservation tags would still auto-apply."
          },
          "bypass_required_contact_fields": {
            "type": "boolean",
            "default": false,
            "description": "**Note: Defaults to true if bypass_availability set to true.**      \n\n> If **True**, skips the validation for the venue settings of **\"When reservations are booked, require certain fields to be entered.\"**"
          },
          "bypass_duplicate_reservation_check": {
            "type": "boolean",
            "default": false,
            "description": "**Note: Defaults to true if bypass_availability set to true.**      \n\n> If **True**, skips the validation for the venue setting of **\"Allow a guest to have multiple reservations booked on the same shift\"**"
          },
          "bypass_editable_cutoff": {
            "default": false,
            "type": "boolean",
            "description": "**Note: Defaults to true if bypass_availability set to true.**      \n\n> If **True**, skips the validation for the access rule setting of **\"Reservation cannot be modified after the cancellation cut-off time\"**"
          },
          "mf_ratio_male": {
            "description": "Number of males expected for the Reservation.",
            "example": 2,
            "type": "integer"
          },
          "mf_ratio_female": {
            "description": "Number of females expected for the Reservation.",
            "example": 2,
            "type": "integer"
          },
          "add_client_tags": {
            "type": "string",
            "description": "Comma-delimited list of tags in `Tag Group:Tag Name` format"
          },
          "remove_client_tags": {
            "type": "string",
            "description": "Comma-delimited list of tags in `Tag Group:Tag Name` format"
          },
          "double_bookings_only_client_id_check": {
            "type": "boolean",
            "description": "When we are checking for double bookings we ignore client ID and check by full name and phone/emai. If true we will only check by client ID."
          },
          "payment_by_paylink": {
            "type": "boolean",
            "description": "Boolean, true if you need to create the auto-cancel paylink"
          },
          "paylink_cancel_time": {
            "type": "integer",
            "description": "Time in minutes between 15 and 30240 (21 days)."
          },
          "paylink_note": {
            "type": "string",
            "description": "Add the note to paylink, will be visible to the guest"
          },
          "paylink_email": {
            "type": "string",
            "description": "Client's email. The paylink will be sent to that email."
          }
        },
        "required": [
          "date",
          "time",
          "party_size",
          "first_name",
          "last_name",
          "phone"
        ]
      },
      "UpdateReservation_body": {
        "properties": {
          "first_name": {
            "description": "The Client's first name.",
            "example": "John",
            "type": "string"
          },
          "last_name": {
            "example": "Last name of the Client booking the Reservation.",
            "type": "string"
          },
          "phone": {
            "type": "string",
            "description": "Phone number of the Client in [E-164 format](https://en.wikipedia.org/wiki/E.164). For more information on this attribute please find our guide [here](https://api-docs.sevenrooms.com/developer-portal/phone-number-guide/)."
          },
          "email": {
            "description": "Email associated with the Reservation.      \n> All emails are validated for format prior to entry into the system.",
            "example": "support@sevenrooms.com",
            "type": "string"
          },
          "notes": {
            "description": "Internal, Venue facing notes for the Reservation.",
            "type": "string"
          },
          "duration": {
            "description": "The amount of time, in minutes, for the Reservation.",
            "example": 60,
            "type": "integer"
          },
          "table": {
            "type": "string",
            "description": "Table number (if a table combination, comma-delimited)."
          },
          "external_id": {
            "description": "ID for 3rd party foreign key to this reservation      \n\n> You may specify your own identifiers for Reservations that you book via the API for various reference purposes in your own systems.",
            "example": 55602,
            "type": "string"
          },
          "reservation_sms_opt_in": {
            "description": "Show opt-in for receiving SMS about reservations",
            "type": "boolean"
          },
          "send_reminder_email": {
            "description": "If True, an email is sent to remind the guest of their reservation.",
            "type": "boolean"
          },
          "send_reminder_sms": {
            "description": "If True, a SMS is sent to remind the guest of their reservation.",
            "type": "boolean"
          },
          "check_numbers": {
            "description": "Check numbers for the Reservation.      \n\n> Comma-delimited value, entered free form or populated via POS integration.",
            "type": "string"
          },
          "add_check_numbers": {
            "description": "Field used to manually add check number(s) to a reservation      \n> Must have a POS integration on to see successful check number(s) link",
            "type": "string"
          },
          "remove_check_numbers": {
            "description": "Field used to manually remove check number(s) from a reservation      \n> Must have POS integration on to see successful check number(s) removed",
            "type": "string"
          },
          "add_tags": {
            "type": "string",
            "example": "Custom Global:CustomAutotag6,Custom Global:CustomAutotag7",
            "description": "Comma-delimited list of reservation tags to add in `Tag Group:Tag Name` format. Find available Reservation Tags [here](https://api-docs.sevenrooms.com/developer-portal/tags/)"
          },
          "remove_tags": {
            "type": "string",
            "example": "Custom Global:CustomAutotag6,Custom Global:CustomAutotag7",
            "description": "Comma-delimited list of reservation tags to be removed in `Tag Group: Tag Name` format. Find available Reservation Tags [here](https://api-docs.sevenrooms.com/developer-portal/tags/)."
          },
          "status": {
            "type": "string",
            "description": "Status for this Reservation. CANCELED and NO_ENTRY are protected statuses and must be updated via a separate endpoint or via the SevenRooms client applications. As statuses can be customized on a per Venue basis, please consult with your SevenRooms support team to determine which statuses are valid for your application."
          },
          "upgrade_categories": {
            "type": "string",
            "description": "**Note: You no longer need to include this to include upgrades with your reservation however you will not get an error if you do.**  \n\nCreate a Reservation with Upgrades using a comma-delimited list \n\n`upgrade_category_ids`. \n\n> Ex. `{\"<upgrade_category_id>\":{\"is_charging_gratuity\":false}, \"<upgrade_category_id>\":{is_charging_tax\":false}}`"
          },
          "upgrade_inventories": {
            "type": "string",
            "description": "Upgrade inventories value      \n> Ex. `{\"<upgrade_id>\":{\"price\":0, \"quantity\":1}}`"
          }
        }
      },
      "BulkStatusTableUpdate_body": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "first_name": {
              "description": "The Client's first name.",
              "example": "John",
              "type": "string"
            },
            "last_name": {
              "example": "Last name of the Client booking the Reservation.",
              "type": "string"
            },
            "phone": {
              "type": "string",
              "description": "Phone number of the Client in [E-164 format](https://en.wikipedia.org/wiki/E.164). For more information on this attribute please find our guide [here](https://api-docs.sevenrooms.com/developer-portal/phone-number-guide/)."
            },
            "email": {
              "description": "Email associated with the Reservation.      \n> All emails are validated for format prior to entry into the system.",
              "example": "support@sevenrooms.com",
              "type": "string"
            },
            "notes": {
              "description": "Internal, Venue facing notes for the Reservation.",
              "type": "string"
            },
            "duration": {
              "description": "The amount of time, in minutes, for the Reservation.",
              "example": 60,
              "type": "integer"
            },
            "table": {
              "type": "string",
              "description": "Table number (if a table combination, comma-delimited)."
            },
            "reservation_sms_opt_in": {
              "description": "Show opt-in for receiving SMS about reservations",
              "type": "boolean"
            },
            "send_reminder_email": {
              "description": "If True, an email is sent to remind the guest of their reservation.",
              "type": "boolean"
            },
            "send_reminder_sms": {
              "description": "If True, a SMS is sent to remind the guest of their reservation.",
              "type": "boolean"
            },
            "check_numbers": {
              "description": "Check numbers for the Reservation.      \n\n> Comma-delimited value, entered free form or populated via POS integration.",
              "type": "string"
            },
            "add_check_numbers": {
              "description": "Field used to manually add check number(s) to a reservation      \n> Must have a POS integration on to see successful check number(s) link",
              "type": "string"
            },
            "remove_check_numbers": {
              "description": "Field used to manually remove check number(s) from a reservation      \n> Must have POS integration on to see successful check number(s) removed",
              "type": "string"
            },
            "add_tags": {
              "type": "string",
              "example": "Custom Global:CustomAutotag6,Custom Global:CustomAutotag7",
              "description": "Comma-delimited list of reservation tags to add in `Tag Group:Tag Name` format. Find available Reservation Tags [here](https://api-docs.sevenrooms.com/developer-portal/tags/)"
            },
            "remove_tags": {
              "type": "string",
              "example": "Custom Global:CustomAutotag6,Custom Global:CustomAutotag7",
              "description": "Comma-delimited list of reservation tags to be removed in `Tag Group: Tag Name` format. Find available Reservation Tags [here](https://api-docs.sevenrooms.com/developer-portal/tags/)."
            },
            "status": {
              "type": "string",
              "description": "Status for this Reservation. CANCELED and NO_ENTRY are protected statuses and must be updated via a separate endpoint or via the SevenRooms client applications. As statuses can be customized on a per Venue basis, please consult with your SevenRooms support team to determine which statuses are valid for your application."
            },
            "upgrade_categories": {
              "type": "string",
              "description": "**Note: You no longer need to include this to include upgrades with your reservation however you will not get an error if you do.**  \n\nCreate a Reservation with Upgrades using a comma-delimited list \n\n`upgrade_category_ids`. \n\n> Ex. `{\"<upgrade_category_id>\":{\"is_charging_gratuity\":false}, \"<upgrade_category_id>\":{is_charging_tax\":false}}`"
            },
            "upgrade_inventories": {
              "type": "string",
              "description": "Upgrade inventories value      \n> Ex. `{\"<upgrade_id>\":{\"price\":0, \"quantity\":1}}`"
            }
          },
          "required": [
            "reservation_id"
          ]
        }
      },
      "CreateReservationHold_body": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "description": "Date in ISO 8601 format"
          },
          "time": {
            "type": "string",
            "description": "Reservation time"
          },
          "party_size": {
            "type": "integer",
            "minimum": 1,
            "description": "Party size"
          },
          "shift_persistent_id": {
            "description": "Unique identifier of the Shift belonging to this Reservation.      \n> Concatenation of:      \n> - Venue ID      \n> - Shift Category      \n> - Timestamp when shift was created      \n>       \n> Note that Venue ID may contain dashes.",
            "example": "ahNzfnNldmVu2dsasg- DINNER-1443199242.75",
            "type": "string"
          },
          "access_persistent_id": {
            "type": "string",
            "description": "Unique identifier for access as a result of the availability call for the given time slot.      \n\nAccess persistent ID from result of availability call for given time slot."
          },
          "reservation_id": {
            "type": "string",
            "description": "Unique identifier of the previously booked Reservation. If provided, the system will discard the Reservation when calculating availability to place the Reservation Hold."
          },
          "hold_wait_time_sec": {
            "type": "integer",
            "description": "Amount of time, in seconds, until the waitlist hold expires. Default is 300.",
            "minimum": 1
          }
        },
        "required": [
          "date",
          "time",
          "party_size",
          "shift_persistent_id",
          "access_persistent_id"
        ]
      },
      "DeleteReservationHold_body": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "description": "Date in ISO 8601 format"
          },
          "shift_persistent_id": {
            "description": "Unique identifier of the Shift belonging to this Reservation.      \n> Concatenation of:      \n> - Venue ID      \n> - Shift Category      \n> - Timestamp when shift was created      \n>       \n> Note that Venue ID may contain dashes.",
            "example": "ahNzfnNldmVu2dsasg- DINNER-1443199242.75",
            "type": "string"
          }
        },
        "required": [
          "date",
          "shift_persistent_id"
        ]
      },
      "CreateReservationRequest_body": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "description": "Date in ISO 8601 format"
          },
          "time": {
            "type": "string",
            "description": "Reservation time"
          },
          "party_size": {
            "type": "integer",
            "minimum": 1,
            "description": "Party size"
          },
          "first_name": {
            "description": "The Client's first name.",
            "example": "John",
            "type": "string"
          },
          "last_name": {
            "example": "Last name of the Client booking the Reservation.",
            "type": "string"
          },
          "phone": {
            "type": "string",
            "description": "Phone number of the Client in [E-164 format](https://en.wikipedia.org/wiki/E.164). For more information on this attribute please find our guide [here](https://api-docs.sevenrooms.com/developer-portal/phone-number-guide/)."
          },
          "mf_ratio_male": {
            "description": "Number of males expected for the Reservation.",
            "example": 2,
            "type": "integer"
          },
          "mf_ratio_female": {
            "description": "Number of females expected for the Reservation.",
            "example": 2,
            "type": "integer"
          },
          "email": {
            "description": "Email associated with the Reservation.      \n> All emails are validated for format prior to entry into the system.",
            "example": "support@sevenrooms.com",
            "type": "string"
          },
          "notes": {
            "description": "Internal, Venue facing notes for the Reservation.",
            "type": "string"
          },
          "internal_notes": {
            "type": "string",
            "description": "Internal notes for the venue staff."
          },
          "duration": {
            "description": "The amount of time, in minutes, for the Reservation.",
            "example": 60,
            "type": "integer"
          },
          "send_client_email": {
            "type": "boolean",
            "description": "Boolean field used to send the client an email confirmation",
            "default": true
          },
          "external_user_id": {
            "description": "Third party User ID stored on the Client profile.      \n\n> You may associate an external user account with a Client in the SevenRooms database. If the associated client for the Reservation has an `external_user_id` then that value will be returned here.",
            "example": 55602,
            "type": "string"
          },
          "client_id": {
            "description": "Unique identifier of the Client profile",
            "type": "string"
          }
        },
        "required": [
          "date",
          "time",
          "party_size",
          "first_name",
          "last_name",
          "phone"
        ]
      },
      "CancelReservation_body": {
        "properties": {
          "send_client_email": {
            "type": "boolean",
            "description": "Boolean field used to send the client an email confirmation",
            "default": true
          },
          "bypass_cancellation_cutoff": {
            "type": "boolean",
            "description": "Boolean field used for venue to indicate whether or not to bypass the cancellation cutoff",
            "default": false
          }
        }
      },
      "MergeClientProfiles_body": {
        "properties": {
          "updated_client": {
            "type": "object",
            "properties": {
              "salutation": {
                "type": "string"
              },
              "first_name": {
                "description": "The Client's first name.",
                "example": "John",
                "type": "string"
              },
              "last_name": {
                "example": "Last name of the Client booking the Reservation.",
                "type": "string"
              },
              "email": {
                "description": "Email associated with the Reservation.      \n> All emails are validated for format prior to entry into the system.",
                "example": "support@sevenrooms.com",
                "type": "string"
              },
              "phone_number": {
                "description": "Phone number associated with the Reservation.      \n> Can be numerous valid formats, including international phone      \nnumbers. US phone numbers generally follow      \n1-xxx-xxx-xxxx.",
                "example": "1-555-555-5555",
                "type": "string"
              },
              "phone_number_locale": {
                "description": "The locale of the Client's primary phone number.",
                "example": "US",
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "company": {
                "description": "The Client's employer.",
                "example": "SevenRooms",
                "type": "string"
              },
              "gender": {
                "default": "UNSPECIFIED",
                "description": "The Client's gender.      \n\n```ENUM(\"MALE\", \"FEMALE\", \"UNSPECIFIED\")```",
                "example": "MALE",
                "type": "string"
              },
              "birthday_day": {
                "description": "The day of the month that the Client's birthday falls on (In `DD` format).      ",
                "example": 28,
                "type": "integer"
              },
              "address": {
                "description": "Address first line",
                "example": "122 West 27th Street",
                "type": "string"
              },
              "address_2": {
                "description": "Address second line",
                "example": "7th Floor",
                "type": "string"
              },
              "city": {
                "description": "The city of the Client's residential address.      ",
                "example": "New York",
                "type": "string"
              },
              "state": {
                "description": "`state` value from the Client entity associated with the Reservation.",
                "type": "string"
              },
              "postal_code": {
                "description": "`postal_code` value from the Client entity associated with the Reservation.",
                "type": "string"
              },
              "country": {
                "description": "The country of the Client's residential address.",
                "example": "United States",
                "type": "string"
              },
              "external_user_id": {
                "description": "Third party User ID stored on the Client profile.      \n\n> You may associate an external user account with a Client in the SevenRooms database. If the associated client for the Reservation has an `external_user_id` then that value will be returned here.",
                "example": 55602,
                "type": "string"
              },
              "loyalty_id": {
                "example": "`loyalty_id` value from the Client entity associated with the Reservation.",
                "type": "string"
              },
              "loyalty_tier": {
                "description": "`loyalty_tier` value from the Client entity associated with the Reservation.",
                "type": "string"
              },
              "loyalty_rank": {
                "example": "`loyalty_rank` value from the Client entity.",
                "type": "integer"
              },
              "anniversary": {
                "description": "Client Profile: Anniversary",
                "type": "string"
              },
              "email_alt": {
                "description": "The Client's seecondary email address.",
                "example": "john.doe@yahoo.com",
                "type": "string"
              },
              "birthday_month": {
                "description": "The month of the year that the Client's birthday falls on (In `MM` format).      ",
                "example": 12,
                "type": "integer"
              },
              "phone_number_alt": {
                "description": "The Client's alternate phone number (In `E-164` format).",
                "example": 12125556789,
                "type": "string"
              },
              "phone_number_alt_locale": {
                "description": "The locale of the Client's alternate phone number.",
                "example": "AU",
                "type": "string"
              },
              "venue_group_marketing_opt_in": {
                "description": "Opt-in or opt-out a guest at the venue group level",
                "type": "boolean"
              },
              "venue_marketing_opt_in": {
                "description": "Opt-in or opt-out a guest at the venue level. This value does not need to be set if `venue_group_marketing_opt_in` is provided.",
                "type": "boolean"
              },
              "add_tags": {
                "type": "string",
                "example": "Custom Global:CustomAutotag6,Custom Global:CustomAutotag7",
                "description": "Comma-delimited list of reservation tags to add in `Tag Group:Tag Name` format. Find available Reservation Tags [here](https://api-docs.sevenrooms.com/developer-portal/tags/)"
              },
              "remove_tags": {
                "type": "string",
                "example": "Custom Global:CustomAutotag6,Custom Global:CustomAutotag7",
                "description": "Comma-delimited list of reservation tags to be removed in `Tag Group: Tag Name` format. Find available Reservation Tags [here](https://api-docs.sevenrooms.com/developer-portal/tags/)."
              }
            }
          },
          "merged_client_ids": {
            "type": "array",
            "example": [
              "ahFkZXZ-bmlnaHRsb29wLW5ld3IhCxIabmlnaHRsb29wX1ZlbnVlR3JvdXBDbGllbnQY0g8M",
              "ahFkZXZ-bmlnaHRsb29wLW5ld3IhCxIabmlnaHRsb29wX1ZlbnVlR3JvdXBDbGllbnQY2XoM",
              "ahFkZXZ-bmlnaHRsb29wLW5ld3IhCxIabmlnaHRsb29wX1ZlbnVlR3JvdXBDbGllbnQY13oM"
            ],
            "description": "A list of optional client ids to be migrated and deleted e.g.       \n> Ex. `[<client_id>, <client_id>]`",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UpdateMultiClients_body": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "client_id": {
              "description": "Unique identifier of the Client profile",
              "type": "string"
            },
            "first_name": {
              "description": "The Client's first name.",
              "example": "John",
              "type": "string"
            },
            "last_name": {
              "example": "Last name of the Client booking the Reservation.",
              "type": "string"
            },
            "phone_number": {
              "description": "Phone number associated with the Reservation.      \n> Can be numerous valid formats, including international phone      \nnumbers. US phone numbers generally follow      \n1-xxx-xxx-xxxx.",
              "example": "1-555-555-5555",
              "type": "string"
            },
            "email": {
              "description": "Email associated with the Reservation.      \n> All emails are validated for format prior to entry into the system.",
              "example": "support@sevenrooms.com",
              "type": "string"
            },
            "address": {
              "description": "Address first line",
              "example": "122 West 27th Street",
              "type": "string"
            },
            "address_2": {
              "description": "Address second line",
              "example": "7th Floor",
              "type": "string"
            },
            "city": {
              "description": "The city of the Client's residential address.      ",
              "example": "New York",
              "type": "string"
            },
            "state": {
              "description": "`state` value from the Client entity associated with the Reservation.",
              "type": "string"
            },
            "postal_code": {
              "description": "`postal_code` value from the Client entity associated with the Reservation.",
              "type": "string"
            },
            "country": {
              "description": "The country of the Client's residential address.",
              "example": "United States",
              "type": "string"
            },
            "loyalty_id": {
              "example": "`loyalty_id` value from the Client entity associated with the Reservation.",
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "notes": {
              "description": "Internal, Venue facing notes for the Reservation.",
              "type": "string"
            },
            "loyalty_tier": {
              "description": "`loyalty_tier` value from the Client entity associated with the Reservation.",
              "type": "string"
            },
            "loyalty_rank": {
              "example": "`loyalty_rank` value from the Client entity.",
              "type": "integer"
            },
            "add_tags": {
              "type": "string",
              "example": "Custom Global:CustomAutotag6,Custom Global:CustomAutotag7",
              "description": "Comma-delimited list of reservation tags to add in `Tag Group:Tag Name` format. Find available Reservation Tags [here](https://api-docs.sevenrooms.com/developer-portal/tags/)"
            },
            "remove_tags": {
              "type": "string",
              "example": "Custom Global:CustomAutotag6,Custom Global:CustomAutotag7",
              "description": "Comma-delimited list of reservation tags to be removed in `Tag Group: Tag Name` format. Find available Reservation Tags [here](https://api-docs.sevenrooms.com/developer-portal/tags/)."
            },
            "venue_group_marketing_opt_in": {
              "description": "Opt-in or opt-out a guest at the venue group level",
              "type": "boolean"
            },
            "venue_marketing_opt_in": {
              "description": "Opt-in or opt-out a guest at the venue level. This value does not need to be set if `venue_group_marketing_opt_in` is provided.",
              "type": "boolean"
            },
            "external_user_id": {
              "description": "Third party User ID stored on the Client profile.      \n\n> You may associate an external user account with a Client in the SevenRooms database. If the associated client for the Reservation has an `external_user_id` then that value will be returned here.",
              "example": 55602,
              "type": "string"
            },
            "email_alt": {
              "description": "The Client's seecondary email address.",
              "example": "john.doe@yahoo.com",
              "type": "string"
            },
            "phone_number_alt": {
              "description": "The Client's alternate phone number (In `E-164` format).",
              "example": 12125556789,
              "type": "string"
            },
            "salutation": {
              "type": "string"
            },
            "company": {
              "description": "The Client's employer.",
              "example": "SevenRooms",
              "type": "string"
            },
            "gender": {
              "default": "UNSPECIFIED",
              "description": "The Client's gender.      \n\n```ENUM(\"MALE\", \"FEMALE\", \"UNSPECIFIED\")```",
              "example": "MALE",
              "type": "string"
            },
            "birthday_day": {
              "description": "The day of the month that the Client's birthday falls on (In `DD` format).      ",
              "example": 28,
              "type": "integer"
            },
            "photo": {
              "type": "string",
              "description": "Photo encoded as base64 string. Example: `data:image/png;base64, base64verylongstring...`"
            },
            "photo_crop_info": {
              "type": "string",
              "description": "JSON-encoded object with crop information. Must contain following integer fields: x, y, width, height. Example: `{\"width\": 120, \"height\": 120, \"x\": 0, \"y\": 0}`"
            },
            "photo_delete": {
              "type": "boolean",
              "description": "Boolean field which indicates whether the photo should be removed. Omit this field or set it to false if you don't want to delete the photo."
            }
          }
        }
      },
      "RemoveMultiClientData_body": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "client_id": {
              "description": "Unique identifier of the Client profile",
              "type": "string"
            },
            "include_reservations": {
              "type": "boolean",
              "default": "True",
              "example": true,
              "description": "Remove reservations associated with a specific client profile"
            },
            "remove_notes": {
              "type": "boolean",
              "default": "False",
              "example": false,
              "description": "Remove \"notes\" associated with a specific client profile"
            }
          }
        }
      },
      "CreateClient_body": {
        "properties": {
          "salutation": {
            "type": "string"
          },
          "first_name": {
            "description": "The Client's first name.",
            "example": "John",
            "type": "string"
          },
          "last_name": {
            "example": "Last name of the Client booking the Reservation.",
            "type": "string"
          },
          "email": {
            "description": "Email associated with the Reservation.      \n> All emails are validated for format prior to entry into the system.",
            "example": "support@sevenrooms.com",
            "type": "string"
          },
          "phone_number": {
            "description": "Phone number associated with the Reservation.      \n> Can be numerous valid formats, including international phone      \nnumbers. US phone numbers generally follow      \n1-xxx-xxx-xxxx.",
            "example": "1-555-555-5555",
            "type": "string"
          },
          "phone_number_locale": {
            "description": "The locale of the Client's primary phone number.",
            "example": "US",
            "type": "string"
          },
          "title": {
            "description": "Client Profile: Title",
            "type": "string"
          },
          "company": {
            "description": "Client Profile: Company",
            "type": "string"
          },
          "gender": {
            "description": "Client Profile: Gender",
            "type": "string"
          },
          "birthday_day": {
            "description": "Client Profile: Birthday day of month",
            "type": "string"
          },
          "address": {
            "description": "Client Profile: Address first line",
            "type": "string"
          },
          "address_2": {
            "description": "Client Profile: Address second line",
            "type": "string"
          },
          "city": {
            "description": "Client Profile: City",
            "type": "string"
          },
          "state": {
            "description": "Client Profile: State or province",
            "type": "string"
          },
          "postal_code": {
            "description": "Client Profile: Postal code",
            "type": "string"
          },
          "country": {
            "description": "Client Profile: Country",
            "type": "string"
          },
          "external_user_id": {
            "description": "Third party User ID stored on the Client profile.      \n\n> You may associate an external user account with a Client in the SevenRooms database. If the associated client for the Reservation has an `external_user_id` then that value will be returned here.",
            "example": 55602,
            "type": "string"
          },
          "loyalty_id": {
            "example": "`loyalty_id` value from the Client entity associated with the Reservation.",
            "type": "string"
          },
          "loyalty_tier": {
            "description": "`loyalty_tier` value from the Client entity associated with the Reservation.",
            "type": "string"
          },
          "loyalty_rank": {
            "example": "`loyalty_rank` value from the Client entity.",
            "type": "integer"
          },
          "anniversary": {
            "description": "Client Profile: Anniversary",
            "type": "string"
          },
          "email_alt": {
            "description": "The Client's seecondary email address.",
            "example": "john.doe@yahoo.com",
            "type": "string"
          },
          "birthday_month": {
            "description": "Client Profile: Birthday Month",
            "type": "string"
          },
          "phone_number_alt": {
            "description": "The Client's alternate phone number (In `E-164` format).",
            "example": 12125556789,
            "type": "string"
          },
          "phone_number_alt_locale": {
            "description": "The locale of the Client's alternate phone number.",
            "example": "AU",
            "type": "string"
          },
          "venue_group_marketing_opt_in": {
            "description": "Opt-in or opt-out a guest at the venue group level",
            "type": "boolean"
          },
          "venue_marketing_opt_in": {
            "description": "Opt-in or opt-out a guest at the venue level. This value does not need to be set if `venue_group_marketing_opt_in` is provided.",
            "type": "boolean"
          },
          "venue_id": {
            "description": "Required when setting the `venue_marketing_opt_in`. The value should be the ID of the venue for which to update the marketing opt in status.",
            "type": "string"
          },
          "photo": {
            "type": "string",
            "description": "Photo encoded as base64 string. Example: `data:image/png;base64, base64verylongstring...`"
          },
          "photo_crop_info": {
            "type": "string",
            "description": "JSON-encoded object with crop information. Must contain following integer fields: x, y, width, height. Example: `{\"width\": 120, \"height\": 120, \"x\": 0, \"y\": 0}`"
          }
        },
        "required": [
          "email",
          "first_name",
          "last_name",
          "phone_number"
        ]
      },
      "CreateCharge_body": {
        "properties": {
          "transaction_id": {
            "type": "string",
            "description": "Charge transaction ID in gateway or source system"
          },
          "subtotal": {
            "type": "string",
            "description": "Subtotal of charge amount before taxes, gratuities, and fees. Must be a non-zero, positive value"
          },
          "venue_id": {
            "type": "string",
            "description": "Unique identifier of the venue."
          },
          "card_id": {
            "type": "string",
            "description": "ID of the tokenized card in the source system"
          },
          "card_last4": {
            "type": "string",
            "description": "Tokenized card last 4 digits (if applicable)"
          },
          "card_brand": {
            "type": "string",
            "description": "Brand of the tokenized/stored card (if applicable)"
          },
          "gratuity": {
            "type": "string"
          },
          "tax": {
            "type": "number",
            "default": 0,
            "description": "tax percentage, between 0 and 100"
          },
          "additional_fee": {
            "type": "object",
            "description": "Information about the additional fee",
            "properties": {
              "fee_amount_type": {
                "type": "string"
              },
              "fee_label": {
                "type": "string"
              },
              "fee_amount": {
                "type": "integer"
              }
            }
          },
          "additional_fee_tax": {
            "type": "number",
            "default": 0
          },
          "upsell_amount": {
            "type": "number",
            "default": 0,
            "description": "Total amount of upsells on the specific charge"
          },
          "promo_code_id": {
            "type": "string",
            "description": "Identifier of the promo code used on the charge"
          },
          "total": {
            "type": "number",
            "default": 0,
            "description": "Total of the charge after taxes, gratuities, and fees. Must be a non-zero, positive value"
          },
          "service_charge": {
            "type": "number",
            "default": 0
          },
          "skip_validation": {
            "type": "boolean",
            "default": false,
            "description": "Boolean value to skip validation on the charge or not"
          },
          "promo_discount_amount": {
            "type": "string",
            "description": "Promotion discount amount applied on the charge"
          }
        },
        "required": [
          "transaction_id",
          "subtotal"
        ]
      },
      "CreateVenueReview_body": {
        "properties": {
          "review_type": {
            "type": "string",
            "description": "This is where the review originated. Choices include bookatable, facebook, foursquare, google, grubhub, openrice, opentable, opentableusa, resy, sevenrooms, thefork, tripadvisor, or yelp"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Date in ISO 8601 format"
          },
          "external_reservation_id": {
            "type": "string"
          },
          "rating": {
            "description": "A score between 1 and 10.",
            "type": "integer"
          },
          "notes": {
            "description": "Internal, Venue facing notes for the Reservation.",
            "type": "string"
          },
          "reservation_id": {
            "type": "string",
            "description": "Unique identifier for the reservaiton"
          },
          "author": {
            "type": "string",
            "description": "Author name, if known"
          },
          "influence_service": {
            "type": "number"
          },
          "influence_food": {
            "type": "number"
          },
          "influence_vibe": {
            "type": "number"
          },
          "influence_other": {
            "type": "number"
          }
        },
        "required": [
          "review_type",
          "date"
        ]
      },
      "CreateClientToken_body": {
        "properties": {
          "salutation": {
            "type": "string"
          },
          "first_name": {
            "description": "The Client's first name.",
            "example": "John",
            "type": "string"
          },
          "last_name": {
            "example": "Last name of the Client booking the Reservation.",
            "type": "string"
          },
          "email": {
            "description": "Email associated with the Reservation.      \n> All emails are validated for format prior to entry into the system.",
            "example": "support@sevenrooms.com",
            "type": "string"
          },
          "phone_number": {
            "description": "Phone number associated with the Reservation.      \n> Can be numerous valid formats, including international phone      \nnumbers. US phone numbers generally follow      \n1-xxx-xxx-xxxx.",
            "example": "1-555-555-5555",
            "type": "string"
          },
          "phone_number_locale": {
            "description": "The locale of the Client's primary phone number.",
            "example": "US",
            "type": "string"
          },
          "title": {
            "description": "Client Profile: Title",
            "type": "string"
          },
          "company": {
            "description": "Client Profile: Company",
            "type": "string"
          },
          "gender": {
            "description": "Client Profile: Gender",
            "type": "string"
          },
          "birthday_day": {
            "description": "Client Profile: Birthday day of month",
            "type": "string"
          },
          "address": {
            "description": "Client Profile: Address first line",
            "type": "string"
          },
          "address_2": {
            "description": "Client Profile: Address second line",
            "type": "string"
          },
          "city": {
            "description": "Client Profile: City",
            "type": "string"
          },
          "state": {
            "description": "Client Profile: State or province",
            "type": "string"
          },
          "postal_code": {
            "description": "Client Profile: Postal code",
            "type": "string"
          },
          "country": {
            "description": "Client Profile: Country",
            "type": "string"
          },
          "external_user_id": {
            "description": "Third party User ID stored on the Client profile.      \n\n> You may associate an external user account with a Client in the SevenRooms database. If the associated client for the Reservation has an `external_user_id` then that value will be returned here.",
            "example": 55602,
            "type": "string"
          },
          "loyalty_id": {
            "example": "`loyalty_id` value from the Client entity associated with the Reservation.",
            "type": "string"
          },
          "loyalty_tier": {
            "description": "`loyalty_tier` value from the Client entity associated with the Reservation.",
            "type": "string"
          },
          "loyalty_rank": {
            "example": "`loyalty_rank` value from the Client entity.",
            "type": "integer"
          },
          "anniversary": {
            "description": "Client Profile: Anniversary",
            "type": "string"
          },
          "email_alt": {
            "description": "The Client's seecondary email address.",
            "example": "john.doe@yahoo.com",
            "type": "string"
          },
          "birthday_month": {
            "description": "Client Profile: Birthday Month",
            "type": "string"
          },
          "phone_number_alt": {
            "description": "The Client's alternate phone number (In `E-164` format).",
            "example": 12125556789,
            "type": "string"
          },
          "phone_number_alt_locale": {
            "description": "The locale of the Client's alternate phone number.",
            "example": "AU",
            "type": "string"
          },
          "venue_group_marketing_opt_in": {
            "description": "Opt-in or opt-out a guest at the venue group level",
            "type": "boolean"
          },
          "venue_marketing_opt_in": {
            "description": "Opt-in or opt-out a guest at the venue level. This value does not need to be set if `venue_group_marketing_opt_in` is provided.",
            "type": "boolean"
          },
          "venue_id": {
            "description": "Required when setting the `venue_marketing_opt_in`. The value should be the ID of the venue for which to update the marketing opt in status.",
            "type": "string"
          },
          "photo": {
            "type": "string",
            "description": "Photo encoded as base64 string. Example: `data:image/png;base64, base64verylongstring...`"
          },
          "photo_crop_info": {
            "type": "string",
            "description": "JSON-encoded object with crop information. Must contain following integer fields: x, y, width, height. Example: `{\"width\": 120, \"height\": 120, \"x\": 0, \"y\": 0}`"
          }
        },
        "required": [
          "first_name",
          "last_name"
        ]
      },
      "RemoveSingleClientData_body": {
        "properties": {
          "include_reservations": {
            "type": "boolean",
            "default": "True",
            "example": true,
            "description": "Remove reservations associated with a specific client profile"
          },
          "remove_notes": {
            "type": "boolean",
            "default": "False",
            "example": false,
            "description": "Remove \"notes\" associated with a specific client profile"
          }
        }
      },
      "CreateWaitlistEntry_body": {
        "properties": {
          "venue_id": {
            "description": "Unique identifier of the venue.",
            "type": "string"
          },
          "first_name": {
            "description": "The Client's first name.",
            "example": "John",
            "type": "string"
          },
          "last_name": {
            "example": "Last name of the Client booking the Reservation.",
            "type": "string"
          },
          "phone_number": {
            "description": "Phone number associated with the Reservation.      \n> Can be numerous valid formats, including international phone      \nnumbers. US phone numbers generally follow      \n1-xxx-xxx-xxxx.",
            "example": "1-555-555-5555",
            "type": "string"
          },
          "phone_number_locale": {
            "description": "The locale of the Client's primary phone number.",
            "example": "US",
            "type": "string"
          },
          "email": {
            "description": "Email associated with the Reservation.      \n> All emails are validated for format prior to entry into the system.",
            "example": "support@sevenrooms.com",
            "type": "string"
          },
          "party_size": {
            "type": "integer",
            "minimum": 1,
            "description": "Party size"
          },
          "shift_persistent_id": {
            "description": "Unique identifier of the Shift belonging to this Reservation.      \n> Concatenation of:      \n> - Venue ID      \n> - Shift Category      \n> - Timestamp when shift was created      \n>       \n> Note that Venue ID may contain dashes.",
            "example": "ahNzfnNldmVu2dsasg- DINNER-1443199242.75",
            "type": "string"
          },
          "quoted_wait_time": {
            "type": "integer"
          },
          "venue_marketing_opt_in": {
            "type": "string",
            "description": "Venue marketing opt-in status for the guest of this Waitlist Entry.",
            "enum": [
              "True",
              "False"
            ]
          },
          "venue_group_marketing_opt_in": {
            "type": "string",
            "description": "Venue Group marketing opt-in status for the guest of this Waitlist Entry.",
            "enum": [
              "True",
              "False"
            ]
          },
          "max_wait_time": {
            "type": "integer",
            "description": "Maximum amount of quote time for a valid entry (in minutes). If the best quote time is more than this value, booking will fail with 40X error."
          },
          "waitlist_hold_id": {
            "type": "string",
            "description": "Unique identifier for the booked waitlist hold"
          },
          "access_persistent_id": {
            "type": "string",
            "description": "Unique identifier for access as a result of the availability call for the given time slot.      \n\nAccess persistent ID from result of availability call for given time slot."
          },
          "notes": {
            "description": "Internal, Venue facing notes for the Reservation.",
            "type": "string"
          },
          "status": {
            "type": "string",
            "description": "Status of the waitlist entry. Options are 'Joined Online' (default), 'Waiting', 'Awaiting Confirmation', 'Table Ready', 'Confirmed', 'Canceled', 'Arrived', 'Removed', 'No Show'"
          }
        },
        "required": [
          "venue_id",
          "first_name",
          "last_name",
          "phone_number",
          "phone_number_locale",
          "party_size",
          "shift_persistent_id"
        ]
      },
      "UpdateWaitlistEntry_body": {
        "properties": {
          "venue_id": {
            "description": "Unique identifier of the venue.",
            "type": "string"
          },
          "first_name": {
            "description": "The Client's first name.",
            "example": "John",
            "type": "string"
          },
          "last_name": {
            "example": "Last name of the Client booking the Reservation.",
            "type": "string"
          },
          "phone_number": {
            "description": "Phone number associated with the Reservation.      \n> Can be numerous valid formats, including international phone      \nnumbers. US phone numbers generally follow      \n1-xxx-xxx-xxxx.",
            "example": "1-555-555-5555",
            "type": "string"
          },
          "phone_number_locale": {
            "description": "The locale of the Client's primary phone number.",
            "example": "US",
            "type": "string"
          },
          "email": {
            "description": "Email associated with the Reservation.      \n> All emails are validated for format prior to entry into the system.",
            "example": "support@sevenrooms.com",
            "type": "string"
          },
          "client_location": {
            "type": "string",
            "description": "Location of the client"
          },
          "status": {
            "type": "string",
            "description": "Status of the waitlist entry. Options are 'Joined Online' (default), 'Waiting', 'Awaiting Confirmation', 'Table Ready', 'Confirmed', 'Canceled', 'Arrived', 'Removed', 'No Show'"
          },
          "party_size": {
            "type": "integer",
            "minimum": 1,
            "description": "Party size"
          },
          "sort_order": {
            "type": "number"
          }
        }
      },
      "CreateWaitlistHold_body": {
        "properties": {
          "venue_id": {
            "description": "Unique identifier of the venue.",
            "type": "string"
          },
          "party_size": {
            "type": "integer",
            "minimum": 1,
            "description": "Party size"
          },
          "shift_persistent_id": {
            "description": "Unique identifier of the Shift belonging to this Reservation.      \n> Concatenation of:      \n> - Venue ID      \n> - Shift Category      \n> - Timestamp when shift was created      \n>       \n> Note that Venue ID may contain dashes.",
            "example": "ahNzfnNldmVu2dsasg- DINNER-1443199242.75",
            "type": "string"
          },
          "hold_wait_time_sec": {
            "type": "integer",
            "description": "Amount of time, in seconds, until the waitlist hold expires. Default is 300.",
            "minimum": 1
          },
          "access_persistent_id": {
            "type": "string",
            "description": "Unique identifier for access as a result of the availability call for the given time slot.      \n\nAccess persistent ID from result of availability call for given time slot."
          },
          "max_wait_time": {
            "type": "integer",
            "description": "Maximum amount of quote time for a valid entry (in minutes). If the best quote time is more than this value, booking will fail with 40X error."
          }
        },
        "required": [
          "venue_id",
          "party_size",
          "shift_persistent_id"
        ]
      },
      "DeleteWaitlistHold_body": {
        "properties": {
          "venue_id": {
            "description": "Unique identifier of the venue.",
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Date in ISO 8601 format"
          },
          "shift_persistent_id": {
            "description": "Unique identifier of the Shift belonging to this Reservation.      \n> Concatenation of:      \n> - Venue ID      \n> - Shift Category      \n> - Timestamp when shift was created      \n>       \n> Note that Venue ID may contain dashes.",
            "example": "ahNzfnNldmVu2dsasg- DINNER-1443199242.75",
            "type": "string"
          }
        },
        "required": [
          "venue_id",
          "date",
          "shift_persistent_id"
        ]
      },
      "CreateTable_body": {
        "properties": {
          "party_size_min": {
            "type": "integer"
          },
          "party_size_max": {
            "type": "integer"
          },
          "table_number": {
            "type": "string"
          },
          "seating_area_id": {
            "type": "string",
            "description": "Table's seating area id"
          }
        },
        "required": [
          "party_size_min",
          "party_size_max",
          "table_number"
        ]
      },
      "CreateEventBooking_body": {
        "properties": {
          "inventory_id": {
            "type": "string",
            "description": "Event inventory ID. Find event inventory IDs in the Get Events response."
          },
          "quantity": {
            "type": "integer",
            "description": "Party size or number of tickets for the event booking"
          },
          "first_name": {
            "description": "The Client's first name.",
            "example": "John",
            "type": "string"
          },
          "last_name": {
            "example": "Last name of the Client booking the Reservation.",
            "type": "string"
          },
          "phone": {
            "type": "string",
            "description": "Phone number of the Client in [E-164 format](https://en.wikipedia.org/wiki/E.164). For more information on this attribute please find our guide [here](https://api-docs.sevenrooms.com/developer-portal/phone-number-guide/)."
          },
          "phone_number_locale": {
            "description": "The locale of the Client's primary phone number.",
            "example": "US",
            "type": "string"
          },
          "email": {
            "description": "Email associated with the Reservation.      \n> All emails are validated for format prior to entry into the system.",
            "example": "support@sevenrooms.com",
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Date in ISO 8601 format"
          },
          "time": {
            "type": "string",
            "description": "Reservation time"
          },
          "experience_id": {
            "type": "string"
          },
          "notes": {
            "description": "Internal, Venue facing notes for the Reservation.",
            "type": "string"
          },
          "tags": {
            "type": "array"
          },
          "birthday": {
            "type": "string",
            "description": "Date in `YYYY-MM-DD` format."
          },
          "client_id": {
            "description": "Unique identifier of the Client profile",
            "type": "string"
          },
          "send_client_email": {
            "type": "boolean",
            "description": "Boolean field used to send the client an email confirmation",
            "default": true
          },
          "reservation_sms_opt_in": {
            "description": "Show opt-in for receiving SMS about reservations",
            "type": "boolean"
          },
          "send_reminder_email": {
            "description": "If True, an email is sent to remind the guest of their reservation.",
            "type": "boolean"
          },
          "send_reminder_sms": {
            "description": "If True, a SMS is sent to remind the guest of their reservation.",
            "type": "boolean"
          },
          "venue_group_marketing_opt_in": {
            "description": "Opt-in or opt-out a guest at the venue group level",
            "type": "boolean"
          },
          "venue_marketing_opt_in": {
            "description": "Opt-in or opt-out a guest at the venue level. This value does not need to be set if `venue_group_marketing_opt_in` is provided.",
            "type": "boolean"
          },
          "bypass_required_contact_fields": {
            "type": "boolean",
            "default": false,
            "description": "**Note: Defaults to true if bypass_availability set to true.**      \n\n> If **True**, skips the validation for the venue settings of **\"When reservations are booked, require certain fields to be entered.\"**"
          },
          "mf_ratio_male": {
            "description": "Number of males expected for the Reservation.",
            "example": 2,
            "type": "integer"
          },
          "mf_ratio_female": {
            "description": "Number of females expected for the Reservation.",
            "example": 2,
            "type": "integer"
          },
          "client_tags_to_add": {
            "type": "string",
            "description": "Comma-delimited list of tags in `Tag Group:Tag Name` format"
          },
          "client_tags_to_remove": {
            "type": "string",
            "description": "Comma-delimited list of tags in `Tag Group:Tag Name` format"
          }
        },
        "required": [
          "inventory_id",
          "quantity",
          "first_name",
          "last_name",
          "phone"
        ]
      },
      "BeginPayment_body": {
        "properties": {
          "amount": {
            "type": "integer",
            "description": "The total amount in cents. Example: 200"
          }
        },
        "required": [
          "amount"
        ]
      },
      "CalculatePrices_body": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "description": "Date in ISO 8601 format"
          },
          "time": {
            "type": "string",
            "format": "time",
            "description": "Reservation time"
          },
          "party_size": {
            "type": "integer",
            "minimum": 1,
            "description": "Party size"
          },
          "access_persistent_id": {
            "type": "string",
            "description": "Unique identifier for access as a result of the availability call for the given time slot.      \n\nAccess persistent ID from result of availability call for given time slot."
          },
          "upsells": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "upsell_id": {
                  "type": "string"
                },
                "quantity": {
                  "type": "integer",
                  "minimum": 1
                }
              }
            },
            "default": []
          }
        },
        "required": [
          "date",
          "time",
          "party_size",
          "access_persistent_id"
        ]
      },
      "CreatePaylink_body": {
        "properties": {
          "subtotal": {
            "type": "integer"
          },
          "service_charge_amount": {
            "type": "integer"
          },
          "tax_amount": {
            "type": "integer"
          },
          "gratuity_amount": {
            "type": "integer"
          },
          "gratuity_type": {
            "type": "string",
            "enum": [
              "gratuity_percentage",
              "none",
              "require_client_select_charge",
              "client_select_gratuity"
            ]
          },
          "note_to_guest": {
            "type": "string"
          },
          "paylink_auto_cancel_minutes": {
            "type": "integer"
          },
          "type": {
            "type": "string",
            "enum": [
              "charge",
              "collect"
            ]
          },
          "paylink_email_request": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "UpdateOrder_body": {
        "properties": {
          "date": {
            "type": "string"
          },
          "time": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "address_2": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "order_type": {
            "type": "string",
            "enum": [
              "DELIVERY",
              "PICKUP",
              "ON_PREMISE",
              "ROOM_SERVICE",
              "PRE_ORDER"
            ]
          },
          "order_status": {
            "type": "string",
            "enum": [
              "QUEUED",
              "OPEN",
              "CLOSED",
              "VOID",
              "FAILED_INJECTION",
              "WORKING_ON_ORDER",
              "READY_PICKUP",
              "READY_DRIVER",
              "WITH_DRIVER"
            ]
          }
        }
      },
      "CreateOrder_body": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "time": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "address_2": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "order_type": {
            "type": "string",
            "enum": [
              "DELIVERY",
              "PICKUP",
              "ON_PREMISE",
              "ROOM_SERVICE",
              "PRE_ORDER"
            ]
          },
          "order_status": {
            "type": "string",
            "enum": [
              "QUEUED",
              "OPEN",
              "CLOSED",
              "VOID",
              "FAILED_INJECTION",
              "WORKING_ON_ORDER",
              "READY_PICKUP",
              "READY_DRIVER",
              "WITH_DRIVER"
            ]
          },
          "external_id": {
            "type": "string"
          },
          "external_venue_id": {
            "type": "string"
          },
          "order_number": {
            "type": "string"
          }
        },
        "required": [
          "date",
          "first_name",
          "last_name",
          "email",
          "phone_number",
          "address",
          "postal_code",
          "order_type",
          "order_status",
          "external_id",
          "external_venue_id",
          "order_number"
        ]
      },
      "ImportOrders_body": {
        "properties": {
          "orders": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "format": "date"
                },
                "time": {
                  "type": "string"
                },
                "first_name": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "phone_number": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "address_2": {
                  "type": "string"
                },
                "postal_code": {
                  "type": "string"
                },
                "order_type": {
                  "type": "string",
                  "enum": [
                    "DELIVERY",
                    "PICKUP",
                    "ON_PREMISE",
                    "ROOM_SERVICE",
                    "PRE_ORDER"
                  ]
                },
                "order_status": {
                  "type": "string",
                  "enum": [
                    "QUEUED",
                    "OPEN",
                    "CLOSED",
                    "VOID",
                    "FAILED_INJECTION",
                    "WORKING_ON_ORDER",
                    "READY_PICKUP",
                    "READY_DRIVER",
                    "WITH_DRIVER"
                  ]
                },
                "external_id": {
                  "type": "string"
                },
                "external_venue_id": {
                  "type": "string"
                },
                "order_number": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "orders"
        ]
      }
    },
    "parameters": {
      "path": {
        "description": "Unique identifier for the Venue.",
        "name": "venue_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "query_required": {
        "name": "date",
        "in": "query",
        "description": "Date in YYYY-MM-DD format",
        "required": true,
        "schema": {
          "type": "string",
          "format": "date"
        }
      },
      "slot_start_time_query_required": {
        "name": "start_time",
        "description": "Search for reservations no earlier than this time",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "slot_end_time_query_required": {
        "name": "end_time",
        "description": "Search for reservations no later than this time",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "party_size_query_required": {
        "in": "query",
        "name": "party_size",
        "description": "Number of people for a reservation",
        "required": true,
        "schema": {
          "type": "integer",
          "minimum": 1
        }
      },
      "query_optional": {
        "name": "duration",
        "in": "query",
        "description": "Duration of reservation in minutes. If no duration is provided, the default duration for the party size configured on the backend will be used.",
        "schema": {
          "type": "integer"
        }
      },
      "table_query_optional": {
        "name": "table",
        "in": "query",
        "description": "Table number (if a table combination, comma-delimited).",
        "schema": {
          "type": "string"
        }
      },
      "prev_reservation_hold_id_query_optional": {
        "name": "reservation_hold_id",
        "in": "query",
        "description": "GUID of previously booked reservation hold. This hold is discarded when calculating availability (as if it never existed).",
        "schema": {
          "type": "string"
        }
      },
      "prev_reservation_id_query_optional": {
        "name": "reservation_id",
        "in": "query",
        "description": "Unique identifier of the previously booked Reservation. This hold is discarded when calculating availability (as if it never existed).",
        "schema": {
          "type": "string"
        }
      },
      "include_payments_by_paylink_query_optional": {
        "in": "query",
        "name": "include_one_time_guest",
        "description": "When true, availability includes paid timeslots for payment gateways that are not Stripe.",
        "schema": {
          "type": "boolean"
        }
      },
      "venue_group_id_query_optional": {
        "description": "Unique identifier for the Venue Group.",
        "name": "venue_group_id",
        "in": "query",
        "schema": {
          "type": "string"
        }
      },
      "limit_query_optional": {
        "name": "limit",
        "in": "query",
        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 400, and the default is 30.",
        "schema": {
          "type": "number",
          "maximum": 400,
          "minimum": 1
        }
      },
      "cursor_query_optional": {
        "name": "cursor",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "The `cursor` field can be used to get multiple pages based on the limit (max of 400). If there are more than the limit of results then the response will include the field `cursor`. \n\nThe subsequent call will include the cursor field and SevenRooms responds with the next iteration of results and so on."
      },
      "active_query_optional": {
        "in": "query",
        "name": "active",
        "description": "Use this parameter to filter venues within the Venue Group based on their \"Active/Inactive\" status in SevenRooms. \n\nWhen set to \"`true`\" this endpoint retrieves **only** active venues, which, by definition, are actively performing VMS operations. \n\nAdditionally, when \"`true`\" inactive venues are excluded from the results as they no longer engage in VMS operations.\n",
        "schema": {
          "type": "boolean",
          "default": false
        }
      },
      "reservation_id_reference_code_path": {
        "name": "reservation_id",
        "description": "Unique identifier of the Reservation.\n\n**Note:** The Reservation's `reference_code` can be used in place of the Reservation's `id`.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "show_auto_assignments_query_optional": {
        "description": "Display the table numbers that were auto-assigned for this reservation.",
        "name": "show_auto_assignments",
        "in": "query",
        "schema": {
          "type": "boolean"
        }
      },
      "show_problems_query_optional": {
        "description": "Display the problems that may exist for this reservation.",
        "name": "show_problems",
        "in": "query",
        "schema": {
          "type": "boolean"
        }
      },
      "save_partial_query_optional": {
        "description": "If set to True, will save all reservations that are correct and will return the ID and reason why some reservations were not able to update",
        "name": "save_partial",
        "in": "query",
        "schema": {
          "type": "boolean",
          "default": true
        }
      },
      "venue_group_id_path": {
        "description": "Unique identifier for the Venue Group.",
        "name": "venue_group_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "municipality_id_query_optional": {
        "name": "municipality_id",
        "description": "Unique identifier of the Municipality to search for Availability within.",
        "in": "query",
        "schema": {
          "type": "string"
        }
      },
      "reservation_hold_id_path": {
        "description": "Unique identifier of the previously booked Reservation Hold.",
        "name": "reservation_hold_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "request_id_path": {
        "description": "Unique identifier of the Reservation Request",
        "name": "request_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "venue_id_multi_query_optional": {
        "in": "query",
        "name": "venue_id",
        "description": "Comma-delimited string of unique identifiers for each Venue.",
        "schema": {
          "type": "string"
        }
      },
      "search_limit_query_optional": {
        "name": "limit",
        "in": "query",
        "description": "A limit on the number of objects to be returned. Limit can range between 1 and 400, and the default is 30. A maximum of 4000 objects can be paginated from the Search endpoint in a single sequence of pagination requests. If more objects are required, please use the corresponding entity's Exports endpoint.",
        "schema": {
          "type": "integer",
          "maximum": 400,
          "minimum": 1,
          "default": 30
        }
      },
      "external_user_id_query_optional": {
        "name": "external_user_id",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Unique identifier of an account in an external system which may be associated with the Client's profile\n\n> Note: This field is not validated in our system as a foreign key it is simply searchable and updatable via our API"
      },
      "client_id_res_filter_query_optional": {
        "description": "Unique identifier of the Client for filtering results to only their Reservations.",
        "name": "client_id",
        "in": "query",
        "schema": {
          "type": "string"
        }
      },
      "reservation_reference_code_query_optional": {
        "description": "Unique identifier for a reservation at the venue, unique at the Venue Level. (Interchangeable with the `reservation_id` when querying) You are able to configure a venue-specific Prefix for this reference code",
        "name": "reference_code",
        "in": "query",
        "schema": {
          "type": "string"
        }
      },
      "external_reference_code_query_optional": {
        "description": "Similar to `external_id`, field acts as a foreign key for a reservation id for querying and search purposes",
        "name": "external_reference_code",
        "in": "query",
        "schema": {
          "type": "string"
        }
      },
      "from_date_query_optional": {
        "in": "query",
        "name": "from_date",
        "description": "Beginning date for date range filtering",
        "schema": {
          "type": "string",
          "format": "date"
        }
      },
      "to_date_query_optional": {
        "in": "query",
        "name": "to_date",
        "description": "End date for date range filtering",
        "schema": {
          "type": "string",
          "format": "date"
        }
      },
      "reservation_updated_since_query_optional": {
        "description": "Timestamp of the last time the Reservation was updated.",
        "name": "updated_since",
        "in": "query",
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "shift_category_query_optional": {
        "name": "shift_category",
        "in": "query",
        "description": "Category of the shift for the reservation time slot  \n**Only supported for single day queries**\n> `DAY`, `BREAKFAST`, `BRUNCH`, `LUNCH`, `DINNER`",
        "schema": {
          "type": "string"
        }
      },
      "name_query_optional": {
        "name": "name",
        "in": "query",
        "description": "Full name of the Client.",
        "schema": {
          "type": "string"
        }
      },
      "phone_query_optional": {
        "name": "phone",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Phone number of the Client in [E-164 format](https://en.wikipedia.org/wiki/E.164). For more information on this attribute please find our guide [here](https://api-docs.sevenrooms.com/developer-portal/phone-number-guide/)."
      },
      "email_query_optional": {
        "name": "email",
        "in": "query",
        "description": "Client's email",
        "schema": {
          "type": "string",
          "format": "email"
        }
      },
      "birthday_start_query_optional": {
        "in": "query",
        "name": "birthday_start",
        "description": "Birthday start date",
        "schema": {
          "type": "string",
          "format": "date"
        }
      },
      "birthday_end_query_optional": {
        "in": "query",
        "name": "birthday_end",
        "description": "Birthday end date",
        "schema": {
          "type": "string",
          "format": "date"
        }
      },
      "reservation_status_query_optional": {
        "in": "query",
        "name": "status",
        "description": "Status for this Reservation. `CANCELED` and `NO_ENTRY` are protected statuses and must be updated via a separate endpoint or via the SevenRooms client applications. As statuses can be customized on a per Venue basis, please consult with your SevenRooms support team to determine which statuses are valid for your application. See more Reservation statuses [here](https://api-docs.sevenrooms.com/developer-portal/reservation-statuses/).",
        "schema": {
          "type": "string"
        }
      },
      "external_id_query_optional": {
        "in": "query",
        "name": "external_id",
        "description": "Unique identifier of a Reservation placed through a third party.\n> You may specify your own identifiers for Reservations that you book via the API for various reference purposes in your own systems.",
        "schema": {
          "type": "string"
        }
      },
      "reservation_sort_order_query_optional": {
        "in": "query",
        "name": "sort_order",
        "schema": {
          "type": "string",
          "enum": [
            "name_ascending",
            "name_descending",
            "visits_ascending",
            "visits_descending",
            "spend_ascending",
            "spend_descending"
          ]
        }
      },
      "client_id_path": {
        "description": "Unique identifier of the Client profile",
        "name": "client_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "venue_id_client_query_optional": {
        "in": "query",
        "name": "venue_id",
        "description": "GUID of the venue where this client was last booked",
        "schema": {
          "type": "string"
        }
      },
      "contact_type_query_optional": {
        "in": "query",
        "name": "contact_type",
        "schema": {
          "type": "string",
          "enum": [
            "has_email",
            "has_phone",
            "has_email_or_phone",
            "has_none",
            "no_email",
            "no_phone"
          ]
        }
      },
      "client_tags_query_optional": {
        "in": "query",
        "name": "tags",
        "description": "Comma-delimited list of client tags",
        "schema": {
          "type": "string"
        }
      },
      "client_sort_order_query_optional": {
        "in": "query",
        "name": "sort_order",
        "schema": {
          "type": "string"
        },
        "description": "Value by which to sort response objects.\n\n>`last_updated_ascending` - Results sorted by last updated in ascending order (oldest first)\n\n>`last_updated_descending` - Results sorted by last updated in descending order (most recent first)\n\n>`name_lower_last_first` - Results sorted by last name first (A-Z a-z)\n\n>`-name_lower_last_first` - Results sorted by last name first descending (Z-A) <br> *Please Note: Last names beginning with lower case letters will be present after names beginning with \"Z\", so these names will be present first in this sort order. (z-a Z-A)* \n\n>`date` - Results sorted by date ascending\n\n>`-date` - Results sorted by date descending\n\n>`final_bill` - Results sorted by lowest `total_net_payment`\n\n>`-final_bill` - Results sorted by highest `total_net_payment`\n"
      },
      "has_loyalty_id_query_optional": {
        "in": "query",
        "name": "has_loyalty_id",
        "description": "If true, return all records with a loyalty ID",
        "schema": {
          "type": "boolean"
        }
      },
      "loyalty_id_query_optional": {
        "in": "query",
        "name": "loyalty_id",
        "schema": {
          "type": "string"
        },
        "description": "An optional ID used to identify a client based on an external customer loyalty system\n\n> Note this field is not validated in our system as a foreign key it is simply searchable and updatable via our API\n    "
      },
      "loyalty_tier_query_optional": {
        "in": "query",
        "name": "loyalty_tier",
        "description": "An optional field used to identify a client's loyalty tier based on an external customer loyalty system",
        "schema": {
          "type": "string"
        }
      },
      "loyalty_rank_min_query_optional": {
        "in": "query",
        "name": "loyalty_rank_min",
        "description": "Returns clients with x minumum rank for loyalty tier",
        "schema": {
          "type": "integer"
        }
      },
      "loyalty_rank_max_query_optional": {
        "in": "query",
        "name": "loyalty_rank_max",
        "description": "Returns clients with x maximum rank for loyalty tier",
        "schema": {
          "type": "integer"
        }
      },
      "updated_since_query_optional": {
        "in": "query",
        "name": "updated_since",
        "description": "Timestamp of the last time the Client was updated.",
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "include_one_time_guest_query_optional": {
        "in": "query",
        "name": "include_one_time_guest",
        "description": "Flag to include clients that are classified as one-time guests",
        "schema": {
          "type": "boolean"
        }
      },
      "reservation_id_query_optional": {
        "name": "reservation_id",
        "description": "Unique identifier of the reservation",
        "in": "query",
        "schema": {
          "type": "string"
        }
      },
      "from_reservation_date_query_optional": {
        "name": "from_date",
        "in": "query",
        "description": "The `from_date` is the beginning date for the data range for filtering the query based on the reservation date",
        "schema": {
          "type": "string",
          "format": "date"
        }
      },
      "to_reservation_date_query_optional": {
        "name": "to_date",
        "in": "query",
        "description": "The `to_date` is the ending date for the data range for filtering the query based on the reservation date",
        "schema": {
          "type": "string",
          "format": "date"
        }
      },
      "transaction_type_query_optional": {
        "in": "query",
        "name": "transaction_type",
        "schema": {
          "type": "string",
          "enum": [
            "transaction_type_web",
            "transaction_type_internal",
            "transaction_type_subscription",
            "transaction_type_info",
            "transaction_type_request_removed",
            "transaction_type_request_fulfilled",
            "transaction_type_refund",
            "transaction_type_save",
            "transaction_type_remove"
          ]
        }
      },
      "charge_status_query_optional": {
        "in": "query",
        "name": "status",
        "schema": {
          "type": "string",
          "enum": [
            "status_succeeded",
            "status_failed"
          ]
        }
      },
      "non_zero_query_optional": {
        "in": "query",
        "name": "non_zero",
        "description": "If true, only show charges that have a value (not zero)",
        "schema": {
          "type": "boolean"
        }
      },
      "start_date_query_required": {
        "in": "query",
        "name": "start_date",
        "required": true,
        "description": "Start date for query",
        "schema": {
          "type": "string",
          "format": "date"
        }
      },
      "end_date_query_required": {
        "in": "query",
        "name": "end_date",
        "required": true,
        "description": "End date for query",
        "schema": {
          "type": "string",
          "format": "date"
        }
      },
      "feedback_start_date_query_required": {
        "in": "query",
        "name": "end_date",
        "required": true,
        "description": "End date for querying Reservation Feedback based on when the reservation is created",
        "schema": {
          "type": "string",
          "format": "date"
        }
      },
      "feedback_end_date_query_required": {
        "in": "query",
        "name": "start_date",
        "required": true,
        "description": "Start date for querying Reservation Feedback based on when the reservation is created",
        "schema": {
          "type": "string",
          "format": "date"
        }
      },
      "venue_id_multi_query_required": {
        "in": "query",
        "name": "venue_id",
        "description": "Comma-delimited string of unique identifiers for each Venue.",
        "schema": {
          "type": "string"
        },
        "required": true
      },
      "party_size_min_query_optional": {
        "in": "query",
        "name": "party_size_min",
        "description": "Minimum allowed party size",
        "schema": {
          "type": "integer",
          "default": 1
        }
      },
      "party_size_max_query_optional": {
        "in": "query",
        "name": "party_size_max",
        "description": "Maximum allowed party size",
        "schema": {
          "type": "integer",
          "default": 10
        }
      },
      "access_persistent_id_query_optional": {
        "in": "query",
        "name": "access_persistent_id",
        "description": "Unique identifier for access as a result of the availability call for the given time slot.\n\n`access_persistent_id` from result of availability call for given time slot.",
        "schema": {
          "type": "string"
        }
      },
      "waitlist_entry_id_path": {
        "in": "path",
        "name": "waitlist_entry_id",
        "required": true,
        "description": "`waitlist_hold_id`\n\nUnique identifier for a successfully created waitlist hold'",
        "schema": {
          "type": "string"
        }
      },
      "waitlist_hold_id_path": {
        "in": "path",
        "name": "waitlist_hold_id",
        "required": true,
        "description": "`waitlist_hold_id`\n\nUnique identifier for a successfully created waitlist hold'",
        "schema": {
          "type": "string"
        }
      },
      "upgrade_category_id_path": {
        "description": "Unique identifier of the Upgrade Category",
        "name": "upgrade_category_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "venue_id_query_required": {
        "description": "Unique identifier for the Venue.",
        "name": "venue_id",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "upgrade_category_path": {
        "description": "Unique identifier of the Upgrade Category",
        "name": "upgrade_category",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "upgrade_id_path": {
        "description": "Unique identifier of the Upgrade",
        "name": "upgrade_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "start_date_query_optional": {
        "in": "query",
        "name": "start_date",
        "description": "Start date for query",
        "schema": {
          "type": "string",
          "format": "date"
        }
      },
      "end_date_query_optional": {
        "in": "query",
        "name": "end_date",
        "description": "End date for query",
        "schema": {
          "type": "string",
          "format": "date"
        }
      },
      "event_id_path": {
        "description": "Unique identifier of the Event",
        "name": "event_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    }
  },
  "x-original-swagger-version": "2.0"
}