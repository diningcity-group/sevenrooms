{
  "openapi": "3.0.0",
  "info": {
    "title": "SevenRooms Concierge API",
    "description": "# Introduction\nThe SevenRooms Concierge API is a RESTful API over HTTPS that utilizes JSON as the data response format. It allows application developers to query for data and perform actions, such as booking a reservation.\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->",
    "contact": {
      "name": "SevenRooms Support by Email",
      "email": "support@sevenrooms.com"
    },
    "termsOfService": "https://sevenrooms.com/en/terms-of-service",
    "license": {
      "name": "SevenRooms"
    },
    "version": "2.4"
  },
  "servers": [
    {
      "url": "https://demo.sevenrooms.com/api-ext/2_4",
      "description": "Demo"
    },
    {
      "url": "https://api.sevenrooms.com/2_4",
      "description": "US Production"
    },
    {
      "url": "https://api.eu.sevenrooms.com/2_4",
      "description": "EU Production"
    }
  ],
  "security": [
    {
      "ExternalAPIKeySecurity": []
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth Tags"
    },
    {
      "name": "Venues",
      "description": "Venue Tags"
    },
    {
      "name": "Availability",
      "description": "Availability Tags"
    },
    {
      "name": "Reservation Holds",
      "description": "Reservation Hold Tags"
    },
    {
      "name": "Reservation Requests",
      "description": "Reservation Request Tags"
    },
    {
      "name": "Reservations",
      "description": "Reservation Tags"
    },
    {
      "name": "Tags",
      "description": "Tag Tags"
    },
    {
      "name": "Experiences",
      "description": "Experience Tags"
    },
    {
      "name": "Charges",
      "description": "Charges Tags"
    },
    {
      "name": "Municipalities",
      "description": "Municipalities Tags"
    },
    {
      "name": "Perks",
      "description": "Perks Tags"
    },
    {
      "name": "Payments",
      "description": "Payments Tags"
    },
    {
      "name": "Paylinks",
      "description": "Paylinks"
    },
    {
      "name": "Upgrade Categories",
      "description": "Upgrade Category Tags"
    },
    {
      "name": "Upgrades",
      "description": "Upgrade Tags"
    }
  ],
  "paths": {
    "/auth": {
      "post": {
        "operationId": "create_auth_token",
        "security": [],
        "summary": "Create an API Authorization Token",
        "description": "Create an API Authorization Token for making requests to the SevenRooms Reservations API.",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "JSON object containing an Authorization token that expires after 24 hours.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AuthorizationResponse",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "msg": {
                      "description": "Human‚Äêreadable message describing the response status.",
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "description": "Authentication token required to fulfill requests. Expires after 24 hours.",
                          "type": "string"
                        },
                        "token_expiration_datetime": {
                          "description": "Date/Time when the token will expire",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "msg": "Successfully authenticated.",
                  "status": 200,
                  "data": {
                    "token": "e179b0a6a6b293ef36972864ab0401c234e6524dce80d9f7235c64758dd6a69cd8d5d10aa0868faf8dd487c87ed12a308bdbed5aedf0f18327ab1b63a4060bdd",
                    "token_expiration_datetime": "2023-08-01T14:20:38.874800"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/concierge/{concierge_id}/begin_payment": {
      "post": {
        "summary": "Begin Payment",
        "description": "The `/begin_payment` endpoint is used when a customer is in the middle of the booking process that requires a prepayment guarantee. The `/begin_payment` endpoint will create the PaymentIntent on Stripe and fetches the PaymentIntent id and client_secret to be used together with your Stripe Publishable Key on the  moment of generating the credit card form using the Stripe SDK.",
        "operationId": "begin_payment",
        "tags": [
          "Payments"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "concierge_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Concierge",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "venue_id",
            "in": "query",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BeginPayment_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Object containing the setup intent information.\n",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "client_secret": "pi_1Dathw2eZvKYlo2CstYe1U4i_secret_1sBwqYIUWjiYtUqzAG4loDHyq",
                    "intent_id": "pi_1Dathw2eZvKYlo2CstYe1U4i"
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "client_secret": {
                          "example": "pi_1Dathw2eZvKYlo2CstYe1U4i_secret_1sBwqYIUWjiYtUqzAG4loDHyq",
                          "type": "string"
                        },
                        "intent_id": {
                          "example": "pi_1Dathw2eZvKYlo2CstYe1U4i",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/concierge/{concierge_id}/begin_save": {
      "post": {
        "summary": "Begin Save",
        "description": "The `begin_save` endpoint is used when a booking requires a credit card guarantee (save cared for later). The `begin_save` is used to  create the SetupIntent on Stripe and fetches the SetupIntent id and client_secret to be used together with SevenRooms Stripe Publishable Key to be used generating the credit card form using the Stripe SDK.",
        "operationId": "begin_save_payment",
        "tags": [
          "Payments"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "concierge_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Concierge",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "venue_id",
            "in": "query",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object containing the setup intent information.\n",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "client_secret": "pi_1Dathw2eZvKYlo2CstYe1U4i_secret_1sBwqYIUWjiYtUqzAG4loDHyq",
                    "intent_id": "pi_1Dathw2eZvKYlo2CstYe1U4i"
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "client_secret": {
                          "example": "pi_1Dathw2eZvKYlo2CstYe1U4i_secret_1sBwqYIUWjiYtUqzAG4loDHyq",
                          "type": "string"
                        },
                        "intent_id": {
                          "example": "pi_1Dathw2eZvKYlo2CstYe1U4i",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/concierge/{concierge_id}/municipalities": {
      "get": {
        "summary": "List Concierge Municipalities",
        "operationId": "get_concierge_municipalities",
        "tags": [
          "Municipalities"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/path"
          }
        ],
        "responses": {
          "200": {
            "description": "An object containing all available **municipality_id** values and their associated Municipality names that a Concierge has venues in.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "GetConciergeMunicipalitiesResponse",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "[municipality_id]": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQhJao2AkM": "Istanbul",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQqdvynwgM": "Riverside County",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlchsLEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYAQw": "New York City",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDwhbfIoggM": "Portland",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQ6YjAuQgM": "National Harbor"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/municipalities": {
      "get": {
        "summary": "List all Municipalities",
        "operationId": "get_municipalities",
        "tags": [
          "Municipalities"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "responses": {
          "200": {
            "description": "An object containing all available **municipality_id** values and their associated Municipality names.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "GetMunicipalitiesResponse",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "[municipality_id]": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQhJao2AkM": "Istanbul",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQqdvynwgM": "Riverside County",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlchsLEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYAQw": "New York City",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDwhbfIoggM": "Portland",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQ6YjAuQgM": "National Harbor",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICghJv9ogsM": "Dallas",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDQ9Yjo-QoM": "Madrid",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQ6fWLgQoM": "Dublin",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDwvoCntwsM": "Alberta",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDI19HG6goM": "Acapulco",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlch4LEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkY1fmUAQw": "Tampa",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICwnpaIvQoM": "Monaco",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICIt9P97AoM": "Menton",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDAraiYggsM": "Cleveland",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDQ_ei57QkM": "Bangalore",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDw8Oi2ngoM": "Stamford",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDQ7KHU8wsM": "Frankfurt",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlch4LEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYruzQWgw": "Paris",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDQn9Ov6AkM": "Calgary",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICAgNPnhAoM": "Taipei",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDw8OiH1gsM": "Yonkers",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICAmNKyuwgM": "Southampton",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlch4LEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYiIqoBAw": "Sacramento",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlch4LEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYpYKZAQw": "San Diego",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICwzvujiQoM": "Barcelona",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDAze6LkwsM": "Detroit",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDI8anFnwgM": "Cancun",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDwlM_avwoM": "Charleston",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICw4_O9jgsM": "Perth",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICwsebLkQoM": "Newport",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDI-b7ZoAoM": "Noord",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICAgdnU0goM": "Toronto",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDg78Lj3QgM": "New Orleans",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICgiuWKxAsM": "Hong Kong",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQqen24woM": "Aspen",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDw8KnJhwgM": "Armonk",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDgrav3pAoM": "Burbank",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQqeHlrwgM": "Richmond",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICwy9LE5wsM": "Tucson",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDwwrnymwsM": "Bahamas",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICIlfWA0wkM": "Glendale",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDA_KuQrwsM": "Dubai",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICg8LSQ0QsM": "Singapore",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICw97GAmwgM": "La Barra",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQ6f_00QkM": "Lake Como",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICwrJfjzwgM": "Costa Mesa",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICI9sTJvgsM": "Chennai",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQ2dfkzwgM": "Honolulu",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDQxdPlwggM": "Verona",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICw2bWZpQoM": "Seattle",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDQ_YfeuQsM": "New Delhi",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQmfGVxwoM": "Baltimore",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICw5ZeriQsM": "Hollywood",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICg5eKxiQkM": "Doha",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDQvbD76gsM": "Mumbai",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICwza6j0woM": "Amsterdam",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICIkLL7twsM": "Burnaby",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDQ7Oz72gkM": "Shanghai",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDg9ojrsAkM": "Spain",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDgt_-rlAoM": "Bangkok",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICw-fjfsgkM": "Nashville",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICAzPHZ_QoM": "Montauk",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlch0LEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkY741RDA": "London",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQmdvz4woM": "Phoenix",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDA_rCK-gkM": "Atlanta",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlch0LEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkY6KR8DA": "Las Vegas",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICgromtywsM": "Pittsburgh",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICgnrCc5QsM": "Sarasota",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlch0LEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYn4g2DA": "Miami",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQmcqXsgoM": "Jacksonville",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDw97THtwsM": "Bedford",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDwkL3DxgsM": "Roslyn",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICAoOLC4goM": "Vancouver",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICwk_6UxAkM": "New Brunswick",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICw48W3vAgM": "Bernardsville",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlch4LEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYy8rxAgw": "Scottsdale",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDQvdyynAkM": "Kolkata",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDwiPDiigoM": "Rye Brook",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDAm53WtAoM": "New Jersey",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDw1KW7lwsM": "Modena",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICwzp2y7QoM": "Kuala Lumpur",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDg1Zic9AgM": "Ibiza",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDQ9p_SiAoM": "S√£o Paulo",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlch4LEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYy_W9CAw": "Atlantic City",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDg-IX5vAoM": "Sydney",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICg3pKutQkM": "Daytona Beach",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICwxaf5pQgM": "Brooklyn",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDIiYqT9wkM": "Monterrey",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDIwffImgkM": "Burlington",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDQuZLH5wkM": "Brisbane",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICw2dCHpgkM": "Kuwait",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQ6ZSrngkM": "Orange County",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQ2ZL2jwsM": "Plano",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDwn6H_lQkM": "Cherry Hill",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlch0LEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkY1aRxDA": "Boston",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlch0LEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYxtotDA": "Los Angeles",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDIx8f86goM": "Weston",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlch0LEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkY_sB4DA": "San Francisco",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICo_JPguQkM": "Cannes - CENTURION Pop-Up Only",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICgsOHgrQsM": "Newport",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICwn_qboQoM": "Lima",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICw5c_H-goM": "Helsinki",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDwsOTnrAgM": "Frisco",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQ6crH-QoM": "Columbus",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICw_5GMoggM": "Copenhagen",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDwoNL15ggM": "Nassau",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICAt6qXnwkM": "Denver",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQ2c6MzAsM": "Orlando",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDw9tz-hwsM": "Venice",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDw47SfsQoM": "Spokane",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQwqyzvwsM": "St. Barths",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDw_s3YmwkM": "Saudi Arabia",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDw8LC1zAoM": "Bellevue",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICA35bsnQsM": "Philadelphia",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQ6bXSuggM": "Fort Myers",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDgubTS8wgM": "Rome",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICw_NGpzwgM": "Macau",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDA2Z3fhAgM": "Houston",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQmr2-wAgM": "St. Tropez",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQmafG3QgM": "Monterey",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDwuKb2vwgM": "Deerfield Beach",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICwi-uXwwkM": "Fort Worth",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQmY67xgsM": "San Juan",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDgtsnVzAoM": "Girona",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICwpfXZ2QkM": "Milan",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICAoMLd7woM": "Washington DC",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICw9b_5yQgM": "Tel Aviv",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlch4LEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYnKKnCAw": "Charlotte",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDwu8mh6QgM": "Tulum",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICg0L69ogsM": "Pasadena",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQ6fi-9QgM": "Akron",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICw-vLd9wgM": "Mexico City",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQ0MCllgoM": "Abu Dhabi",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQ6bCQuAkM": "Chandler",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDQnreZ0QgM": "Rio de Janeiro ",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICw7puxgwoM": "Geneva",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICoosLduAkM": "Hamburg",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICorrCE6QgM": "D√ºsseldorf",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQ6a61kAgM": "Chagrin Falls",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICo6trg6QgM": "Sicily",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlch0LEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYuM19DA": "Santa Barbara",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDwr6broAoM": "King of Prussia",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICgivK10QgM": "Montreal",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQ6aqa4gkM": "Moreland Hills",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDw356nogsM": "Mclean",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDAwer2lwgM": "Berlin",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDI7vXM3goM": "Melbourne",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDgnbTp0woM": "Napa Valley",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDw8ZqCiwsM": "Whistler",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDIicHzvwgM": "Guanajuato",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlch0LEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYr8FrDA": "Chicago",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDAsILCjwkM": "Park City",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICw7pSl3gkM": "Tokyo",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDw8OPMvAsM": "Aventura",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgIDQvOSbgwoM": "Stockholm",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICg0Y6UmggM": "Maryland",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICIy6mPiwgM": "West Palm Beach",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICQ6YmC8ggM": "Hackensack",
                    "ahNzfnNldmVucm9vbXMtc2VjdXJlciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICwsYKd2wkM": "Prague"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/concierge/{concierge_id}/venues/{venue_id}/payments/paylink/{reservation_id}": {
      "post": {
        "summary": "Create paylink",
        "description": "Use this endpoint to create a paylink. Paylink can be used for instant charge and for saving client's card for later payments.",
        "operationId": "create_paylink",
        "tags": [
          "Paylinks"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "venue_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservation_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Reservation.\n\n**Note:** The Reservation's `reference_code` can be used in place of the Reservation's `id`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaylink_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Object containing paylink information.",
            "content": {
              "application/json": {
                "example": {
                  "gratuity_amount": 0,
                  "gratuity_type": null,
                  "id": "ahZzfnNldmVucEhFzcl9CaWxsaW5nSGlzdG9ym9vbXMtc2VjdXJlLXFhch4LeRiAgLjP-pLiYCAw",
                  "note_to_guest": "",
                  "paylink_auto_cancel_minutes": null,
                  "paylink_email_request": "",
                  "service_charge_amount": 0,
                  "subtotal": 0,
                  "tax_amount": 0,
                  "type": "charge"
                },
                "schema": {
                  "properties": {
                    "gratuity_amount": {
                      "example": 0,
                      "type": "integer"
                    },
                    "gratuity_type": {
                      "enum": [
                        "gratuity_percentage",
                        "none",
                        "require_client_select_charge",
                        "client_select_gratuity"
                      ],
                      "type": "string"
                    },
                    "id": {
                      "example": "ahZzfnNldmVucEhFzcl9CaWxsaW5nSGlzdG9ym9vbXMtc2VjdXJlLXFhch4LeRiAgLjP-pLiYCAw",
                      "type": "string"
                    },
                    "note_to_guest": {
                      "example": "",
                      "type": "string"
                    },
                    "paylink_auto_cancel_minutes": {
                      "type": "integer"
                    },
                    "paylink_email_request": {
                      "example": "",
                      "type": "string"
                    },
                    "service_charge_amount": {
                      "example": 0,
                      "type": "integer"
                    },
                    "subtotal": {
                      "example": 0,
                      "type": "integer"
                    },
                    "tax_amount": {
                      "example": 0,
                      "type": "integer"
                    },
                    "type": {
                      "enum": [
                        "charge",
                        "collect"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/concierge/{concierge_id}/venues/{venue_id}/payments/paylinks/{reservation_id}": {
      "get": {
        "summary": "List paylinks",
        "description": "Shows the list of created paylinks for the reservation.",
        "operationId": "list_paylinks",
        "tags": [
          "Paylinks"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "venue_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservation_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Reservation.\n\n**Note:** The Reservation's `reference_code` can be used in place of the Reservation's `id`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object containing the list of created paylinks for the reservation.",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "gratuity_amount": 0,
                      "gratuity_type": null,
                      "note_to_guest": "",
                      "paylink_email_request": "",
                      "service_charge_amount": 0,
                      "subtotal": 0,
                      "tax_amount": 0,
                      "type": "charge"
                    }
                  ],
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "properties": {
                          "gratuity_amount": {
                            "example": 0,
                            "type": "integer"
                          },
                          "gratuity_type": {
                            "enum": [
                              "gratuity_percentage",
                              "none",
                              "require_client_select_charge",
                              "client_select_gratuity"
                            ],
                            "type": "string"
                          },
                          "note_to_guest": {
                            "example": "",
                            "type": "string"
                          },
                          "paylink_email_request": {
                            "example": "",
                            "type": "string"
                          },
                          "service_charge_amount": {
                            "example": 0,
                            "type": "integer"
                          },
                          "subtotal": {
                            "example": 0,
                            "type": "integer"
                          },
                          "tax_amount": {
                            "example": 0,
                            "type": "integer"
                          },
                          "type": {
                            "enum": [
                              "charge",
                              "collect"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/concierge/{concierge_id}/venues/{venue_id}/payments/paylink/{paylink_id}": {
      "delete": {
        "summary": "Delete Paylink",
        "description": "",
        "operationId": "delete_paylink",
        "tags": [
          "Paylinks"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "venue_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paylink_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Empty object if OK."
          }
        }
      }
    },
    "/concierge/{concierge_id}/venues/{venue_id}/calculate_prices": {
      "post": {
        "summary": "Calculate Reservation Price",
        "description": "This endpoint calculates the prices associated with a reservation, including upsells if an integrator wants to incorporate that.",
        "operationId": "calculate_prices",
        "tags": [
          "Reservations"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "concierge_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Concierge",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "venue_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CalculateReservationPrice_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Object containing pricing information for the reservation. WARNING - The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "access_persistent_id": "ahZzfnNldmVkjf9vbXMtc2VjdXJlLXFhchwLEg9uaWasdJKLh8VmVudWUYgIC4lqPdrwoM-1727745048.09588-0.2835840305830584",
                    "apply_gratuity_charge": true,
                    "apply_service_charge": false,
                    "cc_payment_rule": "advanced_payment",
                    "charge_type": "person",
                    "gratuity_type": "SPECIFIC_GRATUITY",
                    "party_size": 2,
                    "require_credit_card": true,
                    "reservation_gratuity": 2,
                    "reservation_service_charge": 0,
                    "reservation_subtotal": 20,
                    "service_charge_type": "DEFAULT_SERVICE_CHARGE",
                    "total_costs": {
                      "gratuity": 2,
                      "reservation_subtotal": 20,
                      "service_charge": 0,
                      "tax": 0,
                      "total_spend": 37,
                      "upgrade_cost": 15
                    },
                    "upsells": [
                      {
                        "base_price": 15,
                        "category": "Starters",
                        "category_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcjoLEg9uaWdodGxvb3BfVmVudWUYgIC4lqPdrwoMCxIRc3JfVXBzZWxsQ2F0ZWdvcnkYgIC468OP2AsM",
                        "description": "Yummy meats and cheeses with jam",
                        "gratuity": 0,
                        "gratuity_pct": 0,
                        "maximum_quantity_allowed": 10,
                        "minimum_quantity_required": null,
                        "name": "Charcuterie",
                        "quantity": 1,
                        "service_charge": 0,
                        "service_charge_pct": 0,
                        "subtotal": 15,
                        "tags": {},
                        "tax": 0,
                        "tax_pct": 0,
                        "total_cost": 15,
                        "total_upgrade_cost": 15,
                        "upgrade_gratuity": 0,
                        "upgrade_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhckMLEg9uaWdodGxIac3JfVXBzZWxsQ2F0ZWdvcnlJbnZlbnRvcnkYgIC4l",
                        "upgrade_price": 15,
                        "upgrade_service_charge": 0,
                        "upgrade_service_charge_tax": 0,
                        "upgrade_tax": 0
                      }
                    ]
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "access_persistent_id": {
                          "example": "ahZzfnNldmVkjf9vbXMtc2VjdXJlLXFhchwLEg9uaWasdJKLh8VmVudWUYgIC4lqPdrwoM-1727745048.09588-0.2835840305830584",
                          "type": "string"
                        },
                        "apply_gratuity_charge": {
                          "example": true,
                          "type": "boolean"
                        },
                        "apply_service_charge": {
                          "example": false,
                          "type": "boolean"
                        },
                        "cc_payment_rule": {
                          "example": "advanced_payment",
                          "type": "string"
                        },
                        "charge_type": {
                          "example": "person",
                          "type": "string"
                        },
                        "gratuity_type": {
                          "example": "SPECIFIC_GRATUITY",
                          "type": "string"
                        },
                        "party_size": {
                          "example": 2,
                          "type": "integer"
                        },
                        "require_credit_card": {
                          "example": true,
                          "type": "boolean"
                        },
                        "reservation_gratuity": {
                          "example": 2,
                          "type": "number"
                        },
                        "reservation_service_charge": {
                          "example": 0,
                          "type": "number"
                        },
                        "reservation_subtotal": {
                          "example": 20,
                          "type": "number"
                        },
                        "service_charge_type": {
                          "example": "DEFAULT_SERVICE_CHARGE",
                          "type": "string"
                        },
                        "total_costs": {
                          "properties": {
                            "gratuity": {
                              "example": 2,
                              "type": "number"
                            },
                            "reservation_subtotal": {
                              "example": 20,
                              "type": "number"
                            },
                            "service_charge": {
                              "example": 0,
                              "type": "number"
                            },
                            "tax": {
                              "example": 0,
                              "type": "number"
                            },
                            "total_spend": {
                              "example": 37,
                              "type": "number"
                            },
                            "upgrade_cost": {
                              "example": 15,
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "upsells": {
                          "items": {
                            "properties": {
                              "base_price": {
                                "example": 15,
                                "type": "number"
                              },
                              "category": {
                                "example": "Starters",
                                "type": "string"
                              },
                              "category_id": {
                                "example": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcjoLEg9uaWdodGxvb3BfVmVudWUYgIC4lqPdrwoMCxIRc3JfVXBzZWxsQ2F0ZWdvcnkYgIC468OP2AsM",
                                "type": "string"
                              },
                              "description": {
                                "example": "Yummy meats and cheeses with jam",
                                "type": "string"
                              },
                              "gratuity": {
                                "example": 0,
                                "type": "number"
                              },
                              "gratuity_pct": {
                                "example": 0,
                                "type": "number"
                              },
                              "maximum_quantity_allowed": {
                                "default": 10,
                                "type": "integer"
                              },
                              "minimum_quantity_required": {
                                "type": "integer"
                              },
                              "name": {
                                "example": "Charcuterie",
                                "type": "string"
                              },
                              "quantity": {
                                "example": 1,
                                "type": "number"
                              },
                              "service_charge": {
                                "example": 0,
                                "type": "number"
                              },
                              "service_charge_pct": {
                                "example": 0,
                                "type": "number"
                              },
                              "subtotal": {
                                "example": 15,
                                "type": "number"
                              },
                              "tags": {
                                "example": {},
                                "type": "null"
                              },
                              "tax": {
                                "example": 0,
                                "type": "number"
                              },
                              "tax_pct": {
                                "example": 0,
                                "type": "number"
                              },
                              "total_cost": {
                                "example": 15,
                                "type": "number"
                              },
                              "total_upgrade_cost": {
                                "example": 15,
                                "type": "number"
                              },
                              "upgrade_gratuity": {
                                "example": 0,
                                "type": "number"
                              },
                              "upgrade_id": {
                                "example": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhckMLEg9uaWdodGxIac3JfVXBzZWxsQ2F0ZWdvcnlJbnZlbnRvcnkYgIC4l",
                                "type": "string"
                              },
                              "upgrade_price": {
                                "example": 15,
                                "type": "number"
                              },
                              "upgrade_service_charge": {
                                "example": 0,
                                "type": "number"
                              },
                              "upgrade_service_charge_tax": {
                                "example": 0,
                                "type": "number"
                              },
                              "upgrade_tax": {
                                "example": 0,
                                "type": "number"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/concierge/{concierge_id}/venues/{venue_id}/book": {
      "put": {
        "summary": "Create or Update a Reservation",
        "description": "Book or Update a reservation at a Venue by a given Venue ID. When updating a reservation, a valid `reservation_id` is required.",
        "operationId": "create_or_update_reservation",
        "tags": [
          "Reservations"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "concierge_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Concierge",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "venue_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateUpdateReservation_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Object containing the GUID of the created or updated Reservation.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "paylink_auto_cancel": {
                      "gratuity_amount": 2,
                      "gratuity_type": "gratuity_percentage",
                      "id": "ahZzfnNldmVucEhFzcl9CaWxsaW5nSGlzdG9ym9vbXMtc2VjdXJlLXFhch4LeRiAgLjP-pLiYCAw",
                      "link": "https://sevenrooms.com/paylink/wine-bar-sr/4612545281086719",
                      "note_to_guest": "Paylink note",
                      "paylink_auto_cancel_minutes": 15,
                      "paylink_email_request": null,
                      "service_charge_amount": 0,
                      "subtotal": 3500,
                      "tax_amount": 0,
                      "type": "charge"
                    },
                    "request_id": null,
                    "reservation_id": null,
                    "upgrades": [
                      {
                        "quantity": null,
                        "upgrade_id": null
                      }
                    ]
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "paylink_auto_cancel": {
                          "properties": {
                            "gratuity_amount": {
                              "example": 2,
                              "type": "integer"
                            },
                            "gratuity_type": {
                              "example": "gratuity_percentage",
                              "type": "string"
                            },
                            "id": {
                              "example": "ahZzfnNldmVucEhFzcl9CaWxsaW5nSGlzdG9ym9vbXMtc2VjdXJlLXFhch4LeRiAgLjP-pLiYCAw",
                              "type": "string"
                            },
                            "link": {
                              "example": "https://sevenrooms.com/paylink/wine-bar-sr/4612545281086719",
                              "type": "string"
                            },
                            "note_to_guest": {
                              "example": "Paylink note",
                              "type": "string"
                            },
                            "paylink_auto_cancel_minutes": {
                              "example": 15,
                              "type": "integer"
                            },
                            "paylink_email_request": {
                              "description": "",
                              "type": "string"
                            },
                            "service_charge_amount": {
                              "example": 0,
                              "type": "integer"
                            },
                            "subtotal": {
                              "example": 3500,
                              "type": "integer"
                            },
                            "tax_amount": {
                              "example": 0,
                              "type": "integer"
                            },
                            "type": {
                              "example": "charge",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "request_id": {
                          "type": "string"
                        },
                        "reservation_id": {
                          "type": "string"
                        },
                        "upgrades": {
                          "items": {
                            "properties": {
                              "quantity": {
                                "type": "integer"
                              },
                              "upgrade_id": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/concierge_group/{concierge_group_id}/reservations": {
      "get": {
        "summary": "Search Reservations",
        "description": "Search Reservations by a given Concierge Group ID and an optional Concierge ID.",
        "operationId": "search_reservations",
        "tags": [
          "Reservations"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "concierge_group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "concierge_id",
            "in": "query",
            "required": false,
            "description": "Unique identifier of the Concierge",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from_date",
            "in": "query",
            "required": false,
            "description": "Beginning date for date range filtering",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to_date",
            "in": "query",
            "required": false,
            "description": "End date for date range filtering",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Full name of the Client.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone_number",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "description": "The `cursor` field can be used to get multiple pages based on the limit (max of 400). If there are more than the limit of results then the response will include the field `cursor`. \n\nThe subsequent call will include the cursor field and SevenRooms responds with the next iteration of results and so on.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object containing a list of Reservations.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "cursor": null,
                    "limit": 50,
                    "results": [
                      {
                        "arrival_time": "7:00 PM",
                        "booked_by": "Docs Concierge Group Demo API",
                        "booking_policy": "Thank you for your reservation. Should your plans change, please let us know 24 hours before your reservation time. We look forward to serving you.",
                        "cancellation_policy": "We ask that any cancellation to your reservation be made no less than 24 hours prior.",
                        "check_numbers": null,
                        "client_requests": "Please set up baby seat",
                        "concierge_group_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHgsSEXNyX0NvbmNpZXJnZUdyb3VwGICA0Nqqy9EJDA",
                        "concierge_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIAsSE25pZ2h0bG9vcF9Db25jaWVyZ2UYgIDQ",
                        "cost_option": 0,
                        "created": "2019-04-11T21:30:34.703907",
                        "date": "2019-04-12",
                        "deleted": null,
                        "email": "jsnow@srdemo.com",
                        "external_id": "ext_id_ex_543",
                        "first_name": "Jon",
                        "id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIgsSFW5pZ2h0bG9vcF9SZXNlcnZhdGlvbhiAgNCa5ejgCgw",
                        "internal_status": "",
                        "internal_status_display": "",
                        "internal_status_simple": "",
                        "last_name": "Snow",
                        "max_guests": 2,
                        "mf_ratio_female": 0,
                        "mf_ratio_male": 0,
                        "min_price": null,
                        "onsite_payment": null,
                        "onsite_payment_gratuity": null,
                        "onsite_payment_net": null,
                        "onsite_payment_tax": null,
                        "onsite_payment_total": null,
                        "perks": {},
                        "phone_number": "212-555-7056",
                        "prepayment": 22,
                        "prepayment_gratuity": 2,
                        "prepayment_net": 20,
                        "prepayment_service_charge": null,
                        "prepayment_tax": null,
                        "prepayment_total": 22,
                        "real_datetime_of_slot": "2019-04-12 19:00:00",
                        "reference_code": "I9YJ5HC",
                        "request_id": null,
                        "status": "Reserved",
                        "status_code": "RESERVED",
                        "status_display": "",
                        "status_simple": "",
                        "table_numbers": null,
                        "time_slot_iso": "19:00:00",
                        "total_net_payment": null,
                        "total_payment": null,
                        "updated": "2019-04-11T21:30:34.704931",
                        "upgrades": [
                          {
                            "category": {
                              "gratuity_percentage": "",
                              "is_charging_gratuity": "",
                              "is_charging_service_charge": "",
                              "is_charging_tax": "",
                              "max_quantity": "",
                              "max_quantity_type": "",
                              "min_quantity": "",
                              "min_quantity_type": "",
                              "name": "",
                              "service_charge_percentage": "",
                              "service_charge_type": "",
                              "tax_group_id": ""
                            },
                            "category_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcjoLEg9uaWdodGoMCxIRc3JfVXBzZWxsQ2F0ZWdvcnk-YgIC468OP",
                            "inventory_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhckMLEg9uaWdodGxIac3JfVXBzZWxsQ2F0ZWdvcnlJbnZlbnRvcnkYgIC4l",
                            "name": "Charcuterie",
                            "pos_item_id": null,
                            "price": 1500,
                            "quantity": 1
                          }
                        ],
                        "user": {
                          "id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yFQsSCGdhZV9Vc2VyGICA0JqHjagLDA",
                          "name": "Docs Concierge Group Demo API"
                        },
                        "venue_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgNCKuYezCgw"
                      }
                    ]
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "cursor": {
                          "type": "integer"
                        },
                        "limit": {
                          "example": 50,
                          "type": "integer"
                        },
                        "results": {
                          "default": [],
                          "items": {
                            "properties": {
                              "arrival_time": {
                                "example": "7:00 PM",
                                "type": "string"
                              },
                              "booked_by": {
                                "example": "Docs Concierge Group Demo API",
                                "type": "string"
                              },
                              "booking_policy": {
                                "description": "Returned only when a reservation has been made/confirmed. Booking policy should match what is expected based on the access rule setup. Could be set to the default venue policy, could be a custom policy, or if GFL, could be a policy from the policy bank.",
                                "example": "Thank you for your reservation. Should your plans change, please let us know 24 hours before your reservation time. We look forward to serving you.",
                                "type": "string"
                              },
                              "cancellation_policy": {
                                "description": "Returned only when a reservation has been made/confirmed",
                                "example": "We ask that any cancellation to your reservation be made no less than 24 hours prior.",
                                "type": "string"
                              },
                              "check_numbers": {
                                "description": "Returned only when include_check_numbers is checked in the Concierge's API settings",
                                "type": "number"
                              },
                              "client_requests": {
                                "example": "Please set up baby seat",
                                "type": "string"
                              },
                              "concierge_group_id": {
                                "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHgsSEXNyX0NvbmNpZXJnZUdyb3VwGICA0Nqqy9EJDA",
                                "type": "string"
                              },
                              "concierge_id": {
                                "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIAsSE25pZ2h0bG9vcF9Db25jaWVyZ2UYgIDQ",
                                "type": "string"
                              },
                              "cost_option": {
                                "example": 0,
                                "type": "integer"
                              },
                              "created": {
                                "example": "2019-04-11T21:30:34.703907",
                                "type": "string"
                              },
                              "date": {
                                "example": "2019-04-12",
                                "type": "string"
                              },
                              "deleted": {
                                "type": "boolean"
                              },
                              "email": {
                                "example": "jsnow@srdemo.com",
                                "type": "string"
                              },
                              "external_id": {
                                "description": "Concierge external ID",
                                "example": "ext_id_ex_543",
                                "type": "string"
                              },
                              "first_name": {
                                "example": "Jon",
                                "type": "string"
                              },
                              "id": {
                                "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIgsSFW5pZ2h0bG9vcF9SZXNlcnZhdGlvbhiAgNCa5ejgCgw",
                                "type": "string"
                              },
                              "internal_status": {
                                "example": "",
                                "type": "string"
                              },
                              "internal_status_display": {
                                "example": "",
                                "type": "string"
                              },
                              "internal_status_simple": {
                                "example": "",
                                "type": "string"
                              },
                              "last_name": {
                                "example": "Snow",
                                "type": "string"
                              },
                              "max_guests": {
                                "example": 2,
                                "type": "integer"
                              },
                              "mf_ratio_female": {
                                "example": 0,
                                "type": "integer"
                              },
                              "mf_ratio_male": {
                                "example": 0,
                                "type": "integer"
                              },
                              "min_price": {
                                "type": "integer"
                              },
                              "onsite_payment": {
                                "description": "Returned only when a reservation has been made/confirmed",
                                "type": "number"
                              },
                              "onsite_payment_gratuity": {
                                "description": "Returned only when a reservation has been made/confirmed",
                                "type": "number"
                              },
                              "onsite_payment_net": {
                                "description": "Returned only when a reservation has been made/confirmed",
                                "type": "number"
                              },
                              "onsite_payment_tax": {
                                "description": "Returned only when a reservation has been made/confirmed",
                                "type": "number"
                              },
                              "onsite_payment_total": {
                                "description": "Returned only when a reservation has been made/confirmed",
                                "type": "number"
                              },
                              "perks": {
                                "example": {},
                                "type": "null"
                              },
                              "phone_number": {
                                "example": "212-555-7056",
                                "type": "string"
                              },
                              "prepayment": {
                                "description": "Returned only when a reservation has been made/confirmed",
                                "example": 22,
                                "type": "number"
                              },
                              "prepayment_gratuity": {
                                "description": "Returned only when a reservation has been made/confirmed",
                                "example": 2,
                                "type": "number"
                              },
                              "prepayment_net": {
                                "example": 20,
                                "type": "number"
                              },
                              "prepayment_service_charge": {
                                "description": "Returned only when a reservation has been made/confirmed",
                                "type": "number"
                              },
                              "prepayment_tax": {
                                "description": "Returned only when a reservation has been made/confirmed",
                                "type": "number"
                              },
                              "prepayment_total": {
                                "description": "Returned only when a reservation has been made/confirmed",
                                "example": 22,
                                "type": "number"
                              },
                              "real_datetime_of_slot": {
                                "description": "If after midnight for a venue with a 6am ‚ÄúStart of Day‚Äù this field would have a date of date+1 compared to the date searched",
                                "example": "2019-04-12 19:00:00",
                                "type": "string"
                              },
                              "reference_code": {
                                "example": "I9YJ5HC",
                                "type": "string"
                              },
                              "request_id": {
                                "description": "Returned only when a reservation has been made/confirmed",
                                "type": "string"
                              },
                              "status": {
                                "description": "The Reservation''s current status. Can be one of the following values (''On the Books'', ''Canceled'', ''No Show'', or ''Complete'').",
                                "example": "Reserved",
                                "type": "string"
                              },
                              "status_code": {
                                "description": "The Reservation''s current status. Can be one of the following values (''RESERVED'', ''CANCELED'', ''NO_SHOW'', or ''COMPLETE'').",
                                "example": "RESERVED",
                                "type": "string"
                              },
                              "status_display": {
                                "example": "",
                                "type": "string"
                              },
                              "status_simple": {
                                "example": "",
                                "type": "string"
                              },
                              "table_numbers": {
                                "description": "Returned only when include_table_numbers is checked in the Concierge's API settings",
                                "type": "string"
                              },
                              "time_slot_iso": {
                                "description": "The time in iso format(ie 21:00:00)",
                                "example": "19:00:00",
                                "type": "string"
                              },
                              "total_net_payment": {
                                "description": "Returned only when include_total_spend is checked in the Concierge's API settings",
                                "type": "number"
                              },
                              "total_payment": {
                                "description": "Returned only when a reservation has been made/confirmed",
                                "type": "number"
                              },
                              "updated": {
                                "example": "2019-04-11T21:30:34.704931",
                                "type": "string"
                              },
                              "upgrades": {
                                "items": {
                                  "properties": {
                                    "category": {
                                      "properties": {
                                        "gratuity_percentage": {
                                          "example": "",
                                          "type": "integer"
                                        },
                                        "is_charging_gratuity": {
                                          "example": "",
                                          "type": "boolean"
                                        },
                                        "is_charging_service_charge": {
                                          "example": "",
                                          "type": "boolean"
                                        },
                                        "is_charging_tax": {
                                          "example": "",
                                          "type": "boolean"
                                        },
                                        "max_quantity": {
                                          "example": "",
                                          "type": "integer"
                                        },
                                        "max_quantity_type": {
                                          "example": "",
                                          "type": "string"
                                        },
                                        "min_quantity": {
                                          "example": "",
                                          "type": "integer"
                                        },
                                        "min_quantity_type": {
                                          "example": "",
                                          "type": "string"
                                        },
                                        "name": {
                                          "example": "",
                                          "type": "string"
                                        },
                                        "service_charge_percentage": {
                                          "example": "",
                                          "type": "integer"
                                        },
                                        "service_charge_type": {
                                          "example": "",
                                          "type": "string"
                                        },
                                        "tax_group_id": {
                                          "example": "",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "category_id": {
                                      "example": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcjoLEg9uaWdodGoMCxIRc3JfVXBzZWxsQ2F0ZWdvcnk-YgIC468OP",
                                      "type": "string"
                                    },
                                    "inventory_id": {
                                      "example": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhckMLEg9uaWdodGxIac3JfVXBzZWxsQ2F0ZWdvcnlJbnZlbnRvcnkYgIC4l",
                                      "type": "string"
                                    },
                                    "name": {
                                      "example": "Charcuterie",
                                      "type": "string"
                                    },
                                    "pos_item_id": {
                                      "type": "string"
                                    },
                                    "price": {
                                      "description": "Price in cents",
                                      "example": 1500,
                                      "type": "integer"
                                    },
                                    "quantity": {
                                      "example": 1,
                                      "type": "integer"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "user": {
                                "example": {
                                  "id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yFQsSCGdhZV9Vc2VyGICA0JqHjagLDA",
                                  "name": "Docs Concierge Group Demo API"
                                },
                                "type": "object"
                              },
                              "venue_id": {
                                "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgNCKuYezCgw",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/concierge_group/{concierge_group_id}/reservations/{reservation_id}": {
      "get": {
        "summary": "Get a Reservation (Concierge Group)",
        "description": "Get a Reservation by a given Concierge Group ID ID and Reservation ID. The Reservation ID provided can be the SevenRooms generated Reservation ID or the External ID attached to the Reservation.",
        "operationId": "get_concierge_group_reservation",
        "tags": [
          "Reservations"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "concierge_group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservation_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Reservation.\n\n**Note:** The Reservation's `reference_code` can be used in place of the Reservation's `id`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object containing a Reservation.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "arrival_time": "7:00 PM",
                    "booked_by": "Docs Concierge Group Demo API",
                    "booking_policy": "Thank you for your reservation. Should your plans change, please let us know 24 hours before your reservation time. We look forward to serving you.",
                    "cancellation_policy": "We ask that any cancellation to your reservation be made no less than 24 hours prior.",
                    "check_numbers": null,
                    "client_requests": "Please set up baby seat",
                    "concierge_group_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHgsSEXNyX0NvbmNpZXJnZUdyb3VwGICA0Nqqy9EJDA",
                    "concierge_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIAsSE25pZ2h0bG9vcF9Db25jaWVyZ2UYgIDQ",
                    "cost_option": 0,
                    "created": "2019-04-11T21:30:34.703907",
                    "date": "2019-04-12",
                    "deleted": null,
                    "email": "jsnow@srdemo.com",
                    "external_id": "ext_id_ex_543",
                    "first_name": "Jon",
                    "id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIgsSFW5pZ2h0bG9vcF9SZXNlcnZhdGlvbhiAgNCa5ejgCgw",
                    "internal_status": "",
                    "internal_status_display": "",
                    "internal_status_simple": "",
                    "last_name": "Snow",
                    "max_guests": 2,
                    "mf_ratio_female": 0,
                    "mf_ratio_male": 0,
                    "min_price": null,
                    "onsite_payment": null,
                    "onsite_payment_gratuity": null,
                    "onsite_payment_net": null,
                    "onsite_payment_tax": null,
                    "onsite_payment_total": null,
                    "perks": {},
                    "phone_number": "212-555-7056",
                    "prepayment": 22,
                    "prepayment_gratuity": 2,
                    "prepayment_net": 20,
                    "prepayment_service_charge": null,
                    "prepayment_tax": null,
                    "prepayment_total": 22,
                    "real_datetime_of_slot": "2019-04-12 19:00:00",
                    "reference_code": "I9YJ5HC",
                    "request_id": null,
                    "status": "Reserved",
                    "status_code": "RESERVED",
                    "status_display": "",
                    "status_simple": "",
                    "table_numbers": null,
                    "time_slot_iso": "19:00:00",
                    "total_net_payment": null,
                    "total_payment": null,
                    "updated": "2019-04-11T21:30:34.704931",
                    "upgrades": [
                      {
                        "category": {
                          "gratuity_percentage": "",
                          "is_charging_gratuity": "",
                          "is_charging_service_charge": "",
                          "is_charging_tax": "",
                          "max_quantity": "",
                          "max_quantity_type": "",
                          "min_quantity": "",
                          "min_quantity_type": "",
                          "name": "",
                          "service_charge_percentage": "",
                          "service_charge_type": "",
                          "tax_group_id": ""
                        },
                        "category_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcjoLEg9uaWdodGoMCxIRc3JfVXBzZWxsQ2F0ZWdvcnk-YgIC468OP",
                        "inventory_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhckMLEg9uaWdodGxIac3JfVXBzZWxsQ2F0ZWdvcnlJbnZlbnRvcnkYgIC4l",
                        "name": "Charcuterie",
                        "pos_item_id": null,
                        "price": 1500,
                        "quantity": 1
                      }
                    ],
                    "user": {
                      "id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yFQsSCGdhZV9Vc2VyGICA0JqHjagLDA",
                      "name": "Docs Concierge Group Demo API"
                    },
                    "venue_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgNCKuYezCgw"
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "arrival_time": {
                          "example": "7:00 PM",
                          "type": "string"
                        },
                        "booked_by": {
                          "example": "Docs Concierge Group Demo API",
                          "type": "string"
                        },
                        "booking_policy": {
                          "description": "Returned only when a reservation has been made/confirmed. Booking policy should match what is expected based on the access rule setup. Could be set to the default venue policy, could be a custom policy, or if GFL, could be a policy from the policy bank.",
                          "example": "Thank you for your reservation. Should your plans change, please let us know 24 hours before your reservation time. We look forward to serving you.",
                          "type": "string"
                        },
                        "cancellation_policy": {
                          "description": "Returned only when a reservation has been made/confirmed",
                          "example": "We ask that any cancellation to your reservation be made no less than 24 hours prior.",
                          "type": "string"
                        },
                        "check_numbers": {
                          "description": "Returned only when include_check_numbers is checked in the Concierge's API settings",
                          "type": "number"
                        },
                        "client_requests": {
                          "example": "Please set up baby seat",
                          "type": "string"
                        },
                        "concierge_group_id": {
                          "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHgsSEXNyX0NvbmNpZXJnZUdyb3VwGICA0Nqqy9EJDA",
                          "type": "string"
                        },
                        "concierge_id": {
                          "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIAsSE25pZ2h0bG9vcF9Db25jaWVyZ2UYgIDQ",
                          "type": "string"
                        },
                        "cost_option": {
                          "example": 0,
                          "type": "integer"
                        },
                        "created": {
                          "example": "2019-04-11T21:30:34.703907",
                          "type": "string"
                        },
                        "date": {
                          "example": "2019-04-12",
                          "type": "string"
                        },
                        "deleted": {
                          "type": "boolean"
                        },
                        "email": {
                          "example": "jsnow@srdemo.com",
                          "type": "string"
                        },
                        "external_id": {
                          "description": "Concierge external ID",
                          "example": "ext_id_ex_543",
                          "type": "string"
                        },
                        "first_name": {
                          "example": "Jon",
                          "type": "string"
                        },
                        "id": {
                          "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIgsSFW5pZ2h0bG9vcF9SZXNlcnZhdGlvbhiAgNCa5ejgCgw",
                          "type": "string"
                        },
                        "internal_status": {
                          "example": "",
                          "type": "string"
                        },
                        "internal_status_display": {
                          "example": "",
                          "type": "string"
                        },
                        "internal_status_simple": {
                          "example": "",
                          "type": "string"
                        },
                        "last_name": {
                          "example": "Snow",
                          "type": "string"
                        },
                        "max_guests": {
                          "example": 2,
                          "type": "integer"
                        },
                        "mf_ratio_female": {
                          "example": 0,
                          "type": "integer"
                        },
                        "mf_ratio_male": {
                          "example": 0,
                          "type": "integer"
                        },
                        "min_price": {
                          "type": "integer"
                        },
                        "onsite_payment": {
                          "description": "Returned only when a reservation has been made/confirmed",
                          "type": "number"
                        },
                        "onsite_payment_gratuity": {
                          "description": "Returned only when a reservation has been made/confirmed",
                          "type": "number"
                        },
                        "onsite_payment_net": {
                          "description": "Returned only when a reservation has been made/confirmed",
                          "type": "number"
                        },
                        "onsite_payment_tax": {
                          "description": "Returned only when a reservation has been made/confirmed",
                          "type": "number"
                        },
                        "onsite_payment_total": {
                          "description": "Returned only when a reservation has been made/confirmed",
                          "type": "number"
                        },
                        "perks": {
                          "example": {},
                          "type": "null"
                        },
                        "phone_number": {
                          "example": "212-555-7056",
                          "type": "string"
                        },
                        "prepayment": {
                          "description": "Returned only when a reservation has been made/confirmed",
                          "example": 22,
                          "type": "number"
                        },
                        "prepayment_gratuity": {
                          "description": "Returned only when a reservation has been made/confirmed",
                          "example": 2,
                          "type": "number"
                        },
                        "prepayment_net": {
                          "example": 20,
                          "type": "number"
                        },
                        "prepayment_service_charge": {
                          "description": "Returned only when a reservation has been made/confirmed",
                          "type": "number"
                        },
                        "prepayment_tax": {
                          "description": "Returned only when a reservation has been made/confirmed",
                          "type": "number"
                        },
                        "prepayment_total": {
                          "description": "Returned only when a reservation has been made/confirmed",
                          "example": 22,
                          "type": "number"
                        },
                        "real_datetime_of_slot": {
                          "description": "If after midnight for a venue with a 6am ‚ÄúStart of Day‚Äù this field would have a date of date+1 compared to the date searched",
                          "example": "2019-04-12 19:00:00",
                          "type": "string"
                        },
                        "reference_code": {
                          "example": "I9YJ5HC",
                          "type": "string"
                        },
                        "request_id": {
                          "description": "Returned only when a reservation has been made/confirmed",
                          "type": "string"
                        },
                        "status": {
                          "description": "The Reservation''s current status. Can be one of the following values (''On the Books'', ''Canceled'', ''No Show'', or ''Complete'').",
                          "example": "Reserved",
                          "type": "string"
                        },
                        "status_code": {
                          "description": "The Reservation''s current status. Can be one of the following values (''RESERVED'', ''CANCELED'', ''NO_SHOW'', or ''COMPLETE'').",
                          "example": "RESERVED",
                          "type": "string"
                        },
                        "status_display": {
                          "example": "",
                          "type": "string"
                        },
                        "status_simple": {
                          "example": "",
                          "type": "string"
                        },
                        "table_numbers": {
                          "description": "Returned only when include_table_numbers is checked in the Concierge's API settings",
                          "type": "string"
                        },
                        "time_slot_iso": {
                          "description": "The time in iso format(ie 21:00:00)",
                          "example": "19:00:00",
                          "type": "string"
                        },
                        "total_net_payment": {
                          "description": "Returned only when include_total_spend is checked in the Concierge's API settings",
                          "type": "number"
                        },
                        "total_payment": {
                          "description": "Returned only when a reservation has been made/confirmed",
                          "type": "number"
                        },
                        "updated": {
                          "example": "2019-04-11T21:30:34.704931",
                          "type": "string"
                        },
                        "upgrades": {
                          "items": {
                            "properties": {
                              "category": {
                                "properties": {
                                  "gratuity_percentage": {
                                    "example": "",
                                    "type": "integer"
                                  },
                                  "is_charging_gratuity": {
                                    "example": "",
                                    "type": "boolean"
                                  },
                                  "is_charging_service_charge": {
                                    "example": "",
                                    "type": "boolean"
                                  },
                                  "is_charging_tax": {
                                    "example": "",
                                    "type": "boolean"
                                  },
                                  "max_quantity": {
                                    "example": "",
                                    "type": "integer"
                                  },
                                  "max_quantity_type": {
                                    "example": "",
                                    "type": "string"
                                  },
                                  "min_quantity": {
                                    "example": "",
                                    "type": "integer"
                                  },
                                  "min_quantity_type": {
                                    "example": "",
                                    "type": "string"
                                  },
                                  "name": {
                                    "example": "",
                                    "type": "string"
                                  },
                                  "service_charge_percentage": {
                                    "example": "",
                                    "type": "integer"
                                  },
                                  "service_charge_type": {
                                    "example": "",
                                    "type": "string"
                                  },
                                  "tax_group_id": {
                                    "example": "",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "category_id": {
                                "example": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcjoLEg9uaWdodGoMCxIRc3JfVXBzZWxsQ2F0ZWdvcnk-YgIC468OP",
                                "type": "string"
                              },
                              "inventory_id": {
                                "example": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhckMLEg9uaWdodGxIac3JfVXBzZWxsQ2F0ZWdvcnlJbnZlbnRvcnkYgIC4l",
                                "type": "string"
                              },
                              "name": {
                                "example": "Charcuterie",
                                "type": "string"
                              },
                              "pos_item_id": {
                                "type": "string"
                              },
                              "price": {
                                "description": "Price in cents",
                                "example": 1500,
                                "type": "integer"
                              },
                              "quantity": {
                                "example": 1,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "user": {
                          "example": {
                            "id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yFQsSCGdhZV9Vc2VyGICA0JqHjagLDA",
                            "name": "Docs Concierge Group Demo API"
                          },
                          "type": "object"
                        },
                        "venue_id": {
                          "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgNCKuYezCgw",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Cancel a Reservation (Concierge Group)",
        "description": "Cancel a previously booked Reservation by a Concierge Group ID and Reservation ID.",
        "operationId": "cancel_concierge_group_reservation",
        "tags": [
          "Reservations"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "concierge_group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservation_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Reservation.\n\n**Note:** The Reservation's `reference_code` can be used in place of the Reservation's `id`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CancelGroupReservation_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Object containing the Reservation ID",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "reservation_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIgsSFW5pZ2h0bG9vcF9SZXNlcnZhdGlvbhiAgIihsLbCCQw"
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "reservation_id": {
                          "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIgsSFW5pZ2h0bG9vcF9SZXNlcnZhdGlvbhiAgIihsLbCCQw",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "When a reservation cannot be found with the given reservation_id, SevenRooms will return 'Invalid reservation ID'. When a reservation has already been cancelled, SevenRooms will return 'Reservation has already been cancelled.' If the cancelation cut-off time has passed, SevenRooms will return 'Reservation cannot be modified after the cancellation cut-off time'."
          },
          "404": {
            "description": "When a venue doesn't have record of a reservation, SevenRooms will return 'The venue does not have record of this reservation.'"
          }
        }
      }
    },
    "/concierge/{concierge_id}/reservations/{reservation_id}": {
      "get": {
        "summary": "Get a Reservation (Concierge)",
        "description": "Get a Reservation by a given Concierge ID and Reservation ID.",
        "operationId": "get_concierge_reservation",
        "tags": [
          "Reservations"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "concierge_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Concierge",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservation_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Reservation.\n\n**Note:** The Reservation's `reference_code` can be used in place of the Reservation's `id`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object with Reservation data.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "arrival_time": "7:00 PM",
                    "booked_by": "Docs Concierge Group Demo API",
                    "booking_policy": "Thank you for your reservation. Should your plans change, please let us know 24 hours before your reservation time. We look forward to serving you.",
                    "cancellation_policy": "We ask that any cancellation to your reservation be made no less than 24 hours prior.",
                    "check_numbers": null,
                    "client_requests": "Please set up baby seat",
                    "concierge_group_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHgsSEXNyX0NvbmNpZXJnZUdyb3VwGICA0Nqqy9EJDA",
                    "concierge_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIAsSE25pZ2h0bG9vcF9Db25jaWVyZ2UYgIDQ",
                    "cost_option": 0,
                    "created": "2019-04-11T21:30:34.703907",
                    "date": "2019-04-12",
                    "deleted": null,
                    "email": "jsnow@srdemo.com",
                    "external_id": "ext_id_ex_543",
                    "first_name": "Jon",
                    "id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIgsSFW5pZ2h0bG9vcF9SZXNlcnZhdGlvbhiAgNCa5ejgCgw",
                    "internal_status": "",
                    "internal_status_display": "",
                    "internal_status_simple": "",
                    "last_name": "Snow",
                    "max_guests": 2,
                    "mf_ratio_female": 0,
                    "mf_ratio_male": 0,
                    "min_price": null,
                    "onsite_payment": null,
                    "onsite_payment_gratuity": null,
                    "onsite_payment_net": null,
                    "onsite_payment_tax": null,
                    "onsite_payment_total": null,
                    "perks": {},
                    "phone_number": "212-555-7056",
                    "prepayment": 22,
                    "prepayment_gratuity": 2,
                    "prepayment_net": 20,
                    "prepayment_service_charge": null,
                    "prepayment_tax": null,
                    "prepayment_total": 22,
                    "real_datetime_of_slot": "2019-04-12 19:00:00",
                    "reference_code": "I9YJ5HC",
                    "request_id": null,
                    "status": "Reserved",
                    "status_code": "RESERVED",
                    "status_display": "",
                    "status_simple": "",
                    "table_numbers": null,
                    "time_slot_iso": "19:00:00",
                    "total_net_payment": null,
                    "total_payment": null,
                    "updated": "2019-04-11T21:30:34.704931",
                    "upgrades": [
                      {
                        "category": {
                          "gratuity_percentage": "",
                          "is_charging_gratuity": "",
                          "is_charging_service_charge": "",
                          "is_charging_tax": "",
                          "max_quantity": "",
                          "max_quantity_type": "",
                          "min_quantity": "",
                          "min_quantity_type": "",
                          "name": "",
                          "service_charge_percentage": "",
                          "service_charge_type": "",
                          "tax_group_id": ""
                        },
                        "category_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcjoLEg9uaWdodGoMCxIRc3JfVXBzZWxsQ2F0ZWdvcnk-YgIC468OP",
                        "inventory_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhckMLEg9uaWdodGxIac3JfVXBzZWxsQ2F0ZWdvcnlJbnZlbnRvcnkYgIC4l",
                        "name": "Charcuterie",
                        "pos_item_id": null,
                        "price": 1500,
                        "quantity": 1
                      }
                    ],
                    "user": {
                      "id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yFQsSCGdhZV9Vc2VyGICA0JqHjagLDA",
                      "name": "Docs Concierge Group Demo API"
                    },
                    "venue_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgNCKuYezCgw"
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "arrival_time": {
                          "example": "7:00 PM",
                          "type": "string"
                        },
                        "booked_by": {
                          "example": "Docs Concierge Group Demo API",
                          "type": "string"
                        },
                        "booking_policy": {
                          "description": "Returned only when a reservation has been made/confirmed. Booking policy should match what is expected based on the access rule setup. Could be set to the default venue policy, could be a custom policy, or if GFL, could be a policy from the policy bank.",
                          "example": "Thank you for your reservation. Should your plans change, please let us know 24 hours before your reservation time. We look forward to serving you.",
                          "type": "string"
                        },
                        "cancellation_policy": {
                          "description": "Returned only when a reservation has been made/confirmed",
                          "example": "We ask that any cancellation to your reservation be made no less than 24 hours prior.",
                          "type": "string"
                        },
                        "check_numbers": {
                          "description": "Returned only when include_check_numbers is checked in the Concierge's API settings",
                          "type": "number"
                        },
                        "client_requests": {
                          "example": "Please set up baby seat",
                          "type": "string"
                        },
                        "concierge_group_id": {
                          "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHgsSEXNyX0NvbmNpZXJnZUdyb3VwGICA0Nqqy9EJDA",
                          "type": "string"
                        },
                        "concierge_id": {
                          "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIAsSE25pZ2h0bG9vcF9Db25jaWVyZ2UYgIDQ",
                          "type": "string"
                        },
                        "cost_option": {
                          "example": 0,
                          "type": "integer"
                        },
                        "created": {
                          "example": "2019-04-11T21:30:34.703907",
                          "type": "string"
                        },
                        "date": {
                          "example": "2019-04-12",
                          "type": "string"
                        },
                        "deleted": {
                          "type": "boolean"
                        },
                        "email": {
                          "example": "jsnow@srdemo.com",
                          "type": "string"
                        },
                        "external_id": {
                          "description": "Concierge external ID",
                          "example": "ext_id_ex_543",
                          "type": "string"
                        },
                        "first_name": {
                          "example": "Jon",
                          "type": "string"
                        },
                        "id": {
                          "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIgsSFW5pZ2h0bG9vcF9SZXNlcnZhdGlvbhiAgNCa5ejgCgw",
                          "type": "string"
                        },
                        "internal_status": {
                          "example": "",
                          "type": "string"
                        },
                        "internal_status_display": {
                          "example": "",
                          "type": "string"
                        },
                        "internal_status_simple": {
                          "example": "",
                          "type": "string"
                        },
                        "last_name": {
                          "example": "Snow",
                          "type": "string"
                        },
                        "max_guests": {
                          "example": 2,
                          "type": "integer"
                        },
                        "mf_ratio_female": {
                          "example": 0,
                          "type": "integer"
                        },
                        "mf_ratio_male": {
                          "example": 0,
                          "type": "integer"
                        },
                        "min_price": {
                          "type": "integer"
                        },
                        "onsite_payment": {
                          "description": "Returned only when a reservation has been made/confirmed",
                          "type": "number"
                        },
                        "onsite_payment_gratuity": {
                          "description": "Returned only when a reservation has been made/confirmed",
                          "type": "number"
                        },
                        "onsite_payment_net": {
                          "description": "Returned only when a reservation has been made/confirmed",
                          "type": "number"
                        },
                        "onsite_payment_tax": {
                          "description": "Returned only when a reservation has been made/confirmed",
                          "type": "number"
                        },
                        "onsite_payment_total": {
                          "description": "Returned only when a reservation has been made/confirmed",
                          "type": "number"
                        },
                        "perks": {
                          "example": {},
                          "type": "null"
                        },
                        "phone_number": {
                          "example": "212-555-7056",
                          "type": "string"
                        },
                        "prepayment": {
                          "description": "Returned only when a reservation has been made/confirmed",
                          "example": 22,
                          "type": "number"
                        },
                        "prepayment_gratuity": {
                          "description": "Returned only when a reservation has been made/confirmed",
                          "example": 2,
                          "type": "number"
                        },
                        "prepayment_net": {
                          "example": 20,
                          "type": "number"
                        },
                        "prepayment_service_charge": {
                          "description": "Returned only when a reservation has been made/confirmed",
                          "type": "number"
                        },
                        "prepayment_tax": {
                          "description": "Returned only when a reservation has been made/confirmed",
                          "type": "number"
                        },
                        "prepayment_total": {
                          "description": "Returned only when a reservation has been made/confirmed",
                          "example": 22,
                          "type": "number"
                        },
                        "real_datetime_of_slot": {
                          "description": "If after midnight for a venue with a 6am ‚ÄúStart of Day‚Äù this field would have a date of date+1 compared to the date searched",
                          "example": "2019-04-12 19:00:00",
                          "type": "string"
                        },
                        "reference_code": {
                          "example": "I9YJ5HC",
                          "type": "string"
                        },
                        "request_id": {
                          "description": "Returned only when a reservation has been made/confirmed",
                          "type": "string"
                        },
                        "status": {
                          "description": "The Reservation''s current status. Can be one of the following values (''On the Books'', ''Canceled'', ''No Show'', or ''Complete'').",
                          "example": "Reserved",
                          "type": "string"
                        },
                        "status_code": {
                          "description": "The Reservation''s current status. Can be one of the following values (''RESERVED'', ''CANCELED'', ''NO_SHOW'', or ''COMPLETE'').",
                          "example": "RESERVED",
                          "type": "string"
                        },
                        "status_display": {
                          "example": "",
                          "type": "string"
                        },
                        "status_simple": {
                          "example": "",
                          "type": "string"
                        },
                        "table_numbers": {
                          "description": "Returned only when include_table_numbers is checked in the Concierge's API settings",
                          "type": "string"
                        },
                        "time_slot_iso": {
                          "description": "The time in iso format(ie 21:00:00)",
                          "example": "19:00:00",
                          "type": "string"
                        },
                        "total_net_payment": {
                          "description": "Returned only when include_total_spend is checked in the Concierge's API settings",
                          "type": "number"
                        },
                        "total_payment": {
                          "description": "Returned only when a reservation has been made/confirmed",
                          "type": "number"
                        },
                        "updated": {
                          "example": "2019-04-11T21:30:34.704931",
                          "type": "string"
                        },
                        "upgrades": {
                          "items": {
                            "properties": {
                              "category": {
                                "properties": {
                                  "gratuity_percentage": {
                                    "example": "",
                                    "type": "integer"
                                  },
                                  "is_charging_gratuity": {
                                    "example": "",
                                    "type": "boolean"
                                  },
                                  "is_charging_service_charge": {
                                    "example": "",
                                    "type": "boolean"
                                  },
                                  "is_charging_tax": {
                                    "example": "",
                                    "type": "boolean"
                                  },
                                  "max_quantity": {
                                    "example": "",
                                    "type": "integer"
                                  },
                                  "max_quantity_type": {
                                    "example": "",
                                    "type": "string"
                                  },
                                  "min_quantity": {
                                    "example": "",
                                    "type": "integer"
                                  },
                                  "min_quantity_type": {
                                    "example": "",
                                    "type": "string"
                                  },
                                  "name": {
                                    "example": "",
                                    "type": "string"
                                  },
                                  "service_charge_percentage": {
                                    "example": "",
                                    "type": "integer"
                                  },
                                  "service_charge_type": {
                                    "example": "",
                                    "type": "string"
                                  },
                                  "tax_group_id": {
                                    "example": "",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "category_id": {
                                "example": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcjoLEg9uaWdodGoMCxIRc3JfVXBzZWxsQ2F0ZWdvcnk-YgIC468OP",
                                "type": "string"
                              },
                              "inventory_id": {
                                "example": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhckMLEg9uaWdodGxIac3JfVXBzZWxsQ2F0ZWdvcnlJbnZlbnRvcnkYgIC4l",
                                "type": "string"
                              },
                              "name": {
                                "example": "Charcuterie",
                                "type": "string"
                              },
                              "pos_item_id": {
                                "type": "string"
                              },
                              "price": {
                                "description": "Price in cents",
                                "example": 1500,
                                "type": "integer"
                              },
                              "quantity": {
                                "example": 1,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "user": {
                          "example": {
                            "id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yFQsSCGdhZV9Vc2VyGICA0JqHjagLDA",
                            "name": "Docs Concierge Group Demo API"
                          },
                          "type": "object"
                        },
                        "venue_id": {
                          "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgNCKuYezCgw",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "When a reservation cannot be found with the given reservation_id, SevenRooms will return 'Invalid reservation ID'."
          }
        }
      },
      "delete": {
        "summary": "Cancel a Reservation (Concierge)",
        "description": "Cancel a previously booked Reservation by a Concierge ID and Reservation ID.",
        "operationId": "cancel_concierge_reservation",
        "tags": [
          "Reservations"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "concierge_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Concierge",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservation_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Reservation.\n\n**Note:** The Reservation's `reference_code` can be used in place of the Reservation's `id`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CancelReservation_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Object containing the GUID of the canceled Reservation.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "reservation_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIgsSFW5pZ2h0bG9vcF9SZXNlcnZhdGlvbhiAgIihsLbCCQw"
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "reservation_id": {
                          "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIgsSFW5pZ2h0bG9vcF9SZXNlcnZhdGlvbhiAgIihsLbCCQw",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "When a reservation cannot be found with the given reservation_id, SevenRooms will return 'Invalid reservation ID'. When a reservation has already been cancelled, SevenRooms will return 'Reservation has already been cancelled.' If the cancelation cut-off time has passed, SevenRooms will return 'Reservation cannot be modified after the cancellation cut-off time'."
          },
          "404": {
            "description": "When a reservation cannot be found with the given reservation_id, SevenRooms will return 'The venue does not have record of this reservation.'"
          }
        }
      }
    },
    "/concierge/{concierge_id}/reservations/{reservation_id}/delete": {
      "delete": {
        "summary": "Delete a Reservation (Concierge)",
        "description": "Delete a previously booked Reservation based on Concierge ID and Reservation ID.",
        "operationId": "delete_reservation",
        "tags": [
          "Reservations"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "concierge_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Concierge",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservation_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Reservation.\n\n**Note:** The Reservation's `reference_code` can be used in place of the Reservation's `id`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object containing the ID of the deleted Reservation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "reservation_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIgsSFW5pZ2h0bG9vcF9SZXNlcnZhdGlvbhiAgIihsLbCCQw"
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "reservation_id": {
                          "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIgsSFW5pZ2h0bG9vcF9SZXNlcnZhdGlvbhiAgIihsLbCCQw",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/concierge_group/{concierge_group_id}/reservations/{reservation_id}/delete": {
      "delete": {
        "summary": "Delete a Reservation (Concierge Group)",
        "description": "Delete a previously booked Reservation based on Concierge Group ID and Reservation ID.",
        "operationId": "delete_concierge_group_reservation",
        "tags": [
          "Reservations"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "concierge_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Concierge",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservation_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Reservation.\n\n**Note:** The Reservation's `reference_code` can be used in place of the Reservation's `id`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object containing the ID of the deleted Reservation",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "reservation_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIgsSFW5pZ2h0bG9vcF9SZXNlcnZhdGlvbhiAgIihsLbCCQw"
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "reservation_id": {
                          "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIgsSFW5pZ2h0bG9vcF9SZXNlcnZhdGlvbhiAgIihsLbCCQw",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/concierge/{concierge_id}/venues/{venue_id}/availability/dining": {
      "get": {
        "summary": "Get Venue Availability",
        "description": "Get Availability for a Venue by a given Concierge ID and Venue ID.",
        "operationId": "get_venue_availability",
        "tags": [
          "Availability"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "concierge_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Concierge",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "venue_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "description": "Date in YYYY-MM-DD format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "party_size",
            "in": "query",
            "required": true,
            "description": "Number of people for a reservation",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "description": "Custom duration in minutes. Used to calculate price for the slot if the `timeslot.charge_type` is `reservation_slot` OR `person_slot`.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "supports_paid_reservations",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "supports_slot_options",
            "in": "query",
            "required": false,
            "description": "Include multiple slots for the same time if set to True. Different slots belongs to different access rules. Only returns first available time slot if False.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "include_upsells",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "include_payments_by_paylink",
            "in": "query",
            "required": false,
            "description": "When true, availability includes paid timeslots for payment gateways that are not Stripe.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_reservation_redirect_uri",
            "in": "query",
            "required": false,
            "description": "When true, availability includes redirect ",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "can_request",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "JSON list of Availability objects per shift. Each shift contains a `times` property with per time slot availability for the specified Venue.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "availability": [
                      {
                        "is_closed": false,
                        "is_empty_code": null,
                        "is_previous_version": false,
                        "request_max_size": null,
                        "request_min_size": null,
                        "should_retry_without_fast": false,
                        "timeslots": [
                          {
                            "access_persistent_id": null,
                            "access_rule_id": null,
                            "booking_policy": null,
                            "cancel_cutoff_hour": null,
                            "cancel_cutoff_num": null,
                            "cancel_cutoff_type": null,
                            "cancellation_policy": "We ask that any cancellation to your reservation be made no less than 24 hours prior. For no shows or late cancellations, you will be subject to fee of $25 per person that will be applied to the credit card on file",
                            "cutoff_hour": null,
                            "cutoff_num": null,
                            "cutoff_type": null,
                            "duration": null,
                            "experience_id": null,
                            "is_exclusive": false,
                            "is_held": true,
                            "is_requestable": null,
                            "min_spend": null,
                            "pacing_covers_remaining": null,
                            "payments": {
                              "apply_gratuity_charge": true,
                              "apply_service_charge": true,
                              "cc_party_size_min": 4,
                              "cc_payment_rule": "advanced_payment",
                              "charge_type": "person",
                              "cost": 10,
                              "default_gratuity": 10,
                              "gratuity": 10,
                              "gratuity_type": "SPECIFIC_GRATUITY",
                              "mandated_gratuity_amt": 5,
                              "pregratuity_total": 60.5,
                              "require_credit_card": true,
                              "require_gratuity_charge": false,
                              "service_charge": 10,
                              "service_charge_amt": 5,
                              "subtotal": 50,
                              "tax_amt": 5.5,
                              "tax_rate": 10
                            },
                            "real_datetime_of_slot": "2022-05-03 17:00:00",
                            "requires_credit_card": true,
                            "reservation_redirect_uri": "https://qa.sevenrooms.com/explore/venue_name_here/availability/uri/redirect?date=date&num_guests=party_size&access_persistent_id=access_persistent_id&widget_redirect=CHECKOUT",
                            "selected_automatic_upsells": null,
                            "shift_category": "DINNER",
                            "shift_persistent_id": null,
                            "slot_body_html": null,
                            "slot_body_plaintext": null,
                            "slot_name": null,
                            "slot_option_id": null,
                            "slot_photo_large": null,
                            "slot_photo_small": null,
                            "slot_title": null,
                            "sort_order": null,
                            "time": null,
                            "time_display": "5:00 pm",
                            "time_iso": null,
                            "time_slot": "5:00 PM",
                            "time_slot_iso": "17:00:00",
                            "type": null,
                            "upsells": null
                          }
                        ],
                        "venue": {
                          "_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgIDA_4X9CAw",
                          "address": "99 Bank St",
                          "cuisine": "German, Italian",
                          "id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgIDA_4X9CAw",
                          "name": "The Marrow (DEMO)",
                          "payment_policy": "We ask that any cancellation to your reservation be made no less than 24 hours prior. For no shows or late cancellations, you will be subject to fee of $25 per person that will be applied to the credit card on file.",
                          "payments": {
                            "account_id": "acct_1IMN5PAP11whhJSl",
                            "payment_system": "STRIPE",
                            "sevenrooms_public_key": "pk_test_wIPMArVIe1cLcAJiGnBJoamu"
                          },
                          "photos": [
                            {
                              "large": "https://demo.sevenrooms.com/.h/download/AZIfvaKJHFfast0jYr6",
                              "large_height": 310,
                              "large_width": 505,
                              "medium": "https://demo.sevenrooms.com/.h/download/AMBfv969TfFNfasdgfk89",
                              "medium_height": 215,
                              "medium_width": 300,
                              "raw": "https://demo.sevenrooms.com/.h/download/CMI0v949TfFNfDknBw",
                              "raw_height": 360,
                              "raw_width": 550,
                              "small": "https://demo.sevenrooms.com/.h/download/VMIfv969TfFNfDt0jYrw",
                              "small_height": 50,
                              "small_width": 80
                            }
                          ],
                          "requires_credit_card": false,
                          "sort_score": -2950,
                          "venue_allowing_requests": null,
                          "venue_class": "DINING"
                        }
                      }
                    ]
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "availability": {
                          "default": [],
                          "items": {
                            "properties": {
                              "is_closed": {
                                "example": false,
                                "type": "boolean"
                              },
                              "is_empty_code": {
                                "type": "boolean"
                              },
                              "is_previous_version": {
                                "example": false,
                                "type": "boolean"
                              },
                              "request_max_size": {
                                "type": "integer"
                              },
                              "request_min_size": {
                                "type": "integer"
                              },
                              "should_retry_without_fast": {
                                "example": false,
                                "type": "boolean"
                              },
                              "timeslots": {
                                "default": [],
                                "items": {
                                  "properties": {
                                    "access_persistent_id": {
                                      "type": "string"
                                    },
                                    "access_rule_id": {
                                      "type": "string"
                                    },
                                    "booking_policy": {
                                      "description": "Booking policy should match what is expected based on the access rule setup. Could be set to the default venue policy, could be a custom policy, or if GFL, could be a policy from the policy bank",
                                      "type": "string"
                                    },
                                    "cancel_cutoff_hour": {
                                      "type": "integer"
                                    },
                                    "cancel_cutoff_num": {
                                      "type": "integer"
                                    },
                                    "cancel_cutoff_type": {
                                      "type": "string"
                                    },
                                    "cancellation_policy": {
                                      "example": "We ask that any cancellation to your reservation be made no less than 24 hours prior. For no shows or late cancellations, you will be subject to fee of $25 per person that will be applied to the credit card on file",
                                      "type": "string"
                                    },
                                    "cutoff_hour": {
                                      "type": "integer"
                                    },
                                    "cutoff_num": {
                                      "type": "integer"
                                    },
                                    "cutoff_type": {
                                      "type": "string"
                                    },
                                    "duration": {
                                      "type": "integer"
                                    },
                                    "experience_id": {
                                      "type": "string"
                                    },
                                    "is_exclusive": {
                                      "description": "Is this timeslot only available to a single concierge?",
                                      "example": false,
                                      "type": "boolean"
                                    },
                                    "is_held": {
                                      "example": true,
                                      "type": "boolean"
                                    },
                                    "is_requestable": {
                                      "type": "boolean"
                                    },
                                    "min_spend": {
                                      "type": "integer"
                                    },
                                    "pacing_covers_remaining": {
                                      "type": "integer"
                                    },
                                    "payments": {
                                      "properties": {
                                        "apply_gratuity_charge": {
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "apply_service_charge": {
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "cc_party_size_min": {
                                          "example": 4,
                                          "type": "integer"
                                        },
                                        "cc_payment_rule": {
                                          "example": "advanced_payment",
                                          "type": "string"
                                        },
                                        "charge_type": {
                                          "example": "person",
                                          "type": "string"
                                        },
                                        "cost": {
                                          "example": 10,
                                          "type": "number"
                                        },
                                        "default_gratuity": {
                                          "example": 10,
                                          "type": "integer"
                                        },
                                        "gratuity": {
                                          "example": 10,
                                          "type": "number"
                                        },
                                        "gratuity_type": {
                                          "example": "SPECIFIC_GRATUITY",
                                          "type": "string"
                                        },
                                        "mandated_gratuity_amt": {
                                          "example": 5,
                                          "type": "number"
                                        },
                                        "pregratuity_total": {
                                          "example": 60.5,
                                          "type": "number"
                                        },
                                        "require_credit_card": {
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "require_gratuity_charge": {
                                          "example": false,
                                          "type": "boolean"
                                        },
                                        "service_charge": {
                                          "example": 10,
                                          "type": "number"
                                        },
                                        "service_charge_amt": {
                                          "example": 5,
                                          "type": "number"
                                        },
                                        "subtotal": {
                                          "example": 50,
                                          "type": "number"
                                        },
                                        "tax_amt": {
                                          "example": 5.5,
                                          "type": "number"
                                        },
                                        "tax_rate": {
                                          "example": 10,
                                          "type": "number"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "real_datetime_of_slot": {
                                      "description": "If after midnight for a venue with a 6am ‚ÄúStart of Day‚Äù this field would have a date of date+1 compared to the date searched",
                                      "example": "2022-05-03 17:00:00",
                                      "type": "string"
                                    },
                                    "requires_credit_card": {
                                      "example": true,
                                      "type": "boolean"
                                    },
                                    "reservation_redirect_uri": {
                                      "example": "https://qa.sevenrooms.com/explore/venue_name_here/availability/uri/redirect?date=date&num_guests=party_size&access_persistent_id=access_persistent_id&widget_redirect=CHECKOUT",
                                      "type": "string"
                                    },
                                    "selected_automatic_upsells": {
                                      "type": "null"
                                    },
                                    "shift_category": {
                                      "example": "DINNER",
                                      "type": "string"
                                    },
                                    "shift_persistent_id": {
                                      "type": "string"
                                    },
                                    "slot_body_html": {
                                      "description": "This property is only returned when support_slot_options=1 is passed in as a parameter to endpoint",
                                      "type": "string"
                                    },
                                    "slot_body_plaintext": {
                                      "description": "This property is only returned when support_slot_options=1 is passed in as a parameter to endpoint",
                                      "type": "string"
                                    },
                                    "slot_name": {
                                      "description": "This property is only returned when support_slot_options=1 is passed in as a parameter to endpoint",
                                      "type": "string"
                                    },
                                    "slot_option_id": {
                                      "description": "The access rule id.\nThis property is only returned when support_slot_options=1 is passed in as a parameter to endpoint",
                                      "type": "string"
                                    },
                                    "slot_photo_large": {
                                      "description": "The url for the slot photo.\nThis property is only returned when support_slot_options=1 is passed in as a parameter to endpoint",
                                      "type": "string"
                                    },
                                    "slot_photo_small": {
                                      "description": "The url for the slot photo.\nThis property is only returned when support_slot_options=1 is passed in as a parameter to endpoint",
                                      "type": "string"
                                    },
                                    "slot_title": {
                                      "description": "This property is only returned when support_slot_options=1 is passed in as a parameter to endpoint",
                                      "type": "string"
                                    },
                                    "sort_order": {
                                      "type": "integer"
                                    },
                                    "time": {
                                      "type": "string"
                                    },
                                    "time_display": {
                                      "example": "5:00 pm",
                                      "type": "string"
                                    },
                                    "time_iso": {
                                      "type": "string"
                                    },
                                    "time_slot": {
                                      "example": "5:00 PM",
                                      "type": "string"
                                    },
                                    "time_slot_iso": {
                                      "description": "The time in iso format(ie 21:00:00)",
                                      "example": "17:00:00",
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string"
                                    },
                                    "upsells": {
                                      "type": "null"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "venue": {
                                "properties": {
                                  "_id": {
                                    "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgIDA_4X9CAw",
                                    "type": "string"
                                  },
                                  "address": {
                                    "example": "99 Bank St",
                                    "type": "string"
                                  },
                                  "cuisine": {
                                    "example": "German, Italian",
                                    "type": "string"
                                  },
                                  "id": {
                                    "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgIDA_4X9CAw",
                                    "type": "string"
                                  },
                                  "name": {
                                    "example": "The Marrow (DEMO)",
                                    "type": "string"
                                  },
                                  "payment_policy": {
                                    "example": "We ask that any cancellation to your reservation be made no less than 24 hours prior. For no shows or late cancellations, you will be subject to fee of $25 per person that will be applied to the credit card on file.",
                                    "type": "string"
                                  },
                                  "payments": {
                                    "properties": {
                                      "account_id": {
                                        "example": "acct_1IMN5PAP11whhJSl",
                                        "type": "string"
                                      },
                                      "payment_system": {
                                        "example": "STRIPE",
                                        "type": "string"
                                      },
                                      "sevenrooms_public_key": {
                                        "description": "SevenRooms Stripe Payment Gateway public key",
                                        "example": "pk_test_wIPMArVIe1cLcAJiGnBJoamu",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "photos": {
                                    "items": {
                                      "properties": {
                                        "large": {
                                          "example": "https://demo.sevenrooms.com/.h/download/AZIfvaKJHFfast0jYr6",
                                          "type": "string"
                                        },
                                        "large_height": {
                                          "example": 310,
                                          "type": "integer"
                                        },
                                        "large_width": {
                                          "example": 505,
                                          "type": "integer"
                                        },
                                        "medium": {
                                          "example": "https://demo.sevenrooms.com/.h/download/AMBfv969TfFNfasdgfk89",
                                          "type": "string"
                                        },
                                        "medium_height": {
                                          "example": 215,
                                          "type": "integer"
                                        },
                                        "medium_width": {
                                          "example": 300,
                                          "type": "integer"
                                        },
                                        "raw": {
                                          "example": "https://demo.sevenrooms.com/.h/download/CMI0v949TfFNfDknBw",
                                          "type": "string"
                                        },
                                        "raw_height": {
                                          "example": 360,
                                          "type": "integer"
                                        },
                                        "raw_width": {
                                          "example": 550,
                                          "type": "integer"
                                        },
                                        "small": {
                                          "example": "https://demo.sevenrooms.com/.h/download/VMIfv969TfFNfDt0jYrw",
                                          "type": "string"
                                        },
                                        "small_height": {
                                          "example": 50,
                                          "type": "integer"
                                        },
                                        "small_width": {
                                          "example": 80,
                                          "type": "integer"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "requires_credit_card": {
                                    "example": false,
                                    "type": "boolean"
                                  },
                                  "sort_score": {
                                    "example": -2950,
                                    "type": "integer"
                                  },
                                  "venue_allowing_requests": {
                                    "type": "boolean"
                                  },
                                  "venue_class": {
                                    "example": "DINING",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/concierge/{concierge_id}/venues/{venue_id}/availability/range": {
      "get": {
        "summary": "Get Venue Availability Date Range (Beta)",
        "description": "<i><b>(Beta)</b></i> Get Date Range Availability for a Venue by a given Concierge ID and Venue ID.",
        "operationId": "get_venue_availability_date_range",
        "tags": [
          "Availability"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "concierge_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Concierge",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "venue_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "description": "Date in YYYY-MM-DD format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "party_size",
            "in": "query",
            "required": true,
            "description": "Number of people for a reservation",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "description": "Custom duration in minutes. Used to calculate price for the slot if the `timeslot.charge_type` is `reservation_slot` OR `person_slot`.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "supports_paid_reservations",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "supports_slot_options",
            "in": "query",
            "required": false,
            "description": "Include multiple slots for the same time if set to True. Different slots belongs to different access rules. Only returns first available time slot if False.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "include_upsells",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "days_out",
            "in": "query",
            "required": true,
            "description": "Number that represent amount of days to query",
            "schema": {
              "type": "integer",
              "default": 1,
              "maximum": 60,
              "minimum": 1
            }
          },
          {
            "name": "reservation_id",
            "in": "query",
            "required": false,
            "description": "Unique identifier of the reservation",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a JSON containing venue and Availability objects grouped by date. Each Availability contains a `times` property with per time slot availability for the specified date.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "dates": {
                      "'dates_key'": {
                        "is_closed": null,
                        "is_empty_code": null,
                        "is_previous_version": null,
                        "should_retry_without_fast": null,
                        "timeslots": [
                          {
                            "access_persistent_id": null,
                            "access_rule_id": null,
                            "booking_policy": null,
                            "cancel_cutoff_hour": null,
                            "cancel_cutoff_num": null,
                            "cancel_cutoff_type": null,
                            "cancellation_policy": "We ask that any cancellation to your reservation be made no less than 24 hours prior. For no shows or late cancellations, you will be subject to fee of $25 per person that will be applied to the credit card on file",
                            "cutoff_hour": null,
                            "cutoff_num": null,
                            "cutoff_type": null,
                            "duration": null,
                            "experience_id": null,
                            "is_exclusive": false,
                            "is_held": true,
                            "is_requestable": null,
                            "min_spend": null,
                            "pacing_covers_remaining": null,
                            "payments": {
                              "apply_gratuity_charge": true,
                              "apply_service_charge": true,
                              "cc_party_size_min": 4,
                              "cc_payment_rule": "advanced_payment",
                              "charge_type": "person",
                              "cost": 10,
                              "default_gratuity": 10,
                              "gratuity": 10,
                              "gratuity_type": "SPECIFIC_GRATUITY",
                              "mandated_gratuity_amt": 5,
                              "pregratuity_total": 60.5,
                              "require_credit_card": true,
                              "require_gratuity_charge": false,
                              "service_charge": 10,
                              "service_charge_amt": 5,
                              "subtotal": 50,
                              "tax_amt": 5.5,
                              "tax_rate": 10
                            },
                            "real_datetime_of_slot": "2022-05-03 17:00:00",
                            "requires_credit_card": true,
                            "reservation_redirect_uri": "https://qa.sevenrooms.com/explore/venue_name_here/availability/uri/redirect?date=date&num_guests=party_size&access_persistent_id=access_persistent_id&widget_redirect=CHECKOUT",
                            "selected_automatic_upsells": null,
                            "shift_category": "DINNER",
                            "shift_persistent_id": null,
                            "slot_body_html": null,
                            "slot_body_plaintext": null,
                            "slot_name": null,
                            "slot_option_id": null,
                            "slot_photo_large": null,
                            "slot_photo_small": null,
                            "slot_title": null,
                            "sort_order": null,
                            "time": null,
                            "time_display": "5:00 pm",
                            "time_iso": null,
                            "time_slot": "5:00 PM",
                            "time_slot_iso": "17:00:00",
                            "type": null,
                            "upsells": null
                          }
                        ]
                      }
                    },
                    "venue": {
                      "_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgIDA_4X9CAw",
                      "address": "99 Bank St",
                      "cuisine": "German, Italian",
                      "id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgIDA_4X9CAw",
                      "name": "The Marrow (DEMO)",
                      "payment_policy": "We ask that any cancellation to your reservation be made no less than 24 hours prior. For no shows or late cancellations, you will be subject to fee of $25 per person that will be applied to the credit card on file.",
                      "payments": {
                        "account_id": "acct_1IMN5PAP11whhJSl",
                        "payment_system": "STRIPE",
                        "sevenrooms_public_key": "pk_test_wIPMArVIe1cLcAJiGnBJoamu"
                      },
                      "photos": [
                        {
                          "large": "https://demo.sevenrooms.com/.h/download/AZIfvaKJHFfast0jYr6",
                          "large_height": 310,
                          "large_width": 505,
                          "medium": "https://demo.sevenrooms.com/.h/download/AMBfv969TfFNfasdgfk89",
                          "medium_height": 215,
                          "medium_width": 300,
                          "raw": "https://demo.sevenrooms.com/.h/download/CMI0v949TfFNfDknBw",
                          "raw_height": 360,
                          "raw_width": 550,
                          "small": "https://demo.sevenrooms.com/.h/download/VMIfv969TfFNfDt0jYrw",
                          "small_height": 50,
                          "small_width": 80
                        }
                      ],
                      "requires_credit_card": false,
                      "sort_score": -2950,
                      "venue_allowing_requests": null,
                      "venue_class": "DINING"
                    }
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "dates": {
                          "additionalProperties": {
                            "properties": {
                              "is_closed": {
                                "type": "boolean"
                              },
                              "is_empty_code": {
                                "type": "boolean"
                              },
                              "is_previous_version": {
                                "type": "boolean"
                              },
                              "should_retry_without_fast": {
                                "type": "boolean"
                              },
                              "timeslots": {
                                "default": [],
                                "items": {
                                  "properties": {
                                    "access_persistent_id": {
                                      "type": "string"
                                    },
                                    "access_rule_id": {
                                      "type": "string"
                                    },
                                    "booking_policy": {
                                      "description": "Booking policy should match what is expected based on the access rule setup. Could be set to the default venue policy, could be a custom policy, or if GFL, could be a policy from the policy bank",
                                      "type": "string"
                                    },
                                    "cancel_cutoff_hour": {
                                      "type": "integer"
                                    },
                                    "cancel_cutoff_num": {
                                      "type": "integer"
                                    },
                                    "cancel_cutoff_type": {
                                      "type": "string"
                                    },
                                    "cancellation_policy": {
                                      "example": "We ask that any cancellation to your reservation be made no less than 24 hours prior. For no shows or late cancellations, you will be subject to fee of $25 per person that will be applied to the credit card on file",
                                      "type": "string"
                                    },
                                    "cutoff_hour": {
                                      "type": "integer"
                                    },
                                    "cutoff_num": {
                                      "type": "integer"
                                    },
                                    "cutoff_type": {
                                      "type": "string"
                                    },
                                    "duration": {
                                      "type": "integer"
                                    },
                                    "experience_id": {
                                      "type": "string"
                                    },
                                    "is_exclusive": {
                                      "description": "Is this timeslot only available to a single concierge?",
                                      "example": false,
                                      "type": "boolean"
                                    },
                                    "is_held": {
                                      "example": true,
                                      "type": "boolean"
                                    },
                                    "is_requestable": {
                                      "type": "boolean"
                                    },
                                    "min_spend": {
                                      "type": "integer"
                                    },
                                    "pacing_covers_remaining": {
                                      "type": "integer"
                                    },
                                    "payments": {
                                      "properties": {
                                        "apply_gratuity_charge": {
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "apply_service_charge": {
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "cc_party_size_min": {
                                          "example": 4,
                                          "type": "integer"
                                        },
                                        "cc_payment_rule": {
                                          "example": "advanced_payment",
                                          "type": "string"
                                        },
                                        "charge_type": {
                                          "example": "person",
                                          "type": "string"
                                        },
                                        "cost": {
                                          "example": 10,
                                          "type": "number"
                                        },
                                        "default_gratuity": {
                                          "example": 10,
                                          "type": "integer"
                                        },
                                        "gratuity": {
                                          "example": 10,
                                          "type": "number"
                                        },
                                        "gratuity_type": {
                                          "example": "SPECIFIC_GRATUITY",
                                          "type": "string"
                                        },
                                        "mandated_gratuity_amt": {
                                          "example": 5,
                                          "type": "number"
                                        },
                                        "pregratuity_total": {
                                          "example": 60.5,
                                          "type": "number"
                                        },
                                        "require_credit_card": {
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "require_gratuity_charge": {
                                          "example": false,
                                          "type": "boolean"
                                        },
                                        "service_charge": {
                                          "example": 10,
                                          "type": "number"
                                        },
                                        "service_charge_amt": {
                                          "example": 5,
                                          "type": "number"
                                        },
                                        "subtotal": {
                                          "example": 50,
                                          "type": "number"
                                        },
                                        "tax_amt": {
                                          "example": 5.5,
                                          "type": "number"
                                        },
                                        "tax_rate": {
                                          "example": 10,
                                          "type": "number"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "real_datetime_of_slot": {
                                      "description": "If after midnight for a venue with a 6am ‚ÄúStart of Day‚Äù this field would have a date of date+1 compared to the date searched",
                                      "example": "2022-05-03 17:00:00",
                                      "type": "string"
                                    },
                                    "requires_credit_card": {
                                      "example": true,
                                      "type": "boolean"
                                    },
                                    "reservation_redirect_uri": {
                                      "example": "https://qa.sevenrooms.com/explore/venue_name_here/availability/uri/redirect?date=date&num_guests=party_size&access_persistent_id=access_persistent_id&widget_redirect=CHECKOUT",
                                      "type": "string"
                                    },
                                    "selected_automatic_upsells": {
                                      "type": "null"
                                    },
                                    "shift_category": {
                                      "example": "DINNER",
                                      "type": "string"
                                    },
                                    "shift_persistent_id": {
                                      "type": "string"
                                    },
                                    "slot_body_html": {
                                      "description": "This property is only returned when support_slot_options=1 is passed in as a parameter to endpoint",
                                      "type": "string"
                                    },
                                    "slot_body_plaintext": {
                                      "description": "This property is only returned when support_slot_options=1 is passed in as a parameter to endpoint",
                                      "type": "string"
                                    },
                                    "slot_name": {
                                      "description": "This property is only returned when support_slot_options=1 is passed in as a parameter to endpoint",
                                      "type": "string"
                                    },
                                    "slot_option_id": {
                                      "description": "The access rule id.\nThis property is only returned when support_slot_options=1 is passed in as a parameter to endpoint",
                                      "type": "string"
                                    },
                                    "slot_photo_large": {
                                      "description": "The url for the slot photo.\nThis property is only returned when support_slot_options=1 is passed in as a parameter to endpoint",
                                      "type": "string"
                                    },
                                    "slot_photo_small": {
                                      "description": "The url for the slot photo.\nThis property is only returned when support_slot_options=1 is passed in as a parameter to endpoint",
                                      "type": "string"
                                    },
                                    "slot_title": {
                                      "description": "This property is only returned when support_slot_options=1 is passed in as a parameter to endpoint",
                                      "type": "string"
                                    },
                                    "sort_order": {
                                      "type": "integer"
                                    },
                                    "time": {
                                      "type": "string"
                                    },
                                    "time_display": {
                                      "example": "5:00 pm",
                                      "type": "string"
                                    },
                                    "time_iso": {
                                      "type": "string"
                                    },
                                    "time_slot": {
                                      "example": "5:00 PM",
                                      "type": "string"
                                    },
                                    "time_slot_iso": {
                                      "description": "The time in iso format(ie 21:00:00)",
                                      "example": "17:00:00",
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string"
                                    },
                                    "upsells": {
                                      "type": "null"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "description": "A dictionary where keys are dates (YYYY-MM-DD) and values are timeslot information.",
                          "type": "object"
                        },
                        "venue": {
                          "properties": {
                            "_id": {
                              "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgIDA_4X9CAw",
                              "type": "string"
                            },
                            "address": {
                              "example": "99 Bank St",
                              "type": "string"
                            },
                            "cuisine": {
                              "example": "German, Italian",
                              "type": "string"
                            },
                            "id": {
                              "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgIDA_4X9CAw",
                              "type": "string"
                            },
                            "name": {
                              "example": "The Marrow (DEMO)",
                              "type": "string"
                            },
                            "payment_policy": {
                              "example": "We ask that any cancellation to your reservation be made no less than 24 hours prior. For no shows or late cancellations, you will be subject to fee of $25 per person that will be applied to the credit card on file.",
                              "type": "string"
                            },
                            "payments": {
                              "properties": {
                                "account_id": {
                                  "example": "acct_1IMN5PAP11whhJSl",
                                  "type": "string"
                                },
                                "payment_system": {
                                  "example": "STRIPE",
                                  "type": "string"
                                },
                                "sevenrooms_public_key": {
                                  "description": "SevenRooms Stripe Payment Gateway public key",
                                  "example": "pk_test_wIPMArVIe1cLcAJiGnBJoamu",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "photos": {
                              "items": {
                                "properties": {
                                  "large": {
                                    "example": "https://demo.sevenrooms.com/.h/download/AZIfvaKJHFfast0jYr6",
                                    "type": "string"
                                  },
                                  "large_height": {
                                    "example": 310,
                                    "type": "integer"
                                  },
                                  "large_width": {
                                    "example": 505,
                                    "type": "integer"
                                  },
                                  "medium": {
                                    "example": "https://demo.sevenrooms.com/.h/download/AMBfv969TfFNfasdgfk89",
                                    "type": "string"
                                  },
                                  "medium_height": {
                                    "example": 215,
                                    "type": "integer"
                                  },
                                  "medium_width": {
                                    "example": 300,
                                    "type": "integer"
                                  },
                                  "raw": {
                                    "example": "https://demo.sevenrooms.com/.h/download/CMI0v949TfFNfDknBw",
                                    "type": "string"
                                  },
                                  "raw_height": {
                                    "example": 360,
                                    "type": "integer"
                                  },
                                  "raw_width": {
                                    "example": 550,
                                    "type": "integer"
                                  },
                                  "small": {
                                    "example": "https://demo.sevenrooms.com/.h/download/VMIfv969TfFNfDt0jYrw",
                                    "type": "string"
                                  },
                                  "small_height": {
                                    "example": 50,
                                    "type": "integer"
                                  },
                                  "small_width": {
                                    "example": 80,
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "requires_credit_card": {
                              "example": false,
                              "type": "boolean"
                            },
                            "sort_score": {
                              "example": -2950,
                              "type": "integer"
                            },
                            "venue_allowing_requests": {
                              "type": "boolean"
                            },
                            "venue_class": {
                              "example": "DINING",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/concierge/{concierge_id}/venues/{venue_id}/holds": {
      "put": {
        "summary": "Create a Reservation Hold",
        "description": "Book a reservation hold for a specific time with an optional expiration time.",
        "operationId": "create_reservation_hold",
        "tags": [
          "Reservation Holds"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/venue_id_path"
          },
          {
            "$ref": "#/components/parameters/path"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateReservationHold_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Reservation Hold object\n\n**WARNING: The SevenRooms Reservations API is a dynamic JSON API, any response field may contain a null value.**",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "hold_duration_sec": {
                          "type": "integer"
                        },
                        "access_persistent_id": {
                          "type": "string"
                        },
                        "reservation_hold_id": {
                          "type": "string",
                          "description": "Unique identifier for a Reservation Hold"
                        },
                        "shift_persistent_id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "hold_duration_sec": 300,
                    "access_persistent_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkM-1549771833.76-0.0955918112665",
                    "reservation_hold_id": "1550988003.536256",
                    "shift_persistent_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkM-DINNER-1542390516.02"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/concierge/{concierge_id}/venues/{venue_id}/holds/{reservation_hold_id}/release": {
      "post": {
        "summary": "Delete a Reservation Hold",
        "description": "Release a previously created reservation hold",
        "operationId": "delete_reservation_hold",
        "tags": [
          "Reservation Holds"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/venue_id_path"
          },
          {
            "$ref": "#/components/parameters/reservation_hold_id_path"
          },
          {
            "$ref": "#/components/parameters/path"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeleteReservationHold_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Object containing HTTP response status",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "message": "Hold <1550988003.536256> released normally"
                }
              }
            }
          }
        }
      }
    },
    "/concierge/{concierge_id}/availability/dining/venues": {
      "get": {
        "summary": "Get Specific Venue Availability",
        "description": "Get Availability for a Venue or collection of Venues by a given Concierge ID and a list of Venue IDs.",
        "operationId": "get_specific_venue_availability",
        "tags": [
          "Availability"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "concierge_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Concierge",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "description": "Date in YYYY-MM-DD format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "party_size",
            "in": "query",
            "required": true,
            "description": "Number of people for a reservation",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "description": "Custom duration in minutes. Used to calculate price for the slot if the `timeslot.charge_type` is `reservation_slot` OR `person_slot`.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "supports_paid_reservations",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "supports_slot_options",
            "in": "query",
            "required": false,
            "description": "Include multiple slots for the same time if set to True. Different slots belongs to different access rules. Only returns first available time slot if False.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "include_upsells",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "venue_ids",
            "in": "query",
            "required": true,
            "description": "Comma-separated list of unique identifiers for a collection of Venues for which to query availability.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_payments_by_paylink",
            "in": "query",
            "required": false,
            "description": "When true, availability includes paid timeslots for payment gateways that are not Stripe.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_reservation_redirect_uri",
            "in": "query",
            "required": false,
            "description": "When true, availability includes redirect ",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "venue_name",
            "in": "query",
            "required": false,
            "description": "Name of the Venue for which to query availability.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "JSON array of Availability objects per shift. Each shift contains a `times` property with per time slot availability for each Venue filtered by municipality.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "availability": [
                      {
                        "is_closed": false,
                        "is_empty_code": null,
                        "is_previous_version": false,
                        "request_max_size": null,
                        "request_min_size": null,
                        "should_retry_without_fast": false,
                        "timeslots": [
                          {
                            "access_persistent_id": null,
                            "access_rule_id": null,
                            "booking_policy": null,
                            "cancel_cutoff_hour": null,
                            "cancel_cutoff_num": null,
                            "cancel_cutoff_type": null,
                            "cancellation_policy": "We ask that any cancellation to your reservation be made no less than 24 hours prior. For no shows or late cancellations, you will be subject to fee of $25 per person that will be applied to the credit card on file",
                            "cutoff_hour": null,
                            "cutoff_num": null,
                            "cutoff_type": null,
                            "duration": null,
                            "experience_id": null,
                            "is_exclusive": false,
                            "is_held": true,
                            "is_requestable": null,
                            "min_spend": null,
                            "pacing_covers_remaining": null,
                            "payments": {
                              "apply_gratuity_charge": true,
                              "apply_service_charge": true,
                              "cc_party_size_min": 4,
                              "cc_payment_rule": "advanced_payment",
                              "charge_type": "person",
                              "cost": 10,
                              "default_gratuity": 10,
                              "gratuity": 10,
                              "gratuity_type": "SPECIFIC_GRATUITY",
                              "mandated_gratuity_amt": 5,
                              "pregratuity_total": 60.5,
                              "require_credit_card": true,
                              "require_gratuity_charge": false,
                              "service_charge": 10,
                              "service_charge_amt": 5,
                              "subtotal": 50,
                              "tax_amt": 5.5,
                              "tax_rate": 10
                            },
                            "real_datetime_of_slot": "2022-05-03 17:00:00",
                            "requires_credit_card": true,
                            "reservation_redirect_uri": "https://qa.sevenrooms.com/explore/venue_name_here/availability/uri/redirect?date=date&num_guests=party_size&access_persistent_id=access_persistent_id&widget_redirect=CHECKOUT",
                            "selected_automatic_upsells": null,
                            "shift_category": "DINNER",
                            "shift_persistent_id": null,
                            "slot_body_html": null,
                            "slot_body_plaintext": null,
                            "slot_name": null,
                            "slot_option_id": null,
                            "slot_photo_large": null,
                            "slot_photo_small": null,
                            "slot_title": null,
                            "sort_order": null,
                            "time": null,
                            "time_display": "5:00 pm",
                            "time_iso": null,
                            "time_slot": "5:00 PM",
                            "time_slot_iso": "17:00:00",
                            "type": null,
                            "upsells": null
                          }
                        ],
                        "venue": {
                          "_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgIDA_4X9CAw",
                          "address": "99 Bank St",
                          "cuisine": "German, Italian",
                          "id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgIDA_4X9CAw",
                          "name": "The Marrow (DEMO)",
                          "payment_policy": "We ask that any cancellation to your reservation be made no less than 24 hours prior. For no shows or late cancellations, you will be subject to fee of $25 per person that will be applied to the credit card on file.",
                          "payments": {
                            "account_id": "acct_1IMN5PAP11whhJSl",
                            "payment_system": "STRIPE",
                            "sevenrooms_public_key": "pk_test_wIPMArVIe1cLcAJiGnBJoamu"
                          },
                          "photos": [
                            {
                              "large": "https://demo.sevenrooms.com/.h/download/AZIfvaKJHFfast0jYr6",
                              "large_height": 310,
                              "large_width": 505,
                              "medium": "https://demo.sevenrooms.com/.h/download/AMBfv969TfFNfasdgfk89",
                              "medium_height": 215,
                              "medium_width": 300,
                              "raw": "https://demo.sevenrooms.com/.h/download/CMI0v949TfFNfDknBw",
                              "raw_height": 360,
                              "raw_width": 550,
                              "small": "https://demo.sevenrooms.com/.h/download/VMIfv969TfFNfDt0jYrw",
                              "small_height": 50,
                              "small_width": 80
                            }
                          ],
                          "requires_credit_card": false,
                          "sort_score": -2950,
                          "venue_allowing_requests": null,
                          "venue_class": "DINING"
                        }
                      }
                    ]
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "availability": {
                          "default": [],
                          "items": {
                            "properties": {
                              "is_closed": {
                                "example": false,
                                "type": "boolean"
                              },
                              "is_empty_code": {
                                "type": "boolean"
                              },
                              "is_previous_version": {
                                "example": false,
                                "type": "boolean"
                              },
                              "request_max_size": {
                                "type": "integer"
                              },
                              "request_min_size": {
                                "type": "integer"
                              },
                              "should_retry_without_fast": {
                                "example": false,
                                "type": "boolean"
                              },
                              "timeslots": {
                                "default": [],
                                "items": {
                                  "properties": {
                                    "access_persistent_id": {
                                      "type": "string"
                                    },
                                    "access_rule_id": {
                                      "type": "string"
                                    },
                                    "booking_policy": {
                                      "description": "Booking policy should match what is expected based on the access rule setup. Could be set to the default venue policy, could be a custom policy, or if GFL, could be a policy from the policy bank",
                                      "type": "string"
                                    },
                                    "cancel_cutoff_hour": {
                                      "type": "integer"
                                    },
                                    "cancel_cutoff_num": {
                                      "type": "integer"
                                    },
                                    "cancel_cutoff_type": {
                                      "type": "string"
                                    },
                                    "cancellation_policy": {
                                      "example": "We ask that any cancellation to your reservation be made no less than 24 hours prior. For no shows or late cancellations, you will be subject to fee of $25 per person that will be applied to the credit card on file",
                                      "type": "string"
                                    },
                                    "cutoff_hour": {
                                      "type": "integer"
                                    },
                                    "cutoff_num": {
                                      "type": "integer"
                                    },
                                    "cutoff_type": {
                                      "type": "string"
                                    },
                                    "duration": {
                                      "type": "integer"
                                    },
                                    "experience_id": {
                                      "type": "string"
                                    },
                                    "is_exclusive": {
                                      "description": "Is this timeslot only available to a single concierge?",
                                      "example": false,
                                      "type": "boolean"
                                    },
                                    "is_held": {
                                      "example": true,
                                      "type": "boolean"
                                    },
                                    "is_requestable": {
                                      "type": "boolean"
                                    },
                                    "min_spend": {
                                      "type": "integer"
                                    },
                                    "pacing_covers_remaining": {
                                      "type": "integer"
                                    },
                                    "payments": {
                                      "properties": {
                                        "apply_gratuity_charge": {
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "apply_service_charge": {
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "cc_party_size_min": {
                                          "example": 4,
                                          "type": "integer"
                                        },
                                        "cc_payment_rule": {
                                          "example": "advanced_payment",
                                          "type": "string"
                                        },
                                        "charge_type": {
                                          "example": "person",
                                          "type": "string"
                                        },
                                        "cost": {
                                          "example": 10,
                                          "type": "number"
                                        },
                                        "default_gratuity": {
                                          "example": 10,
                                          "type": "integer"
                                        },
                                        "gratuity": {
                                          "example": 10,
                                          "type": "number"
                                        },
                                        "gratuity_type": {
                                          "example": "SPECIFIC_GRATUITY",
                                          "type": "string"
                                        },
                                        "mandated_gratuity_amt": {
                                          "example": 5,
                                          "type": "number"
                                        },
                                        "pregratuity_total": {
                                          "example": 60.5,
                                          "type": "number"
                                        },
                                        "require_credit_card": {
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "require_gratuity_charge": {
                                          "example": false,
                                          "type": "boolean"
                                        },
                                        "service_charge": {
                                          "example": 10,
                                          "type": "number"
                                        },
                                        "service_charge_amt": {
                                          "example": 5,
                                          "type": "number"
                                        },
                                        "subtotal": {
                                          "example": 50,
                                          "type": "number"
                                        },
                                        "tax_amt": {
                                          "example": 5.5,
                                          "type": "number"
                                        },
                                        "tax_rate": {
                                          "example": 10,
                                          "type": "number"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "real_datetime_of_slot": {
                                      "description": "If after midnight for a venue with a 6am ‚ÄúStart of Day‚Äù this field would have a date of date+1 compared to the date searched",
                                      "example": "2022-05-03 17:00:00",
                                      "type": "string"
                                    },
                                    "requires_credit_card": {
                                      "example": true,
                                      "type": "boolean"
                                    },
                                    "reservation_redirect_uri": {
                                      "example": "https://qa.sevenrooms.com/explore/venue_name_here/availability/uri/redirect?date=date&num_guests=party_size&access_persistent_id=access_persistent_id&widget_redirect=CHECKOUT",
                                      "type": "string"
                                    },
                                    "selected_automatic_upsells": {
                                      "type": "null"
                                    },
                                    "shift_category": {
                                      "example": "DINNER",
                                      "type": "string"
                                    },
                                    "shift_persistent_id": {
                                      "type": "string"
                                    },
                                    "slot_body_html": {
                                      "description": "This property is only returned when support_slot_options=1 is passed in as a parameter to endpoint",
                                      "type": "string"
                                    },
                                    "slot_body_plaintext": {
                                      "description": "This property is only returned when support_slot_options=1 is passed in as a parameter to endpoint",
                                      "type": "string"
                                    },
                                    "slot_name": {
                                      "description": "This property is only returned when support_slot_options=1 is passed in as a parameter to endpoint",
                                      "type": "string"
                                    },
                                    "slot_option_id": {
                                      "description": "The access rule id.\nThis property is only returned when support_slot_options=1 is passed in as a parameter to endpoint",
                                      "type": "string"
                                    },
                                    "slot_photo_large": {
                                      "description": "The url for the slot photo.\nThis property is only returned when support_slot_options=1 is passed in as a parameter to endpoint",
                                      "type": "string"
                                    },
                                    "slot_photo_small": {
                                      "description": "The url for the slot photo.\nThis property is only returned when support_slot_options=1 is passed in as a parameter to endpoint",
                                      "type": "string"
                                    },
                                    "slot_title": {
                                      "description": "This property is only returned when support_slot_options=1 is passed in as a parameter to endpoint",
                                      "type": "string"
                                    },
                                    "sort_order": {
                                      "type": "integer"
                                    },
                                    "time": {
                                      "type": "string"
                                    },
                                    "time_display": {
                                      "example": "5:00 pm",
                                      "type": "string"
                                    },
                                    "time_iso": {
                                      "type": "string"
                                    },
                                    "time_slot": {
                                      "example": "5:00 PM",
                                      "type": "string"
                                    },
                                    "time_slot_iso": {
                                      "description": "The time in iso format(ie 21:00:00)",
                                      "example": "17:00:00",
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string"
                                    },
                                    "upsells": {
                                      "type": "null"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "venue": {
                                "properties": {
                                  "_id": {
                                    "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgIDA_4X9CAw",
                                    "type": "string"
                                  },
                                  "address": {
                                    "example": "99 Bank St",
                                    "type": "string"
                                  },
                                  "cuisine": {
                                    "example": "German, Italian",
                                    "type": "string"
                                  },
                                  "id": {
                                    "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgIDA_4X9CAw",
                                    "type": "string"
                                  },
                                  "name": {
                                    "example": "The Marrow (DEMO)",
                                    "type": "string"
                                  },
                                  "payment_policy": {
                                    "example": "We ask that any cancellation to your reservation be made no less than 24 hours prior. For no shows or late cancellations, you will be subject to fee of $25 per person that will be applied to the credit card on file.",
                                    "type": "string"
                                  },
                                  "payments": {
                                    "properties": {
                                      "account_id": {
                                        "example": "acct_1IMN5PAP11whhJSl",
                                        "type": "string"
                                      },
                                      "payment_system": {
                                        "example": "STRIPE",
                                        "type": "string"
                                      },
                                      "sevenrooms_public_key": {
                                        "description": "SevenRooms Stripe Payment Gateway public key",
                                        "example": "pk_test_wIPMArVIe1cLcAJiGnBJoamu",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "photos": {
                                    "items": {
                                      "properties": {
                                        "large": {
                                          "example": "https://demo.sevenrooms.com/.h/download/AZIfvaKJHFfast0jYr6",
                                          "type": "string"
                                        },
                                        "large_height": {
                                          "example": 310,
                                          "type": "integer"
                                        },
                                        "large_width": {
                                          "example": 505,
                                          "type": "integer"
                                        },
                                        "medium": {
                                          "example": "https://demo.sevenrooms.com/.h/download/AMBfv969TfFNfasdgfk89",
                                          "type": "string"
                                        },
                                        "medium_height": {
                                          "example": 215,
                                          "type": "integer"
                                        },
                                        "medium_width": {
                                          "example": 300,
                                          "type": "integer"
                                        },
                                        "raw": {
                                          "example": "https://demo.sevenrooms.com/.h/download/CMI0v949TfFNfDknBw",
                                          "type": "string"
                                        },
                                        "raw_height": {
                                          "example": 360,
                                          "type": "integer"
                                        },
                                        "raw_width": {
                                          "example": 550,
                                          "type": "integer"
                                        },
                                        "small": {
                                          "example": "https://demo.sevenrooms.com/.h/download/VMIfv969TfFNfDt0jYrw",
                                          "type": "string"
                                        },
                                        "small_height": {
                                          "example": 50,
                                          "type": "integer"
                                        },
                                        "small_width": {
                                          "example": 80,
                                          "type": "integer"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "requires_credit_card": {
                                    "example": false,
                                    "type": "boolean"
                                  },
                                  "sort_score": {
                                    "example": -2950,
                                    "type": "integer"
                                  },
                                  "venue_allowing_requests": {
                                    "type": "boolean"
                                  },
                                  "venue_class": {
                                    "example": "DINING",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "204": {
            "description": "No Content response returned means there are no times slots avaialable"
          }
        }
      }
    },
    "/concierge/{concierge_id}/availability/dining": {
      "get": {
        "summary": "List all Venue Availability",
        "description": "Get Availability for all Venues a Concierge account has access to by a given Concierge ID.",
        "operationId": "get_all_venue_availability",
        "tags": [
          "Availability"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "concierge_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Concierge",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "description": "Date in YYYY-MM-DD format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "party_size",
            "in": "query",
            "required": true,
            "description": "Number of people for a reservation",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "description": "Custom duration in minutes. Used to calculate price for the slot if the `timeslot.charge_type` is `reservation_slot` OR `person_slot`.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "supports_paid_reservations",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "supports_slot_options",
            "in": "query",
            "required": false,
            "description": "Include multiple slots for the same time if set to True. Different slots belongs to different access rules. Only returns first available time slot if False.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "include_upsells",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "municipality_id",
            "in": "query",
            "required": true,
            "description": "ID of the municpality to filter results by.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "venue_name",
            "in": "query",
            "required": false,
            "description": "Name of the Venue for which to query availability.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "postal_code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_payments_by_paylink",
            "in": "query",
            "required": false,
            "description": "When true, availability includes paid timeslots for payment gateways that are not Stripe.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_reservation_redirect_uri",
            "in": "query",
            "required": false,
            "description": "When true, availability includes redirect ",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservation_id",
            "in": "query",
            "required": false,
            "description": "Unique identifier of the reservation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "JSON array of Availability objects per shift. Each shift contains a `times` property with per time slot availability for each Venue filtered by municipality or postal code.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "availability": [
                      {
                        "is_closed": false,
                        "is_empty_code": null,
                        "is_previous_version": false,
                        "request_max_size": null,
                        "request_min_size": null,
                        "should_retry_without_fast": false,
                        "timeslots": [
                          {
                            "access_persistent_id": null,
                            "access_rule_id": null,
                            "booking_policy": null,
                            "cancel_cutoff_hour": null,
                            "cancel_cutoff_num": null,
                            "cancel_cutoff_type": null,
                            "cancellation_policy": "We ask that any cancellation to your reservation be made no less than 24 hours prior. For no shows or late cancellations, you will be subject to fee of $25 per person that will be applied to the credit card on file",
                            "cutoff_hour": null,
                            "cutoff_num": null,
                            "cutoff_type": null,
                            "duration": null,
                            "experience_id": null,
                            "is_exclusive": false,
                            "is_held": true,
                            "is_requestable": null,
                            "min_spend": null,
                            "pacing_covers_remaining": null,
                            "payments": {
                              "apply_gratuity_charge": true,
                              "apply_service_charge": true,
                              "cc_party_size_min": 4,
                              "cc_payment_rule": "advanced_payment",
                              "charge_type": "person",
                              "cost": 10,
                              "default_gratuity": 10,
                              "gratuity": 10,
                              "gratuity_type": "SPECIFIC_GRATUITY",
                              "mandated_gratuity_amt": 5,
                              "pregratuity_total": 60.5,
                              "require_credit_card": true,
                              "require_gratuity_charge": false,
                              "service_charge": 10,
                              "service_charge_amt": 5,
                              "subtotal": 50,
                              "tax_amt": 5.5,
                              "tax_rate": 10
                            },
                            "real_datetime_of_slot": "2022-05-03 17:00:00",
                            "requires_credit_card": true,
                            "reservation_redirect_uri": "https://qa.sevenrooms.com/explore/venue_name_here/availability/uri/redirect?date=date&num_guests=party_size&access_persistent_id=access_persistent_id&widget_redirect=CHECKOUT",
                            "selected_automatic_upsells": null,
                            "shift_category": "DINNER",
                            "shift_persistent_id": null,
                            "slot_body_html": null,
                            "slot_body_plaintext": null,
                            "slot_name": null,
                            "slot_option_id": null,
                            "slot_photo_large": null,
                            "slot_photo_small": null,
                            "slot_title": null,
                            "sort_order": null,
                            "time": null,
                            "time_display": "5:00 pm",
                            "time_iso": null,
                            "time_slot": "5:00 PM",
                            "time_slot_iso": "17:00:00",
                            "type": null,
                            "upsells": null
                          }
                        ],
                        "venue": {
                          "_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgIDA_4X9CAw",
                          "address": "99 Bank St",
                          "cuisine": "German, Italian",
                          "id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgIDA_4X9CAw",
                          "name": "The Marrow (DEMO)",
                          "payment_policy": "We ask that any cancellation to your reservation be made no less than 24 hours prior. For no shows or late cancellations, you will be subject to fee of $25 per person that will be applied to the credit card on file.",
                          "payments": {
                            "account_id": "acct_1IMN5PAP11whhJSl",
                            "payment_system": "STRIPE",
                            "sevenrooms_public_key": "pk_test_wIPMArVIe1cLcAJiGnBJoamu"
                          },
                          "photos": [
                            {
                              "large": "https://demo.sevenrooms.com/.h/download/AZIfvaKJHFfast0jYr6",
                              "large_height": 310,
                              "large_width": 505,
                              "medium": "https://demo.sevenrooms.com/.h/download/AMBfv969TfFNfasdgfk89",
                              "medium_height": 215,
                              "medium_width": 300,
                              "raw": "https://demo.sevenrooms.com/.h/download/CMI0v949TfFNfDknBw",
                              "raw_height": 360,
                              "raw_width": 550,
                              "small": "https://demo.sevenrooms.com/.h/download/VMIfv969TfFNfDt0jYrw",
                              "small_height": 50,
                              "small_width": 80
                            }
                          ],
                          "requires_credit_card": false,
                          "sort_score": -2950,
                          "venue_allowing_requests": null,
                          "venue_class": "DINING"
                        }
                      }
                    ]
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "availability": {
                          "default": [],
                          "items": {
                            "properties": {
                              "is_closed": {
                                "example": false,
                                "type": "boolean"
                              },
                              "is_empty_code": {
                                "type": "boolean"
                              },
                              "is_previous_version": {
                                "example": false,
                                "type": "boolean"
                              },
                              "request_max_size": {
                                "type": "integer"
                              },
                              "request_min_size": {
                                "type": "integer"
                              },
                              "should_retry_without_fast": {
                                "example": false,
                                "type": "boolean"
                              },
                              "timeslots": {
                                "default": [],
                                "items": {
                                  "properties": {
                                    "access_persistent_id": {
                                      "type": "string"
                                    },
                                    "access_rule_id": {
                                      "type": "string"
                                    },
                                    "booking_policy": {
                                      "description": "Booking policy should match what is expected based on the access rule setup. Could be set to the default venue policy, could be a custom policy, or if GFL, could be a policy from the policy bank",
                                      "type": "string"
                                    },
                                    "cancel_cutoff_hour": {
                                      "type": "integer"
                                    },
                                    "cancel_cutoff_num": {
                                      "type": "integer"
                                    },
                                    "cancel_cutoff_type": {
                                      "type": "string"
                                    },
                                    "cancellation_policy": {
                                      "example": "We ask that any cancellation to your reservation be made no less than 24 hours prior. For no shows or late cancellations, you will be subject to fee of $25 per person that will be applied to the credit card on file",
                                      "type": "string"
                                    },
                                    "cutoff_hour": {
                                      "type": "integer"
                                    },
                                    "cutoff_num": {
                                      "type": "integer"
                                    },
                                    "cutoff_type": {
                                      "type": "string"
                                    },
                                    "duration": {
                                      "type": "integer"
                                    },
                                    "experience_id": {
                                      "type": "string"
                                    },
                                    "is_exclusive": {
                                      "description": "Is this timeslot only available to a single concierge?",
                                      "example": false,
                                      "type": "boolean"
                                    },
                                    "is_held": {
                                      "example": true,
                                      "type": "boolean"
                                    },
                                    "is_requestable": {
                                      "type": "boolean"
                                    },
                                    "min_spend": {
                                      "type": "integer"
                                    },
                                    "pacing_covers_remaining": {
                                      "type": "integer"
                                    },
                                    "payments": {
                                      "properties": {
                                        "apply_gratuity_charge": {
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "apply_service_charge": {
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "cc_party_size_min": {
                                          "example": 4,
                                          "type": "integer"
                                        },
                                        "cc_payment_rule": {
                                          "example": "advanced_payment",
                                          "type": "string"
                                        },
                                        "charge_type": {
                                          "example": "person",
                                          "type": "string"
                                        },
                                        "cost": {
                                          "example": 10,
                                          "type": "number"
                                        },
                                        "default_gratuity": {
                                          "example": 10,
                                          "type": "integer"
                                        },
                                        "gratuity": {
                                          "example": 10,
                                          "type": "number"
                                        },
                                        "gratuity_type": {
                                          "example": "SPECIFIC_GRATUITY",
                                          "type": "string"
                                        },
                                        "mandated_gratuity_amt": {
                                          "example": 5,
                                          "type": "number"
                                        },
                                        "pregratuity_total": {
                                          "example": 60.5,
                                          "type": "number"
                                        },
                                        "require_credit_card": {
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "require_gratuity_charge": {
                                          "example": false,
                                          "type": "boolean"
                                        },
                                        "service_charge": {
                                          "example": 10,
                                          "type": "number"
                                        },
                                        "service_charge_amt": {
                                          "example": 5,
                                          "type": "number"
                                        },
                                        "subtotal": {
                                          "example": 50,
                                          "type": "number"
                                        },
                                        "tax_amt": {
                                          "example": 5.5,
                                          "type": "number"
                                        },
                                        "tax_rate": {
                                          "example": 10,
                                          "type": "number"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "real_datetime_of_slot": {
                                      "description": "If after midnight for a venue with a 6am ‚ÄúStart of Day‚Äù this field would have a date of date+1 compared to the date searched",
                                      "example": "2022-05-03 17:00:00",
                                      "type": "string"
                                    },
                                    "requires_credit_card": {
                                      "example": true,
                                      "type": "boolean"
                                    },
                                    "reservation_redirect_uri": {
                                      "example": "https://qa.sevenrooms.com/explore/venue_name_here/availability/uri/redirect?date=date&num_guests=party_size&access_persistent_id=access_persistent_id&widget_redirect=CHECKOUT",
                                      "type": "string"
                                    },
                                    "selected_automatic_upsells": {
                                      "type": "null"
                                    },
                                    "shift_category": {
                                      "example": "DINNER",
                                      "type": "string"
                                    },
                                    "shift_persistent_id": {
                                      "type": "string"
                                    },
                                    "slot_body_html": {
                                      "description": "This property is only returned when support_slot_options=1 is passed in as a parameter to endpoint",
                                      "type": "string"
                                    },
                                    "slot_body_plaintext": {
                                      "description": "This property is only returned when support_slot_options=1 is passed in as a parameter to endpoint",
                                      "type": "string"
                                    },
                                    "slot_name": {
                                      "description": "This property is only returned when support_slot_options=1 is passed in as a parameter to endpoint",
                                      "type": "string"
                                    },
                                    "slot_option_id": {
                                      "description": "The access rule id.\nThis property is only returned when support_slot_options=1 is passed in as a parameter to endpoint",
                                      "type": "string"
                                    },
                                    "slot_photo_large": {
                                      "description": "The url for the slot photo.\nThis property is only returned when support_slot_options=1 is passed in as a parameter to endpoint",
                                      "type": "string"
                                    },
                                    "slot_photo_small": {
                                      "description": "The url for the slot photo.\nThis property is only returned when support_slot_options=1 is passed in as a parameter to endpoint",
                                      "type": "string"
                                    },
                                    "slot_title": {
                                      "description": "This property is only returned when support_slot_options=1 is passed in as a parameter to endpoint",
                                      "type": "string"
                                    },
                                    "sort_order": {
                                      "type": "integer"
                                    },
                                    "time": {
                                      "type": "string"
                                    },
                                    "time_display": {
                                      "example": "5:00 pm",
                                      "type": "string"
                                    },
                                    "time_iso": {
                                      "type": "string"
                                    },
                                    "time_slot": {
                                      "example": "5:00 PM",
                                      "type": "string"
                                    },
                                    "time_slot_iso": {
                                      "description": "The time in iso format(ie 21:00:00)",
                                      "example": "17:00:00",
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string"
                                    },
                                    "upsells": {
                                      "type": "null"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "venue": {
                                "properties": {
                                  "_id": {
                                    "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgIDA_4X9CAw",
                                    "type": "string"
                                  },
                                  "address": {
                                    "example": "99 Bank St",
                                    "type": "string"
                                  },
                                  "cuisine": {
                                    "example": "German, Italian",
                                    "type": "string"
                                  },
                                  "id": {
                                    "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgIDA_4X9CAw",
                                    "type": "string"
                                  },
                                  "name": {
                                    "example": "The Marrow (DEMO)",
                                    "type": "string"
                                  },
                                  "payment_policy": {
                                    "example": "We ask that any cancellation to your reservation be made no less than 24 hours prior. For no shows or late cancellations, you will be subject to fee of $25 per person that will be applied to the credit card on file.",
                                    "type": "string"
                                  },
                                  "payments": {
                                    "properties": {
                                      "account_id": {
                                        "example": "acct_1IMN5PAP11whhJSl",
                                        "type": "string"
                                      },
                                      "payment_system": {
                                        "example": "STRIPE",
                                        "type": "string"
                                      },
                                      "sevenrooms_public_key": {
                                        "description": "SevenRooms Stripe Payment Gateway public key",
                                        "example": "pk_test_wIPMArVIe1cLcAJiGnBJoamu",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "photos": {
                                    "items": {
                                      "properties": {
                                        "large": {
                                          "example": "https://demo.sevenrooms.com/.h/download/AZIfvaKJHFfast0jYr6",
                                          "type": "string"
                                        },
                                        "large_height": {
                                          "example": 310,
                                          "type": "integer"
                                        },
                                        "large_width": {
                                          "example": 505,
                                          "type": "integer"
                                        },
                                        "medium": {
                                          "example": "https://demo.sevenrooms.com/.h/download/AMBfv969TfFNfasdgfk89",
                                          "type": "string"
                                        },
                                        "medium_height": {
                                          "example": 215,
                                          "type": "integer"
                                        },
                                        "medium_width": {
                                          "example": 300,
                                          "type": "integer"
                                        },
                                        "raw": {
                                          "example": "https://demo.sevenrooms.com/.h/download/CMI0v949TfFNfDknBw",
                                          "type": "string"
                                        },
                                        "raw_height": {
                                          "example": 360,
                                          "type": "integer"
                                        },
                                        "raw_width": {
                                          "example": 550,
                                          "type": "integer"
                                        },
                                        "small": {
                                          "example": "https://demo.sevenrooms.com/.h/download/VMIfv969TfFNfDt0jYrw",
                                          "type": "string"
                                        },
                                        "small_height": {
                                          "example": 50,
                                          "type": "integer"
                                        },
                                        "small_width": {
                                          "example": 80,
                                          "type": "integer"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "requires_credit_card": {
                                    "example": false,
                                    "type": "boolean"
                                  },
                                  "sort_score": {
                                    "example": -2950,
                                    "type": "integer"
                                  },
                                  "venue_allowing_requests": {
                                    "type": "boolean"
                                  },
                                  "venue_class": {
                                    "example": "DINING",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "204": {
            "description": "No Content response returned means there are no times slots avaialable"
          }
        }
      }
    },
    "/concierge/{concierge_id}/venues/{venue_id}/request": {
      "put": {
        "summary": "Create a Reservation Request",
        "description": "Request a reservation at a venue by a given venue ID",
        "operationId": "request_reservation",
        "tags": [
          "Reservation Requests"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "concierge_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Concierge",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "venue_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateReservationRequest_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Object containing the GUID of the created Reservation Request.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "request_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIgsSFW5pZ2h0bG9vcF9SZXNlcnZhdGlvbhiAgNCG8db_CQw"
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "request_id": {
                          "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIgsSFW5pZ2h0bG9vcF9SZXNlcnZhdGlvbhiAgNCG8db_CQw",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Concierge reservation requests setting is disabled for the venue."
          }
        }
      }
    },
    "/concierge/{concierge_id}/venues/{venue_id}/request/{request_id}": {
      "get": {
        "summary": "Get a Reservation Request",
        "description": "Get a concierge reservation request at a venue by request ID",
        "operationId": "get_reservation_request",
        "tags": [
          "Reservation Requests"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "concierge_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Concierge",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "venue_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Reservation Request",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object containing a Reservation Request",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "arrival_time": null,
                    "booked_by": "Documentation Example Concierge",
                    "cost_option": 0,
                    "created": "2024-10-04T22:06:11.261946",
                    "date": "2024-10-05",
                    "deleted": null,
                    "email": "hgranger@gmail.com",
                    "end_time": "8:00 PM",
                    "expiration": "10/5/24 7:56 PM",
                    "external_user_id": "hg123_eg",
                    "first_name": "Hermione",
                    "id": "ahZzfnNldmVucm9vbXMtc2VjdXJ3BfUmVzZXJ2YXRpb25SZXF1ZXN0GICAlLXFhcikLEhxuaWdodG-xvbuN",
                    "is_expired": false,
                    "is_offer_pending": false,
                    "last_name": "Granger",
                    "max_guests": 2,
                    "mf_ratio_female": 0,
                    "mf_ratio_male": 0,
                    "min_price": null,
                    "notes": null,
                    "phone_number": "+1 303 720 1234",
                    "reservation_id": null,
                    "start_time": "7:00 PM",
                    "status": "UNAPPROVED",
                    "time_range": [
                      "2024-10-05T23:00:00+00:00",
                      "2024-10-06T00:00:00+00:00"
                    ],
                    "updated": "2024-10-04T22:06:11.645271",
                    "user": {
                      "id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yFQsSCGdhZV9Vc2VyGICA0JqHjagLDA",
                      "name": "Docs Concierge Group Demo API"
                    },
                    "venue_group_client_id": "ahZzfnNldmVucm9vbXMBfVmVudWVHcm91cENsaWVudBiAgLifosWXCtc2VjdXJlLXFhcicLEhpuaWdodGxvb3Aw",
                    "venue_id": "ahZzfnNldmVLXFhchwLEg9uaWdodGxvb3BfVmucm9vbXMtc2VjdXJlVudWUYgIC4lqPdrwoM"
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "arrival_time": {
                          "type": "string"
                        },
                        "booked_by": {
                          "example": "Documentation Example Concierge",
                          "type": "string"
                        },
                        "cost_option": {
                          "example": 0,
                          "type": "integer"
                        },
                        "created": {
                          "example": "2024-10-04T22:06:11.261946",
                          "type": "string"
                        },
                        "date": {
                          "example": "2024-10-05",
                          "type": "string"
                        },
                        "deleted": {
                          "type": "string"
                        },
                        "email": {
                          "example": "hgranger@gmail.com",
                          "type": "string"
                        },
                        "end_time": {
                          "example": "8:00 PM",
                          "type": "string"
                        },
                        "expiration": {
                          "example": "10/5/24 7:56 PM",
                          "type": "string"
                        },
                        "external_user_id": {
                          "example": "hg123_eg",
                          "type": "string"
                        },
                        "first_name": {
                          "example": "Hermione",
                          "type": "string"
                        },
                        "id": {
                          "example": "ahZzfnNldmVucm9vbXMtc2VjdXJ3BfUmVzZXJ2YXRpb25SZXF1ZXN0GICAlLXFhcikLEhxuaWdodG-xvbuN",
                          "type": "string"
                        },
                        "is_expired": {
                          "example": false,
                          "type": "boolean"
                        },
                        "is_offer_pending": {
                          "example": false,
                          "type": "boolean"
                        },
                        "last_name": {
                          "example": "Granger",
                          "type": "string"
                        },
                        "max_guests": {
                          "example": 2,
                          "type": "integer"
                        },
                        "mf_ratio_female": {
                          "example": 0,
                          "type": "integer"
                        },
                        "mf_ratio_male": {
                          "example": 0,
                          "type": "integer"
                        },
                        "min_price": {
                          "type": "string"
                        },
                        "notes": {
                          "description": "Notes from the client",
                          "type": "string"
                        },
                        "phone_number": {
                          "example": "+1 303 720 1234",
                          "type": "string"
                        },
                        "reservation_id": {
                          "type": "string"
                        },
                        "start_time": {
                          "example": "7:00 PM",
                          "type": "string"
                        },
                        "status": {
                          "example": "UNAPPROVED",
                          "type": "string"
                        },
                        "time_range": {
                          "example": [
                            "2024-10-05T23:00:00+00:00",
                            "2024-10-06T00:00:00+00:00"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "updated": {
                          "example": "2024-10-04T22:06:11.645271",
                          "type": "string"
                        },
                        "user": {
                          "example": {
                            "id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yFQsSCGdhZV9Vc2VyGICA0JqHjagLDA",
                            "name": "Docs Concierge Group Demo API"
                          },
                          "type": "object"
                        },
                        "venue_group_client_id": {
                          "example": "ahZzfnNldmVucm9vbXMBfVmVudWVHcm91cENsaWVudBiAgLifosWXCtc2VjdXJlLXFhcicLEhpuaWdodGxvb3Aw",
                          "type": "string"
                        },
                        "venue_id": {
                          "example": "ahZzfnNldmVLXFhchwLEg9uaWdodGxvb3BfVmucm9vbXMtc2VjdXJlVudWUYgIC4lqPdrwoM",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Update a Reservation Request",
        "description": "Update a concierge reservation request at a venue by a given request ID",
        "operationId": "update_reservation_request",
        "tags": [
          "Reservation Requests"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "concierge_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Concierge",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "venue_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Reservation Request",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReservationRequest_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Object containing the GUID of the updated reservation request.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "request_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIgsSFW5pZ2h0bG9vcF9SZXNlcnZhdGlvbhiAgNCG8db_CQw",
                    "reservation_id": "ahhzfnNldmyIgsSFW48fHInbjkavVucm9vbXMtc2VjdXJlLWRlbW9cF9SasdNCG8dKHF9ahiAgb_YVr"
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "request_id": {
                          "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIgsSFW5pZ2h0bG9vcF9SZXNlcnZhdGlvbhiAgNCG8db_CQw",
                          "type": "string"
                        },
                        "reservation_id": {
                          "example": "ahhzfnNldmyIgsSFW48fHInbjkavVucm9vbXMtc2VjdXJlLWRlbW9cF9SasdNCG8dKHF9ahiAgb_YVr",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/concierge/{concierge_id}/venues/{venue_id}/requests/delete": {
      "post": {
        "summary": "Delete (a) Reservation Request(s)",
        "description": "Delete one or more concierge reservation request(s) at a venue by a given request ID",
        "operationId": "delete_reservation_requests",
        "tags": [
          "Reservation Requests"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "concierge_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Concierge",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "venue_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DeleteReservationRequest_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Object containing the GUID(s) of the deleted reservation request(s) (if deleted) and a count of how many objects were deleted.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "count": 1,
                    "deleted_ids": [
                      "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIgsSFW5pZ2h0bG9vcF9SZXNlcnZhdGlvbhiAgNCG8db_CQw"
                    ]
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "count": {
                          "example": 1,
                          "type": "integer"
                        },
                        "deleted_ids": {
                          "default": [],
                          "example": [
                            "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIgsSFW5pZ2h0bG9vcF9SZXNlcnZhdGlvbhiAgNCG8db_CQw"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/experiences/{venue_id}": {
      "get": {
        "summary": "Get all experiences offers from a venue.",
        "description": "Retrieve a list of all experiences offers from a venue id.",
        "operationId": "get_experiences",
        "tags": [
          "Experiences"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "venue_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object containing a list of experiences.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "experience": [
                      {
                        "default_party_size": 0,
                        "description": "",
                        "hero_image": {
                          "crop_info": {
                            "height": 0,
                            "width": 0,
                            "x": 0,
                            "y": 0
                          },
                          "photo_dict": {
                            "raw": ""
                          },
                          "raw_url_key": ""
                        },
                        "hide_on_directory": false,
                        "hide_price_description": false,
                        "id": "",
                        "image_list": [
                          {
                            "crop_info": {
                              "height": 0,
                              "width": 0,
                              "x": 0,
                              "y": 0
                            },
                            "photo_dict": {
                              "raw": ""
                            },
                            "raw_url_key": ""
                          }
                        ],
                        "is_featured": false,
                        "landing_url_key": "",
                        "menu_blob_id": "",
                        "menu_filename": "",
                        "name": "",
                        "offer_template_id": "",
                        "offer_type": "",
                        "parent_id": "",
                        "pdr_amenities": "",
                        "pdr_code": "",
                        "pdr_room_type": "",
                        "pdr_rooms": "",
                        "pdr_seating_areas": "",
                        "pdr_square_footage": 0,
                        "pdr_standing_capacity": 0,
                        "pdr_tables": "",
                        "pdr_tables_combinations": "",
                        "price_description": "",
                        "sort_order": 0,
                        "status": "",
                        "template_id": "",
                        "thefork_active": false,
                        "thefork_early_preview_date": "",
                        "thefork_end_date": "",
                        "thefork_menu": [],
                        "thefork_name": "",
                        "thefork_offer_uuid": "",
                        "thefork_price": "",
                        "thefork_start_date": "",
                        "title": "",
                        "venue_id": "",
                        "visibility": ""
                      }
                    ]
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "experience": {
                          "default": [],
                          "items": {
                            "properties": {
                              "default_party_size": {
                                "example": 0,
                                "type": "integer"
                              },
                              "description": {
                                "example": "",
                                "type": "string"
                              },
                              "hero_image": {
                                "properties": {
                                  "crop_info": {
                                    "properties": {
                                      "height": {
                                        "example": 0,
                                        "type": "integer"
                                      },
                                      "width": {
                                        "example": 0,
                                        "type": "integer"
                                      },
                                      "x": {
                                        "example": 0,
                                        "type": "integer"
                                      },
                                      "y": {
                                        "example": 0,
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "photo_dict": {
                                    "properties": {
                                      "raw": {
                                        "example": "",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "raw_url_key": {
                                    "example": "",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "hide_on_directory": {
                                "example": false,
                                "type": "boolean"
                              },
                              "hide_price_description": {
                                "example": false,
                                "type": "boolean"
                              },
                              "id": {
                                "example": "",
                                "type": "string"
                              },
                              "image_list": {
                                "default": [],
                                "items": {
                                  "properties": {
                                    "crop_info": {
                                      "properties": {
                                        "height": {
                                          "example": 0,
                                          "type": "integer"
                                        },
                                        "width": {
                                          "example": 0,
                                          "type": "integer"
                                        },
                                        "x": {
                                          "example": 0,
                                          "type": "integer"
                                        },
                                        "y": {
                                          "example": 0,
                                          "type": "integer"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "photo_dict": {
                                      "properties": {
                                        "raw": {
                                          "example": "",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "raw_url_key": {
                                      "example": "",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "is_featured": {
                                "example": false,
                                "type": "boolean"
                              },
                              "landing_url_key": {
                                "example": "",
                                "type": "string"
                              },
                              "menu_blob_id": {
                                "example": "",
                                "type": "string"
                              },
                              "menu_filename": {
                                "example": "",
                                "type": "string"
                              },
                              "name": {
                                "example": "",
                                "type": "string"
                              },
                              "offer_template_id": {
                                "example": "",
                                "type": "string"
                              },
                              "offer_type": {
                                "example": "",
                                "type": "string"
                              },
                              "parent_id": {
                                "example": "",
                                "type": "string"
                              },
                              "pdr_amenities": {
                                "example": "",
                                "type": "string"
                              },
                              "pdr_code": {
                                "example": "",
                                "type": "string"
                              },
                              "pdr_room_type": {
                                "example": "",
                                "type": "string"
                              },
                              "pdr_rooms": {
                                "example": "",
                                "type": "string"
                              },
                              "pdr_seating_areas": {
                                "example": "",
                                "type": "string"
                              },
                              "pdr_square_footage": {
                                "example": 0,
                                "type": "integer"
                              },
                              "pdr_standing_capacity": {
                                "example": 0,
                                "type": "integer"
                              },
                              "pdr_tables": {
                                "example": "",
                                "type": "string"
                              },
                              "pdr_tables_combinations": {
                                "example": "",
                                "type": "string"
                              },
                              "price_description": {
                                "example": "",
                                "type": "string"
                              },
                              "sort_order": {
                                "example": 0,
                                "type": "integer"
                              },
                              "status": {
                                "example": "",
                                "type": "string"
                              },
                              "template_id": {
                                "example": "",
                                "type": "string"
                              },
                              "thefork_active": {
                                "example": false,
                                "type": "boolean"
                              },
                              "thefork_early_preview_date": {
                                "example": "",
                                "type": "string"
                              },
                              "thefork_end_date": {
                                "example": "",
                                "type": "string"
                              },
                              "thefork_menu": {
                                "example": [],
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "thefork_name": {
                                "example": "",
                                "type": "string"
                              },
                              "thefork_offer_uuid": {
                                "example": "",
                                "type": "string"
                              },
                              "thefork_price": {
                                "example": "",
                                "type": "string"
                              },
                              "thefork_start_date": {
                                "example": "",
                                "type": "string"
                              },
                              "title": {
                                "example": "",
                                "type": "string"
                              },
                              "venue_id": {
                                "example": "",
                                "type": "string"
                              },
                              "visibility": {
                                "example": "",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/experiences/{venue_id}/details/{experience_id}": {
      "get": {
        "summary": "Get details of an experience offer from a venue.",
        "description": "Retrieve of a certain experience offers from a venue.",
        "operationId": "get_experience_details",
        "tags": [
          "Experiences"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "venue_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "experience_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Experience",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object containing details of an experience.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "experience": {
                      "default_party_size": 0,
                      "description": "",
                      "hero_image": {
                        "crop_info": {
                          "height": 0,
                          "width": 0,
                          "x": 0,
                          "y": 0
                        },
                        "photo_dict": {
                          "raw": ""
                        },
                        "raw_url_key": ""
                      },
                      "hide_on_directory": false,
                      "hide_price_description": false,
                      "id": "",
                      "image_list": [
                        {
                          "crop_info": {
                            "height": 0,
                            "width": 0,
                            "x": 0,
                            "y": 0
                          },
                          "photo_dict": {
                            "raw": ""
                          },
                          "raw_url_key": ""
                        }
                      ],
                      "is_featured": false,
                      "landing_url_key": "",
                      "menu_blob_id": "",
                      "menu_filename": "",
                      "name": "",
                      "offer_template_id": "",
                      "offer_type": "",
                      "parent_id": "",
                      "pdr_amenities": "",
                      "pdr_code": "",
                      "pdr_room_type": "",
                      "pdr_rooms": "",
                      "pdr_seating_areas": "",
                      "pdr_square_footage": 0,
                      "pdr_standing_capacity": 0,
                      "pdr_tables": "",
                      "pdr_tables_combinations": "",
                      "price_description": "",
                      "sort_order": 0,
                      "status": "",
                      "template_id": "",
                      "thefork_active": false,
                      "thefork_early_preview_date": "",
                      "thefork_end_date": "",
                      "thefork_menu": [],
                      "thefork_name": "",
                      "thefork_offer_uuid": "",
                      "thefork_price": "",
                      "thefork_start_date": "",
                      "title": "",
                      "venue_id": "",
                      "visibility": ""
                    }
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "experience": {
                          "properties": {
                            "default_party_size": {
                              "example": 0,
                              "type": "integer"
                            },
                            "description": {
                              "example": "",
                              "type": "string"
                            },
                            "hero_image": {
                              "properties": {
                                "crop_info": {
                                  "properties": {
                                    "height": {
                                      "example": 0,
                                      "type": "integer"
                                    },
                                    "width": {
                                      "example": 0,
                                      "type": "integer"
                                    },
                                    "x": {
                                      "example": 0,
                                      "type": "integer"
                                    },
                                    "y": {
                                      "example": 0,
                                      "type": "integer"
                                    }
                                  },
                                  "type": "object"
                                },
                                "photo_dict": {
                                  "properties": {
                                    "raw": {
                                      "example": "",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "raw_url_key": {
                                  "example": "",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "hide_on_directory": {
                              "example": false,
                              "type": "boolean"
                            },
                            "hide_price_description": {
                              "example": false,
                              "type": "boolean"
                            },
                            "id": {
                              "example": "",
                              "type": "string"
                            },
                            "image_list": {
                              "default": [],
                              "items": {
                                "properties": {
                                  "crop_info": {
                                    "properties": {
                                      "height": {
                                        "example": 0,
                                        "type": "integer"
                                      },
                                      "width": {
                                        "example": 0,
                                        "type": "integer"
                                      },
                                      "x": {
                                        "example": 0,
                                        "type": "integer"
                                      },
                                      "y": {
                                        "example": 0,
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "photo_dict": {
                                    "properties": {
                                      "raw": {
                                        "example": "",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "raw_url_key": {
                                    "example": "",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "is_featured": {
                              "example": false,
                              "type": "boolean"
                            },
                            "landing_url_key": {
                              "example": "",
                              "type": "string"
                            },
                            "menu_blob_id": {
                              "example": "",
                              "type": "string"
                            },
                            "menu_filename": {
                              "example": "",
                              "type": "string"
                            },
                            "name": {
                              "example": "",
                              "type": "string"
                            },
                            "offer_template_id": {
                              "example": "",
                              "type": "string"
                            },
                            "offer_type": {
                              "example": "",
                              "type": "string"
                            },
                            "parent_id": {
                              "example": "",
                              "type": "string"
                            },
                            "pdr_amenities": {
                              "example": "",
                              "type": "string"
                            },
                            "pdr_code": {
                              "example": "",
                              "type": "string"
                            },
                            "pdr_room_type": {
                              "example": "",
                              "type": "string"
                            },
                            "pdr_rooms": {
                              "example": "",
                              "type": "string"
                            },
                            "pdr_seating_areas": {
                              "example": "",
                              "type": "string"
                            },
                            "pdr_square_footage": {
                              "example": 0,
                              "type": "integer"
                            },
                            "pdr_standing_capacity": {
                              "example": 0,
                              "type": "integer"
                            },
                            "pdr_tables": {
                              "example": "",
                              "type": "string"
                            },
                            "pdr_tables_combinations": {
                              "example": "",
                              "type": "string"
                            },
                            "price_description": {
                              "example": "",
                              "type": "string"
                            },
                            "sort_order": {
                              "example": 0,
                              "type": "integer"
                            },
                            "status": {
                              "example": "",
                              "type": "string"
                            },
                            "template_id": {
                              "example": "",
                              "type": "string"
                            },
                            "thefork_active": {
                              "example": false,
                              "type": "boolean"
                            },
                            "thefork_early_preview_date": {
                              "example": "",
                              "type": "string"
                            },
                            "thefork_end_date": {
                              "example": "",
                              "type": "string"
                            },
                            "thefork_menu": {
                              "example": [],
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "thefork_name": {
                              "example": "",
                              "type": "string"
                            },
                            "thefork_offer_uuid": {
                              "example": "",
                              "type": "string"
                            },
                            "thefork_price": {
                              "example": "",
                              "type": "string"
                            },
                            "thefork_start_date": {
                              "example": "",
                              "type": "string"
                            },
                            "title": {
                              "example": "",
                              "type": "string"
                            },
                            "venue_id": {
                              "example": "",
                              "type": "string"
                            },
                            "visibility": {
                              "example": "",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/concierge/{concierge_id}/reservations/{reservation_id}/add_charge": {
      "post": {
        "summary": "Create a Concierge Charge",
        "description": "Add concierge charge information for a charge conducted outside of the system. The `reservation_id` path parameter provided in the request may either be the Reservations `reservation_id` or the Reservations `reference_code`. Note that reference codes are only unique to a single venue unless venue prefixes are enabled for a Venue Group. If the Reservations `reference_code` is provided as the path parameter, a `venue_id` parameter is required.",
        "operationId": "create_charge",
        "tags": [
          "Charges"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "concierge_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Concierge",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservation_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Reservation.\n\n**Note:** The Reservation's `reference_code` can be used in place of the Reservation's `id`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateCharge_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Object containing identifiers for the created Concierge Charge object",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "invoice_id": "ahZzfnNldmVuc6m9vbXMtc2VjdXJlLXFhch4LEhFzcl9CaWxsaW5nSW52b2ljZRiAgPi4_8_3CAw",
                    "reference_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhch4LEhFzcl9CaWsaW5nSGlzdG9yeRiAgPjEpdvJCgw",
                    "status": "SUCCESS"
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "invoice_id": {
                          "example": "ahZzfnNldmVuc6m9vbXMtc2VjdXJlLXFhch4LEhFzcl9CaWxsaW5nSW52b2ljZRiAgPi4_8_3CAw",
                          "type": "string"
                        },
                        "reference_id": {
                          "example": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhch4LEhFzcl9CaWsaW5nSGlzdG9yeRiAgPjEpdvJCgw",
                          "type": "string"
                        },
                        "status": {
                          "example": "SUCCESS",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/concierge/{concierge_id}/venues/{venue_id}/charges": {
      "get": {
        "summary": "List all Concierge Charges",
        "description": "Retrieve a list of charges and refunds made in the system.",
        "operationId": "get_charges",
        "tags": [
          "Charges"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "concierge_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Concierge",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "venue_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object containing a Reservation Request",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "charges": [
                      {
                        "additional_fee": 0,
                        "additional_fee_tax": 0,
                        "amount": 10000,
                        "base_amount": 10000,
                        "brand": "Visa",
                        "charged": "2019-02-22T19:40:43.160000",
                        "entity_date": "2019-02-22",
                        "entity_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcicLEhtuaWdodGxvb3BfUmVzZXJ2YXRpb25BY3R1YWwYsYv_2J",
                        "failure_code": "",
                        "failure_message": "",
                        "gratuity_amount": 0,
                        "id": "charge_id",
                        "is_info_request": false,
                        "is_refund": false,
                        "last_4": "4242",
                        "notes": "Auto-charge for cancellation/no-show",
                        "original_amount": 0,
                        "processing_fee": 100,
                        "promo_code": "",
                        "promo_discount_amount": 0,
                        "reference_code": "",
                        "reservation_notes": "",
                        "service_charge_amount": 0,
                        "status": "status_succeeded",
                        "tax_amount": 0,
                        "transaction_id": "ch_EZtg8no9MJpQPK",
                        "transaction_type": "transaction_type_auto_internal",
                        "upsell_amount": 0,
                        "venue_group_client_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcicLEhpuaWdodGxvb3BfVmVudWVHcm91cENsaWVudBiAgJCVsZG1Cww",
                        "venue_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkM"
                      }
                    ],
                    "cursor": "CsQHCqoECocE_wDAQdccFA7KPXGMgYyaiZqRjZCQkozSjJqcio2a0o6e_wAA_3RtoKCZi4ygoP8AAP9dno"
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "charges": {
                          "default": [],
                          "items": {
                            "properties": {
                              "additional_fee": {
                                "example": 0,
                                "type": "integer"
                              },
                              "additional_fee_tax": {
                                "example": 0,
                                "type": "integer"
                              },
                              "amount": {
                                "example": 10000,
                                "type": "integer"
                              },
                              "base_amount": {
                                "example": 10000,
                                "type": "integer"
                              },
                              "brand": {
                                "example": "Visa",
                                "type": "string"
                              },
                              "charged": {
                                "example": "2019-02-22T19:40:43.160000",
                                "type": "string"
                              },
                              "entity_date": {
                                "example": "2019-02-22",
                                "type": "string"
                              },
                              "entity_id": {
                                "example": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcicLEhtuaWdodGxvb3BfUmVzZXJ2YXRpb25BY3R1YWwYsYv_2J",
                                "type": "string"
                              },
                              "failure_code": {
                                "example": "",
                                "type": "string"
                              },
                              "failure_message": {
                                "example": "",
                                "type": "string"
                              },
                              "gratuity_amount": {
                                "example": 0,
                                "type": "integer"
                              },
                              "id": {
                                "example": "charge_id",
                                "type": "string"
                              },
                              "is_info_request": {
                                "example": false,
                                "type": "boolean"
                              },
                              "is_refund": {
                                "example": false,
                                "type": "boolean"
                              },
                              "last_4": {
                                "example": "4242",
                                "type": "string"
                              },
                              "notes": {
                                "example": "Auto-charge for cancellation/no-show",
                                "type": "string"
                              },
                              "original_amount": {
                                "example": 0,
                                "type": "integer"
                              },
                              "processing_fee": {
                                "example": 100,
                                "type": "integer"
                              },
                              "promo_code": {
                                "example": "",
                                "type": "string"
                              },
                              "promo_discount_amount": {
                                "example": 0,
                                "type": "integer"
                              },
                              "reference_code": {
                                "example": "",
                                "type": "string"
                              },
                              "reservation_notes": {
                                "example": "",
                                "type": "string"
                              },
                              "service_charge_amount": {
                                "example": 0,
                                "type": "integer"
                              },
                              "status": {
                                "example": "status_succeeded",
                                "type": "string"
                              },
                              "tax_amount": {
                                "example": 0,
                                "type": "integer"
                              },
                              "transaction_id": {
                                "example": "ch_EZtg8no9MJpQPK",
                                "type": "string"
                              },
                              "transaction_type": {
                                "example": "transaction_type_auto_internal",
                                "type": "string"
                              },
                              "upsell_amount": {
                                "example": 0,
                                "type": "integer"
                              },
                              "venue_group_client_id": {
                                "example": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhcicLEhpuaWdodGxvb3BfVmVudWVHcm91cENsaWVudBiAgJCVsZG1Cww",
                                "type": "string"
                              },
                              "venue_id": {
                                "example": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgICQhprSjAkM",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "cursor": {
                          "example": "CsQHCqoECocE_wDAQdccFA7KPXGMgYyaiZqRjZCQkozSjJqcio2a0o6e_wAA_3RtoKCZi4ygoP8AAP9dno",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/concierge/{concierge_id}/venues/{venue_id}/perks": {
      "get": {
        "summary": "Get Venue Perks",
        "description": "",
        "operationId": "get_perks",
        "tags": [
          "Perks"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "concierge_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Concierge",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "venue_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "description": "Date in YYYY-MM-DD format",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object containing a list of Perks.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "perks": [
                      {
                        "id": "",
                        "is_sold_out": false,
                        "title": "",
                        "url": ""
                      }
                    ]
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "perks": {
                          "default": [],
                          "items": {
                            "properties": {
                              "id": {
                                "example": "",
                                "type": "string"
                              },
                              "is_sold_out": {
                                "example": false,
                                "type": "boolean"
                              },
                              "title": {
                                "example": "",
                                "type": "string"
                              },
                              "url": {
                                "example": "",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/tags/client/{venue_name}": {
      "get": {
        "summary": "Get Venue Tags",
        "description": "Retrieve all tags owned by a venue, including modified and default ones.",
        "operationId": "get_tags",
        "tags": [
          "Tags"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "venue_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object containing a list of Tags",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "color_hex": "#fdf66e",
                      "copied_from": null,
                      "deleted": false,
                      "disabled": 0,
                      "domain": "VenueGroupClient",
                      "entity_key": "ahZzfnNldmVucmEhRuaWdodGxvb9vbXMtc2VjdXJlLXFhciEL3BfVmVudWVHcm91cBiAgLimnqaACgw",
                      "followers": [],
                      "id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchlcmljVGFnR3JvdXAYgIC45si8LEhJzcl9HZW5ZqgkM",
                      "is_autotag": false,
                      "is_deletable": true,
                      "is_editable": true,
                      "is_for_marketing_segmentation": false,
                      "is_hot_reservation": 0,
                      "is_pod_tag": false,
                      "is_required": false,
                      "is_restricted": 0,
                      "is_source": 0,
                      "name": "VIP client type",
                      "name_display": "VIP client type",
                      "notes_by_tag": null,
                      "perks_by_tag": null,
                      "pod_ids": [],
                      "pods": [],
                      "privacy": "PUBLIC",
                      "show_chit": 1,
                      "show_custom_tags_on_widget": 0,
                      "show_reservation": 1,
                      "sort_order": 1,
                      "tag_name_displays": null,
                      "tags": [
                        "Investor",
                        "Celebrity",
                        "VIP",
                        "Critic"
                      ],
                      "type": 1,
                      "vip": 1
                    }
                  ],
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "default": [],
                      "items": {
                        "properties": {
                          "color_hex": {
                            "example": "#fdf66e",
                            "type": "string"
                          },
                          "copied_from": {
                            "type": "string"
                          },
                          "deleted": {
                            "example": false,
                            "type": "boolean"
                          },
                          "disabled": {
                            "example": 0,
                            "type": "integer"
                          },
                          "domain": {
                            "example": "VenueGroupClient",
                            "type": "string"
                          },
                          "entity_key": {
                            "example": "ahZzfnNldmVucmEhRuaWdodGxvb9vbXMtc2VjdXJlLXFhciEL3BfVmVudWVHcm91cBiAgLimnqaACgw",
                            "type": "string"
                          },
                          "followers": {
                            "default": [],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "id": {
                            "example": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchlcmljVGFnR3JvdXAYgIC45si8LEhJzcl9HZW5ZqgkM",
                            "type": "string"
                          },
                          "is_autotag": {
                            "example": false,
                            "type": "boolean"
                          },
                          "is_deletable": {
                            "example": true,
                            "type": "boolean"
                          },
                          "is_editable": {
                            "example": true,
                            "type": "boolean"
                          },
                          "is_for_marketing_segmentation": {
                            "example": false,
                            "type": "boolean"
                          },
                          "is_hot_reservation": {
                            "example": 0,
                            "type": "integer"
                          },
                          "is_pod_tag": {
                            "example": false,
                            "type": "boolean"
                          },
                          "is_required": {
                            "example": false,
                            "type": "boolean"
                          },
                          "is_restricted": {
                            "example": 0,
                            "type": "integer"
                          },
                          "is_source": {
                            "example": 0,
                            "type": "integer"
                          },
                          "name": {
                            "example": "VIP client type",
                            "type": "string"
                          },
                          "name_display": {
                            "example": "VIP client type",
                            "type": "string"
                          },
                          "notes_by_tag": {
                            "type": "null"
                          },
                          "perks_by_tag": {
                            "type": "null"
                          },
                          "pod_ids": {
                            "default": [],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "pods": {
                            "default": [],
                            "type": "array"
                          },
                          "privacy": {
                            "example": "PUBLIC",
                            "type": "string"
                          },
                          "show_chit": {
                            "example": 1,
                            "type": "integer"
                          },
                          "show_custom_tags_on_widget": {
                            "example": 0,
                            "type": "integer"
                          },
                          "show_reservation": {
                            "example": 1,
                            "type": "integer"
                          },
                          "sort_order": {
                            "example": 1,
                            "type": "integer"
                          },
                          "tag_name_displays": {
                            "type": "null"
                          },
                          "tags": {
                            "default": [],
                            "example": [
                              "Investor",
                              "Celebrity",
                              "VIP",
                              "Critic"
                            ],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "type": {
                            "example": 1,
                            "type": "integer"
                          },
                          "vip": {
                            "example": 1,
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/concierge/{concierge_id}/upgrade_categories": {
      "get": {
        "summary": "List all Upgrade Categories",
        "description": "Get all Venue Upgrade Categories",
        "operationId": "get_upgrade_categories",
        "tags": [
          "Upgrade Categories"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "venue_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "concierge_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Concierge",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "JSON list of UpgradeCategory Objects.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "upgrade_categories": [
                      {
                        "advanced_description": "",
                        "advanced_pdr_upgrades": false,
                        "deleted": null,
                        "gratuity_charge_type": "DEFAULT_GRATUITY",
                        "gratuity_percentage": null,
                        "id": "ahZzfnNldmVucm9vbXMtc2VjdXJQ2F0ZWdvcnkYgICodGxvb3BfVmVudWUYgIC4lqPdrwoMCxzZWxsQ2F0ZWdv",
                        "is_charging_gratuity": false,
                        "is_charging_service_charge": false,
                        "is_charging_tax": false,
                        "max_quantity_allow_multiples": false,
                        "max_quantity_int": 10,
                        "max_quantity_type": "SPECIFIC_NUMBER",
                        "min_quantity_int": 1,
                        "min_quantity_type": "NONE_REQUIRED",
                        "name": "Starters",
                        "pdr_fees": [],
                        "require_gratuity_charge": false,
                        "service_charge_percentage": 12,
                        "service_charge_type": "DEFAULT_SERVICE_CHARGE",
                        "show_category_flag": false,
                        "sort_order": 0,
                        "tax_group_id": null,
                        "venue_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgIDI1uKdvQgM"
                      }
                    ]
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "upgrade_categories": {
                          "items": {
                            "properties": {
                              "advanced_description": {
                                "example": "",
                                "type": "string"
                              },
                              "advanced_pdr_upgrades": {
                                "example": false,
                                "type": "boolean"
                              },
                              "deleted": {
                                "type": "string"
                              },
                              "gratuity_charge_type": {
                                "example": "DEFAULT_GRATUITY",
                                "type": "string"
                              },
                              "gratuity_percentage": {
                                "type": "number"
                              },
                              "id": {
                                "example": "ahZzfnNldmVucm9vbXMtc2VjdXJQ2F0ZWdvcnkYgICodGxvb3BfVmVudWUYgIC4lqPdrwoMCxzZWxsQ2F0ZWdv",
                                "type": "string"
                              },
                              "is_charging_gratuity": {
                                "example": false,
                                "type": "boolean"
                              },
                              "is_charging_service_charge": {
                                "example": false,
                                "type": "boolean"
                              },
                              "is_charging_tax": {
                                "example": false,
                                "type": "boolean"
                              },
                              "max_quantity_allow_multiples": {
                                "example": false,
                                "type": "boolean"
                              },
                              "max_quantity_int": {
                                "example": 10,
                                "type": "integer"
                              },
                              "max_quantity_type": {
                                "example": "SPECIFIC_NUMBER",
                                "type": "string"
                              },
                              "min_quantity_int": {
                                "example": 1,
                                "type": "integer"
                              },
                              "min_quantity_type": {
                                "example": "NONE_REQUIRED",
                                "type": "string"
                              },
                              "name": {
                                "example": "Starters",
                                "type": "string"
                              },
                              "pdr_fees": {
                                "default": [],
                                "type": "array"
                              },
                              "require_gratuity_charge": {
                                "example": false,
                                "type": "boolean"
                              },
                              "service_charge_percentage": {
                                "example": 12,
                                "type": "number"
                              },
                              "service_charge_type": {
                                "example": "DEFAULT_SERVICE_CHARGE",
                                "type": "string"
                              },
                              "show_category_flag": {
                                "example": false,
                                "type": "boolean"
                              },
                              "sort_order": {
                                "example": 0,
                                "type": "integer"
                              },
                              "tax_group_id": {
                                "type": "string"
                              },
                              "venue_id": {
                                "example": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgIDI1uKdvQgM",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/concierge/{concierge_id}/upgrade_categories/{upgrade_category_id}": {
      "get": {
        "summary": "Upgrade Category Details",
        "description": "Get details about an upgrade category",
        "operationId": "upgrade_category_details",
        "tags": [
          "Upgrade Categories"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "concierge_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Concierge",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "upgrade_category_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Upgrade Category",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details on an Upgrade Category",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "upgrade_category": {
                      "advanced_description": "",
                      "advanced_pdr_upgrades": false,
                      "deleted": null,
                      "gratuity_charge_type": "DEFAULT_GRATUITY",
                      "gratuity_percentage": null,
                      "id": "ahZzfnNldmVucm9vbXMtc2VjdXJQ2F0ZWdvcnkYgICodGxvb3BfVmVudWUYgIC4lqPdrwoMCxzZWxsQ2F0ZWdv",
                      "is_charging_gratuity": false,
                      "is_charging_service_charge": false,
                      "is_charging_tax": false,
                      "max_quantity_allow_multiples": false,
                      "max_quantity_int": 10,
                      "max_quantity_type": "SPECIFIC_NUMBER",
                      "min_quantity_int": 1,
                      "min_quantity_type": "NONE_REQUIRED",
                      "name": "Starters",
                      "pdr_fees": [],
                      "require_gratuity_charge": false,
                      "service_charge_percentage": 12,
                      "service_charge_type": "DEFAULT_SERVICE_CHARGE",
                      "show_category_flag": false,
                      "sort_order": 0,
                      "tax_group_id": null,
                      "venue_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgIDI1uKdvQgM"
                    }
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "upgrade_category": {
                          "properties": {
                            "advanced_description": {
                              "example": "",
                              "type": "string"
                            },
                            "advanced_pdr_upgrades": {
                              "example": false,
                              "type": "boolean"
                            },
                            "deleted": {
                              "type": "string"
                            },
                            "gratuity_charge_type": {
                              "example": "DEFAULT_GRATUITY",
                              "type": "string"
                            },
                            "gratuity_percentage": {
                              "type": "number"
                            },
                            "id": {
                              "example": "ahZzfnNldmVucm9vbXMtc2VjdXJQ2F0ZWdvcnkYgICodGxvb3BfVmVudWUYgIC4lqPdrwoMCxzZWxsQ2F0ZWdv",
                              "type": "string"
                            },
                            "is_charging_gratuity": {
                              "example": false,
                              "type": "boolean"
                            },
                            "is_charging_service_charge": {
                              "example": false,
                              "type": "boolean"
                            },
                            "is_charging_tax": {
                              "example": false,
                              "type": "boolean"
                            },
                            "max_quantity_allow_multiples": {
                              "example": false,
                              "type": "boolean"
                            },
                            "max_quantity_int": {
                              "example": 10,
                              "type": "integer"
                            },
                            "max_quantity_type": {
                              "example": "SPECIFIC_NUMBER",
                              "type": "string"
                            },
                            "min_quantity_int": {
                              "example": 1,
                              "type": "integer"
                            },
                            "min_quantity_type": {
                              "example": "NONE_REQUIRED",
                              "type": "string"
                            },
                            "name": {
                              "example": "Starters",
                              "type": "string"
                            },
                            "pdr_fees": {
                              "default": [],
                              "type": "array"
                            },
                            "require_gratuity_charge": {
                              "example": false,
                              "type": "boolean"
                            },
                            "service_charge_percentage": {
                              "example": 12,
                              "type": "number"
                            },
                            "service_charge_type": {
                              "example": "DEFAULT_SERVICE_CHARGE",
                              "type": "string"
                            },
                            "show_category_flag": {
                              "example": false,
                              "type": "boolean"
                            },
                            "sort_order": {
                              "example": 0,
                              "type": "integer"
                            },
                            "tax_group_id": {
                              "type": "string"
                            },
                            "venue_id": {
                              "example": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgIDI1uKdvQgM",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/concierge/{concierge_id}/upgrade_categories/{upgrade_category_id}/upgrades": {
      "get": {
        "summary": "List all Upgrades",
        "description": "Get all Upgrades for an Upgrade Category at a Venue.",
        "operationId": "get_upgrades",
        "tags": [
          "Upgrades"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "concierge_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Concierge",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "upgrade_category_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Upgrade Category",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "JSON list of Upgrade Objects.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "upgrades": [
                      {
                        "category_id": "bmlnaHRsb29wLW5ld3I6CxIPbmlnaHRsb29wX1ZlbnVlGICAgICA9ecIDAsSEXNyX1Vwc2VsbENhdGVnb3J5GICAgICA9b8KDA",
                        "deleted": null,
                        "description": "Parisian cheese selection",
                        "id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhckMLEg9uaWdodGxvb3BfVmVudWUYgIC4lqPdrwoMCxIac3JfVXBzZWxsQ2F0ZWd",
                        "is_price_hidden": false,
                        "modifiers_groups_selected": null,
                        "name": "Charcuterie",
                        "pos_item_id": "",
                        "preview_image_url_key": "",
                        "price": 15,
                        "reservation_tags": [
                          "PUBLIC##ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhch8LEhJzcl9HZW5lcmljVGFnR3JvdXAYgIC4jv2kpQsM##Special Occasions##Catch up with friends"
                        ],
                        "sort_order": 0,
                        "venue_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgIC4lqPdrwoM"
                      }
                    ]
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "upgrades": {
                          "default": [],
                          "items": {
                            "properties": {
                              "category_id": {
                                "example": "bmlnaHRsb29wLW5ld3I6CxIPbmlnaHRsb29wX1ZlbnVlGICAgICA9ecIDAsSEXNyX1Vwc2VsbENhdGVnb3J5GICAgICA9b8KDA",
                                "type": "string"
                              },
                              "deleted": {
                                "type": "string"
                              },
                              "description": {
                                "example": "Parisian cheese selection",
                                "type": "string"
                              },
                              "id": {
                                "example": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhckMLEg9uaWdodGxvb3BfVmVudWUYgIC4lqPdrwoMCxIac3JfVXBzZWxsQ2F0ZWd",
                                "type": "string"
                              },
                              "is_price_hidden": {
                                "example": false,
                                "type": "boolean"
                              },
                              "modifiers_groups_selected": {
                                "type": "array"
                              },
                              "name": {
                                "example": "Charcuterie",
                                "type": "string"
                              },
                              "pos_item_id": {
                                "example": "",
                                "type": "string"
                              },
                              "preview_image_url_key": {
                                "example": "",
                                "type": "string"
                              },
                              "price": {
                                "example": 15,
                                "type": "number"
                              },
                              "reservation_tags": {
                                "example": [
                                  "PUBLIC##ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhch8LEhJzcl9HZW5lcmljVGFnR3JvdXAYgIC4jv2kpQsM##Special Occasions##Catch up with friends"
                                ],
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "sort_order": {
                                "example": 0,
                                "type": "integer"
                              },
                              "venue_id": {
                                "example": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgIC4lqPdrwoM",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Concierge does not exist, check concierge_id"
          },
          "404": {
            "description": "No Upgrade Category found for the given upgrade_category_id."
          }
        }
      }
    },
    "/concierge/{concierge_id}/upgrade_categories/{upgrade_category_id}/upgrades/{upgrade_id}": {
      "get": {
        "summary": "Get an Upgrade",
        "description": "Get an Upgrade at a Venue by a given Upgrade Category ID and Upgrade ID.",
        "operationId": "get_upgrade",
        "tags": [
          "Upgrades"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "concierge_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Concierge",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "upgrade_category_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Upgrade Category",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "upgrade_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Upgrade",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Upgrade Object.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "upgrade": {
                      "category_id": "bmlnaHRsb29wLW5ld3I6CxIPbmlnaHRsb29wX1ZlbnVlGICAgICA9ecIDAsSEXNyX1Vwc2VsbENhdGVnb3J5GICAgICA9b8KDA",
                      "deleted": null,
                      "description": "Parisian cheese selection",
                      "id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhckMLEg9uaWdodGxvb3BfVmVudWUYgIC4lqPdrwoMCxIac3JfVXBzZWxsQ2F0ZWd",
                      "is_price_hidden": false,
                      "modifiers_groups_selected": null,
                      "name": "Charcuterie",
                      "pos_item_id": "",
                      "preview_image_url_key": "",
                      "price": 15,
                      "reservation_tags": [
                        "PUBLIC##ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhch8LEhJzcl9HZW5lcmljVGFnR3JvdXAYgIC4jv2kpQsM##Special Occasions##Catch up with friends"
                      ],
                      "sort_order": 0,
                      "venue_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgIC4lqPdrwoM"
                    }
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "upgrade": {
                          "properties": {
                            "category_id": {
                              "example": "bmlnaHRsb29wLW5ld3I6CxIPbmlnaHRsb29wX1ZlbnVlGICAgICA9ecIDAsSEXNyX1Vwc2VsbENhdGVnb3J5GICAgICA9b8KDA",
                              "type": "string"
                            },
                            "deleted": {
                              "type": "string"
                            },
                            "description": {
                              "example": "Parisian cheese selection",
                              "type": "string"
                            },
                            "id": {
                              "example": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhckMLEg9uaWdodGxvb3BfVmVudWUYgIC4lqPdrwoMCxIac3JfVXBzZWxsQ2F0ZWd",
                              "type": "string"
                            },
                            "is_price_hidden": {
                              "example": false,
                              "type": "boolean"
                            },
                            "modifiers_groups_selected": {
                              "type": "array"
                            },
                            "name": {
                              "example": "Charcuterie",
                              "type": "string"
                            },
                            "pos_item_id": {
                              "example": "",
                              "type": "string"
                            },
                            "preview_image_url_key": {
                              "example": "",
                              "type": "string"
                            },
                            "price": {
                              "example": 15,
                              "type": "number"
                            },
                            "reservation_tags": {
                              "example": [
                                "PUBLIC##ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhch8LEhJzcl9HZW5lcmljVGFnR3JvdXAYgIC4jv2kpQsM##Special Occasions##Catch up with friends"
                              ],
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "sort_order": {
                              "example": 0,
                              "type": "integer"
                            },
                            "venue_id": {
                              "example": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhchwLEg9uaWdodGxvb3BfVmVudWUYgIC4lqPdrwoM",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Concierge does not exist, check concierge_id"
          },
          "404": {
            "description": "No Upgrade Category found for the given upgrade_category_id."
          }
        }
      }
    },
    "/concierge/{concierge_id}/venues/{venue_id}": {
      "get": {
        "summary": "Get a Venue",
        "description": "Retrieve a specified Venue by ID.",
        "operationId": "get_venue",
        "tags": [
          "Venues"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "concierge_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Concierge",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "venue_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the Venue.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "description": "Date-time passed in when concierge has venues with blackouts. Not commonly used.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "municipality_id",
            "in": "query",
            "required": false,
            "description": "Unique identifier of the Municipality to search for Availability within.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object containing the retrieved Venue.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "address": "208 7th Ave",
                    "atmosphere": "Trendy, Neighborhood Gem, Locals Hangout",
                    "background_image_dict": null,
                    "black_logo": null,
                    "black_logo_direct": null,
                    "category_keywords": null,
                    "city": "Brooklyn",
                    "country": "United States",
                    "cross_street": "Baltic St",
                    "cuisine": "German, Italian",
                    "currency_code": "USD",
                    "full_dining_backend": true,
                    "google_maps_place_id": "fr3h34t34tf33g",
                    "grid_enabled": true,
                    "header_image_dict": null,
                    "id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgIDA_4X9CAw",
                    "integration_location_lat": 40.7128,
                    "integration_location_lat_long": null,
                    "integration_location_long": 74.06,
                    "is_capital_one_dining_enabled": false,
                    "is_global_dining_collection_venue": false,
                    "membership_enabled": false,
                    "menu_link": "https://menu.link.com",
                    "municipality": "Brooklyn",
                    "municipality_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICw3uyHpgoM",
                    "name": "The Marrow",
                    "neighborhood": "Park Slope",
                    "payment_policy": "For no shows or late cancellations, you will be subject to fee of $25 per person that will be applied to the credit card on file.",
                    "payments": {
                      "account_id": "acct_1Q5DueK03TsO8f7A",
                      "payment_system": "STRIPE",
                      "sevenrooms_public_key": "pk_test_wIPMArVIe1cLcAJiGnBJoamu"
                    },
                    "phone_number": "(212) 428-6000",
                    "photos": [
                      {
                        "large": null,
                        "medium": null,
                        "raw": null,
                        "small": null
                      }
                    ],
                    "policy": "Thank you for your reservation. Should your plans change, please let us know 24 hours before your reservation time.",
                    "postal_code": "11215",
                    "primary_color": "#ffffff",
                    "requires_credit_card": false,
                    "reservation_widget_url": "https://sevenrooms.com/reservations/wine-bar-sam",
                    "secondary_color": "#0000ff",
                    "state": "New York",
                    "status": false,
                    "venue_class": "DINING",
                    "venue_group_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIQsSFG5pZ2h0bG9vcF9WZW51ZUdyb3VwGICAgMDi7psJDA",
                    "venue_group_name": "Demo Restaurant Group",
                    "venue_url_key": "themarrow",
                    "website": "https://sevenrooms.com/",
                    "white_logo": null,
                    "white_logo_direct": null
                  },
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "address": {
                          "example": "208 7th Ave",
                          "type": "string"
                        },
                        "atmosphere": {
                          "example": "Trendy, Neighborhood Gem, Locals Hangout",
                          "type": "string"
                        },
                        "background_image_dict": {
                          "type": "null"
                        },
                        "black_logo": {
                          "type": "null"
                        },
                        "black_logo_direct": {
                          "type": "null"
                        },
                        "category_keywords": {
                          "type": "string"
                        },
                        "city": {
                          "example": "Brooklyn",
                          "type": "string"
                        },
                        "country": {
                          "example": "United States",
                          "type": "string"
                        },
                        "cross_street": {
                          "example": "Baltic St",
                          "type": "string"
                        },
                        "cuisine": {
                          "example": "German, Italian",
                          "type": "string"
                        },
                        "currency_code": {
                          "example": "USD",
                          "type": "string"
                        },
                        "full_dining_backend": {
                          "example": true,
                          "type": "boolean"
                        },
                        "google_maps_place_id": {
                          "example": "fr3h34t34tf33g",
                          "type": "string"
                        },
                        "grid_enabled": {
                          "example": true,
                          "type": "boolean"
                        },
                        "header_image_dict": {
                          "type": "null"
                        },
                        "id": {
                          "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgIDA_4X9CAw",
                          "type": "string"
                        },
                        "integration_location_lat": {
                          "example": 40.7128,
                          "type": "number"
                        },
                        "integration_location_lat_long": {
                          "type": "null"
                        },
                        "integration_location_long": {
                          "example": 74.06,
                          "type": "number"
                        },
                        "is_capital_one_dining_enabled": {
                          "example": false,
                          "type": "boolean"
                        },
                        "is_global_dining_collection_venue": {
                          "example": false,
                          "type": "boolean"
                        },
                        "membership_enabled": {
                          "example": false,
                          "type": "boolean"
                        },
                        "menu_link": {
                          "example": "https://menu.link.com",
                          "type": "string"
                        },
                        "municipality": {
                          "example": "Brooklyn",
                          "type": "string"
                        },
                        "municipality_id": {
                          "example": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICw3uyHpgoM",
                          "type": "string"
                        },
                        "name": {
                          "example": "The Marrow",
                          "type": "string"
                        },
                        "neighborhood": {
                          "example": "Park Slope",
                          "type": "string"
                        },
                        "payment_policy": {
                          "example": "For no shows or late cancellations, you will be subject to fee of $25 per person that will be applied to the credit card on file.",
                          "type": "string"
                        },
                        "payments": {
                          "properties": {
                            "account_id": {
                              "example": "acct_1Q5DueK03TsO8f7A",
                              "type": "string"
                            },
                            "payment_system": {
                              "example": "STRIPE",
                              "type": "string"
                            },
                            "sevenrooms_public_key": {
                              "example": "pk_test_wIPMArVIe1cLcAJiGnBJoamu",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "phone_number": {
                          "example": "(212) 428-6000",
                          "type": "string"
                        },
                        "photos": {
                          "items": {
                            "properties": {
                              "large": {
                                "type": "string"
                              },
                              "medium": {
                                "type": "string"
                              },
                              "raw": {
                                "type": "string"
                              },
                              "small": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "policy": {
                          "example": "Thank you for your reservation. Should your plans change, please let us know 24 hours before your reservation time.",
                          "type": "string"
                        },
                        "postal_code": {
                          "example": "11215",
                          "type": "string"
                        },
                        "primary_color": {
                          "example": "#ffffff",
                          "type": "string"
                        },
                        "requires_credit_card": {
                          "example": false,
                          "type": "boolean"
                        },
                        "reservation_widget_url": {
                          "example": "https://sevenrooms.com/reservations/wine-bar-sam",
                          "type": "string"
                        },
                        "secondary_color": {
                          "example": "#0000ff",
                          "type": "string"
                        },
                        "state": {
                          "example": "New York",
                          "type": "string"
                        },
                        "status": {
                          "example": false,
                          "type": "boolean"
                        },
                        "venue_class": {
                          "example": "DINING",
                          "type": "string"
                        },
                        "venue_group_id": {
                          "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIQsSFG5pZ2h0bG9vcF9WZW51ZUdyb3VwGICAgMDi7psJDA",
                          "type": "string"
                        },
                        "venue_group_name": {
                          "example": "Demo Restaurant Group",
                          "type": "string"
                        },
                        "venue_url_key": {
                          "example": "themarrow",
                          "type": "string"
                        },
                        "website": {
                          "example": "https://sevenrooms.com/",
                          "type": "string"
                        },
                        "white_logo": {
                          "type": "null"
                        },
                        "white_logo_direct": {
                          "type": "null"
                        }
                      },
                      "type": "object"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/concierge/{concierge_id}/venues": {
      "get": {
        "summary": "List all Venues",
        "description": "Get a list of Venues a Concierge account has access to by a given Concierge ID",
        "operationId": "get_concierge_venues",
        "tags": [
          "Venues"
        ],
        "security": [
          {
            "ExternalAPIKeySecurity": []
          }
        ],
        "parameters": [
          {
            "name": "concierge_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Concierge",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "municipality_id",
            "in": "query",
            "required": false,
            "description": "Unique identifier of the Municipality to search for Availability within.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "postal_code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "venue_class",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "DINING"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object containing a list of Venues.",
            "content": {
              "application/json": {
                "example": {
                  "cursor": null,
                  "data": [
                    {
                      "address": "208 7th Ave",
                      "atmosphere": "Trendy, Neighborhood Gem, Locals Hangout",
                      "background_image_dict": null,
                      "black_logo": null,
                      "black_logo_direct": null,
                      "category_keywords": null,
                      "city": "Brooklyn",
                      "country": "United States",
                      "cross_street": "Baltic St",
                      "cuisine": "German, Italian",
                      "currency_code": "USD",
                      "full_dining_backend": true,
                      "google_maps_place_id": "fr3h34t34tf33g",
                      "grid_enabled": true,
                      "header_image_dict": null,
                      "id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgIDA_4X9CAw",
                      "integration_location_lat": 40.7128,
                      "integration_location_lat_long": null,
                      "integration_location_long": 74.06,
                      "is_capital_one_dining_enabled": false,
                      "is_global_dining_collection_venue": false,
                      "membership_enabled": false,
                      "menu_link": "https://menu.link.com",
                      "municipality": "Brooklyn",
                      "municipality_id": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICw3uyHpgoM",
                      "name": "The Marrow",
                      "neighborhood": "Park Slope",
                      "payment_policy": "For no shows or late cancellations, you will be subject to fee of $25 per person that will be applied to the credit card on file.",
                      "payments": {
                        "account_id": "acct_1Q5DueK03TsO8f7A",
                        "payment_system": "STRIPE",
                        "sevenrooms_public_key": "pk_test_wIPMArVIe1cLcAJiGnBJoamu"
                      },
                      "phone_number": "(212) 428-6000",
                      "photos": [
                        {
                          "large": null,
                          "medium": null,
                          "raw": null,
                          "small": null
                        }
                      ],
                      "policy": "Thank you for your reservation. Should your plans change, please let us know 24 hours before your reservation time.",
                      "postal_code": "11215",
                      "primary_color": "#ffffff",
                      "requires_credit_card": false,
                      "reservation_widget_url": "https://sevenrooms.com/reservations/wine-bar-sam",
                      "secondary_color": "#0000ff",
                      "state": "New York",
                      "status": false,
                      "venue_class": "DINING",
                      "venue_group_id": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIQsSFG5pZ2h0bG9vcF9WZW51ZUdyb3VwGICAgMDi7psJDA",
                      "venue_group_name": "Demo Restaurant Group",
                      "venue_url_key": "themarrow",
                      "website": "https://sevenrooms.com/",
                      "white_logo": null,
                      "white_logo_direct": null
                    }
                  ],
                  "limit": 1,
                  "request_id": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                  "status": 200
                },
                "schema": {
                  "properties": {
                    "cursor": {
                      "type": "integer"
                    },
                    "data": {
                      "default": [],
                      "items": {
                        "properties": {
                          "address": {
                            "example": "208 7th Ave",
                            "type": "string"
                          },
                          "atmosphere": {
                            "example": "Trendy, Neighborhood Gem, Locals Hangout",
                            "type": "string"
                          },
                          "background_image_dict": {
                            "type": "null"
                          },
                          "black_logo": {
                            "type": "null"
                          },
                          "black_logo_direct": {
                            "type": "null"
                          },
                          "category_keywords": {
                            "type": "string"
                          },
                          "city": {
                            "example": "Brooklyn",
                            "type": "string"
                          },
                          "country": {
                            "example": "United States",
                            "type": "string"
                          },
                          "cross_street": {
                            "example": "Baltic St",
                            "type": "string"
                          },
                          "cuisine": {
                            "example": "German, Italian",
                            "type": "string"
                          },
                          "currency_code": {
                            "example": "USD",
                            "type": "string"
                          },
                          "full_dining_backend": {
                            "example": true,
                            "type": "boolean"
                          },
                          "google_maps_place_id": {
                            "example": "fr3h34t34tf33g",
                            "type": "string"
                          },
                          "grid_enabled": {
                            "example": true,
                            "type": "boolean"
                          },
                          "header_image_dict": {
                            "type": "null"
                          },
                          "id": {
                            "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yHAsSD25pZ2h0bG9vcF9WZW51ZRiAgIDA_4X9CAw",
                            "type": "string"
                          },
                          "integration_location_lat": {
                            "example": 40.7128,
                            "type": "number"
                          },
                          "integration_location_lat_long": {
                            "type": "null"
                          },
                          "integration_location_long": {
                            "example": 74.06,
                            "type": "number"
                          },
                          "is_capital_one_dining_enabled": {
                            "example": false,
                            "type": "boolean"
                          },
                          "is_global_dining_collection_venue": {
                            "example": false,
                            "type": "boolean"
                          },
                          "membership_enabled": {
                            "example": false,
                            "type": "boolean"
                          },
                          "menu_link": {
                            "example": "https://menu.link.com",
                            "type": "string"
                          },
                          "municipality": {
                            "example": "Brooklyn",
                            "type": "string"
                          },
                          "municipality_id": {
                            "example": "ahZzfnNldmVucm9vbXMtc2VjdXJlLXFhciILEhVsb2NhdGlvbl9NdW5pY2lwYWxpdHkYgICw3uyHpgoM",
                            "type": "string"
                          },
                          "name": {
                            "example": "The Marrow",
                            "type": "string"
                          },
                          "neighborhood": {
                            "example": "Park Slope",
                            "type": "string"
                          },
                          "payment_policy": {
                            "example": "For no shows or late cancellations, you will be subject to fee of $25 per person that will be applied to the credit card on file.",
                            "type": "string"
                          },
                          "payments": {
                            "properties": {
                              "account_id": {
                                "example": "acct_1Q5DueK03TsO8f7A",
                                "type": "string"
                              },
                              "payment_system": {
                                "example": "STRIPE",
                                "type": "string"
                              },
                              "sevenrooms_public_key": {
                                "example": "pk_test_wIPMArVIe1cLcAJiGnBJoamu",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "phone_number": {
                            "example": "(212) 428-6000",
                            "type": "string"
                          },
                          "photos": {
                            "items": {
                              "properties": {
                                "large": {
                                  "type": "string"
                                },
                                "medium": {
                                  "type": "string"
                                },
                                "raw": {
                                  "type": "string"
                                },
                                "small": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "policy": {
                            "example": "Thank you for your reservation. Should your plans change, please let us know 24 hours before your reservation time.",
                            "type": "string"
                          },
                          "postal_code": {
                            "example": "11215",
                            "type": "string"
                          },
                          "primary_color": {
                            "example": "#ffffff",
                            "type": "string"
                          },
                          "requires_credit_card": {
                            "example": false,
                            "type": "boolean"
                          },
                          "reservation_widget_url": {
                            "example": "https://sevenrooms.com/reservations/wine-bar-sam",
                            "type": "string"
                          },
                          "secondary_color": {
                            "example": "#0000ff",
                            "type": "string"
                          },
                          "state": {
                            "example": "New York",
                            "type": "string"
                          },
                          "status": {
                            "example": false,
                            "type": "boolean"
                          },
                          "venue_class": {
                            "example": "DINING",
                            "type": "string"
                          },
                          "venue_group_id": {
                            "example": "ahhzfnNldmVucm9vbXMtc2VjdXJlLWRlbW9yIQsSFG5pZ2h0bG9vcF9WZW51ZUdyb3VwGICAgMDi7psJDA",
                            "type": "string"
                          },
                          "venue_group_name": {
                            "example": "Demo Restaurant Group",
                            "type": "string"
                          },
                          "venue_url_key": {
                            "example": "themarrow",
                            "type": "string"
                          },
                          "website": {
                            "example": "https://sevenrooms.com/",
                            "type": "string"
                          },
                          "white_logo": {
                            "type": "null"
                          },
                          "white_logo_direct": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "limit": {
                      "example": 1,
                      "type": "integer"
                    },
                    "request_id": {
                      "default": "",
                      "example": "1733760284.46b53f9c-bb44-40f6-843a-86bdd2944161",
                      "type": "string"
                    },
                    "status": {
                      "example": 200,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ExternalAPIKeySecurity": {
        "type": "apiKey",
        "description": "An Authorization `token` received in the response body of the request to the `/auth` endpoint.",
        "name": "Authorization",
        "in": "header"
      }
    },
    "schemas": {
      "body": {
        "properties": {
          "client_id": {
            "description": "Unique ID for your API Audience.",
            "type": "string"
          },
          "client_secret": {
            "description": "Unique secret for your API Audience.",
            "type": "string"
          }
        },
        "required": [
          "client_id",
          "client_secret"
        ]
      },
      "BeginPayment_body": {
        "properties": {
          "amount": {
            "type": "integer",
            "description": "The total amount in cents. Example: 200"
          }
        },
        "required": [
          "venue_id",
          "amount"
        ]
      },
      "CreatePaylink_body": {
        "properties": {
          "subtotal": {
            "type": "integer",
            "description": ""
          },
          "service_charge_amount": {
            "type": "integer",
            "description": ""
          },
          "tax_amount": {
            "type": "integer",
            "description": ""
          },
          "gratuity_amount": {
            "type": "integer",
            "description": ""
          },
          "gratuity_type": {
            "type": "string",
            "enum": [
              "gratuity_percentage",
              "none",
              "require_client_select_charge",
              "client_select_gratuity"
            ]
          },
          "note_to_guest": {
            "type": "string",
            "description": ""
          },
          "type": {
            "type": "string",
            "enum": [
              "charge",
              "collect"
            ]
          },
          "paylink_email_request": {
            "type": "string",
            "description": ""
          }
        },
        "required": []
      },
      "CalculateReservationPrice_body": {
        "properties": {
          "date": {
            "type": "string",
            "description": "Date in ISO 8601 format"
          },
          "time": {
            "type": "string",
            "description": "Reservation time"
          },
          "party_size": {
            "type": "integer",
            "description": "Party size for the reservation",
            "minimum": 1
          },
          "access_persistent_id": {
            "type": "string"
          },
          "upsells": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "upgrade_id": {
                  "type": "string"
                },
                "quantity": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "required": [
          "date",
          "time",
          "party_size",
          "access_persistent_id"
        ]
      },
      "CreateUpdateReservation_body": {
        "properties": {
          "date": {
            "type": "string",
            "description": "Date in ISO 8601 format"
          },
          "time": {
            "type": "string",
            "description": "Reservation time"
          },
          "party_size": {
            "type": "integer",
            "description": "Party size for the reservation",
            "minimum": 1
          },
          "first_name": {
            "type": "string",
            "description": "Client's first name. Required when creating reservation, must be excluded for update."
          },
          "last_name": {
            "type": "string",
            "description": "Client's last name. Required when creating reservation, must be excluded for update."
          },
          "phone": {
            "type": "string",
            "description": "Phone number of the Client in [E-164 format](https://en.wikipedia.org/wiki/E.164). For more information on this attribute please find our guide [here](https://concierge-api-docs.sevenrooms.com/developer-portal/phone-number-guide/). Required when creating reservation, must be excluded for update."
          },
          "reservation_hold_id": {
            "type": "string",
            "description": "Unique identifier of the previously booked Reservation Hold. If booking succeeds, the system will release this Hold."
          },
          "reservation_id": {
            "type": "string",
            "description": "Unique identifier of the previously booked Reservation. If provided, the system will discard the Reservation when calculating availability to place the Reservation Hold."
          },
          "email": {
            "type": "string",
            "description": "Contact email"
          },
          "notes": {
            "type": "string",
            "description": "Notes from the client"
          },
          "internal_notes": {
            "type": "string",
            "description": "Internal notes for the venue staff."
          },
          "send_client_email": {
            "type": "boolean",
            "description": "Send the client an email confirmation"
          },
          "send_client_sms": {
            "type": "boolean",
            "description": "Boolean field used to send the client a SMS confirmation. Requires client phone number and venue must have SMS messaging enabled to work. "
          },
          "address": {
            "type": "string",
            "description": "Client Profile: address first line"
          },
          "address_2": {
            "type": "string",
            "description": "Client Profile: address second line"
          },
          "city": {
            "type": "string",
            "description": "Client Profile: city"
          },
          "state": {
            "type": "string",
            "description": "Client Profile: state or province"
          },
          "postal_code": {
            "type": "string",
            "description": "Client Profile: postal code"
          },
          "country": {
            "type": "string",
            "description": "Client Profile: country"
          },
          "mf_ratio_male": {
            "type": "integer",
            "description": "Number of males in the party"
          },
          "mf_ratio_female": {
            "type": "integer",
            "description": "Number of females in the party"
          },
          "perk_id": {
            "type": "string",
            "description": "ID of perk to book with this reservation"
          },
          "card_token": {
            "type": "string",
            "description": "Credit card token"
          },
          "external_id": {
            "type": "string",
            "description": ""
          },
          "payment_instrument_token": {
            "type": "string",
            "description": "intent_id returned by the payments endpoints begin_payment and begin_save"
          },
          "payment_subtotal": {
            "type": "integer",
            "description": "In cents. This is required only for payment flow"
          },
          "payment_gratuity": {
            "type": "integer",
            "description": "In cents. This is required only for payment flow"
          },
          "payment_service_charge": {
            "type": "integer",
            "description": "In cents. This is required only for payment flow"
          },
          "payment_tax": {
            "type": "integer",
            "description": "In cents. This is required only for payment flow"
          },
          "venue_seating_area_id": {
            "type": "string"
          },
          "system_class": {
            "type": "string"
          },
          "slot_option_id": {
            "type": "string"
          },
          "external_user_id": {
            "type": "string",
            "description": "ID for 3rd-party user foreign key to this reservation."
          },
          "client_id": {
            "type": "string"
          },
          "duration": {
            "type": "integer",
            "description": "Custom duration in minutes. Note this will override shift defaults"
          },
          "table_codes": {
            "type": "string",
            "description": "Table number (if a table combination, comma-delimited)"
          },
          "reservation_tags": {
            "type": "string",
            "description": "Comma delimited list of reservation tags in category:tag format"
          },
          "client_tags_to_add": {
            "type": "string",
            "description": "Comma delimited list of client tags in category:tag format"
          },
          "client_tags_to_remove": {
            "type": "string",
            "description": "Comma delimited list of client tags in category:tag format"
          },
          "salutation": {
            "type": "string"
          },
          "birthday": {
            "type": "string"
          },
          "anniversary": {
            "type": "string"
          },
          "loyalty_id": {
            "type": "string"
          },
          "loyalty_tier": {
            "type": "string"
          },
          "loyalty_rank": {
            "type": "string"
          },
          "upgrade_inventories": {
            "type": "string"
          },
          "reservation_sms_opt_in": {
            "type": "boolean"
          },
          "send_reminder_email": {
            "type": "boolean"
          },
          "send_reminder_sms": {
            "type": "boolean"
          },
          "venue_group_marketing_opt_in": {
            "type": "boolean"
          },
          "venue_marketing_opt_in": {
            "type": "boolean"
          },
          "request_id": {
            "type": "string"
          },
          "custom_fields": {
            "type": "string"
          },
          "custom_unindexed": {
            "type": "string"
          },
          "client_custom_fields_args": {
            "type": "string"
          },
          "client_custom_unindexed": {
            "type": "string"
          },
          "is_walkin": {
            "type": "boolean"
          },
          "bypass_availability": {
            "type": "boolean"
          },
          "bypass_required_contact_fields": {
            "type": "boolean"
          },
          "bypass_duplicate_reservation_check": {
            "type": "boolean"
          },
          "bypass_editable_cutoff": {
            "type": "boolean"
          },
          "status": {
            "type": "string"
          },
          "access_persistent_id": {
            "type": "string",
            "description": "persistent_id of the access_rule you want to validate for the reservation"
          },
          "min_price": {
            "type": "string"
          },
          "payment_by_paylink": {
            "type": "boolean",
            "description": "Boolean, true if you need to create the auto-cancel paylink"
          },
          "paylink_cancel_time": {
            "type": "integer",
            "description": "Time in minutes between 15 and 180."
          },
          "paylink_note": {
            "type": "string",
            "description": "Add the note to paylink, will be visible to the guest"
          },
          "paylink_email": {
            "type": "string",
            "description": "Client's email. The paylink will be sent to that email."
          },
          "seated_time": {
            "type": "string",
            "description": "Date and time when clients arrived in ISO 8601 format"
          },
          "source_first_name": {
            "type": "string",
            "description": "First name of the source user"
          },
          "source_last_name": {
            "type": "string",
            "description": "Last name of the source user"
          },
          "source_email": {
            "type": "string",
            "description": "Email of the source user"
          },
          "source_phone": {
            "type": "string",
            "description": "Phone number of the source user"
          }
        },
        "required": [
          "date",
          "time",
          "party_size"
        ]
      },
      "CancelGroupReservation_body": {
        "properties": {
          "send_client_email": {
            "type": "boolean",
            "description": "Send the client an email confirmation"
          }
        }
      },
      "CancelReservation_body": {
        "properties": {
          "send_client_email": {
            "type": "boolean",
            "description": "Send the client an email confirmation"
          }
        }
      },
      "CreateReservationHold_body": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "description": "Date in ISO 8601 format"
          },
          "time": {
            "type": "string",
            "description": "Reservation time"
          },
          "party_size": {
            "type": "integer",
            "minimum": 1,
            "description": "Party size"
          },
          "shift_persistent_id": {
            "description": "Unique identifier of the Shift belonging to this Reservation.      \n> Concatenation of:      \n> - Venue ID      \n> - Shift Category      \n> - Timestamp when shift was created      \n>       \n> Note that Venue ID may contain dashes.",
            "example": "ahNzfnNldmVu2dsasg- DINNER-1443199242.75",
            "type": "string"
          },
          "access_persistent_id": {
            "type": "string",
            "description": "Unique identifier for access as a result of the availability call for the given time slot.      \n\nAccess persistent ID from result of availability call for given time slot."
          },
          "reservation_id": {
            "type": "string",
            "description": "Unique identifier of the previously booked Reservation. If provided, the system will discard the Reservation when calculating availability to place the Reservation Hold."
          },
          "hold_wait_time_sec": {
            "type": "integer",
            "description": "Amount of time, in seconds, until the waitlist hold expires. Default is 300.",
            "minimum": 1
          }
        },
        "required": [
          "date",
          "time",
          "party_size",
          "shift_persistent_id",
          "access_persistent_id"
        ]
      },
      "DeleteReservationHold_body": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "description": "Date in ISO 8601 format"
          },
          "shift_persistent_id": {
            "description": "Unique identifier of the Shift belonging to this Reservation.      \n> Concatenation of:      \n> - Venue ID      \n> - Shift Category      \n> - Timestamp when shift was created      \n>       \n> Note that Venue ID may contain dashes.",
            "example": "ahNzfnNldmVu2dsasg- DINNER-1443199242.75",
            "type": "string"
          }
        },
        "required": [
          "date",
          "shift_persistent_id"
        ]
      },
      "CreateReservationRequest_body": {
        "properties": {
          "date": {
            "type": "string",
            "description": "Date in ISO 8601 format"
          },
          "start_time": {
            "type": "string",
            "description": "Request start time"
          },
          "end_time": {
            "type": "string",
            "description": "Request end time"
          },
          "time": {
            "type": "string",
            "description": "Additional time field for exact arrival time"
          },
          "party_size": {
            "type": "integer",
            "description": "Party size for the reservation",
            "minimum": 1
          },
          "first_name": {
            "type": "string",
            "description": "Client's first name"
          },
          "last_name": {
            "type": "string",
            "description": "Client's last name"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "description": "Contact email"
          },
          "notes": {
            "type": "string",
            "description": "Notes from the client"
          },
          "internal_notes": {
            "type": "string",
            "description": "Internal notes for the venue staff."
          },
          "duration": {
            "type": "integer",
            "description": "Custom duration in minutes. Note this will override shift defaults."
          },
          "mf_ratio_male": {
            "type": "integer",
            "description": "Number of males in the party"
          },
          "mf_ratio_female": {
            "type": "integer",
            "description": "Number of females in the party"
          },
          "send_client_email": {
            "type": "string",
            "description": "Send the client an email confirmation"
          },
          "external_user_id": {
            "type": "string",
            "description": "ID for 3rd-party user foreign key to this reservation"
          },
          "client_id": {
            "type": "string"
          },
          "loyalty_id": {
            "type": "string",
            "description": "Client loyalty ID for 3rd parties"
          },
          "source_first_name": {
            "type": "string",
            "description": "First name of the source user"
          },
          "source_last_name": {
            "type": "string",
            "description": "Last name of the source user"
          },
          "source_email": {
            "type": "string",
            "description": "Email of the source user"
          },
          "source_phone": {
            "type": "string",
            "description": "Phone number of the source user"
          }
        },
        "required": [
          "date",
          "party_size",
          "first_name",
          "last_name",
          "phone"
        ]
      },
      "UpdateReservationRequest_body": {
        "properties": {
          "date": {
            "type": "string",
            "description": "Date in ISO 8601 format"
          },
          "time": {
            "type": "string",
            "description": "Reservation time"
          },
          "party_size": {
            "type": "integer",
            "description": "Party size for the reservation"
          },
          "first_name": {
            "type": "string",
            "description": "Client's first name"
          },
          "last_name": {
            "type": "string",
            "description": "Client's last name"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "description": "Contact email"
          },
          "notes": {
            "type": "string",
            "description": "Notes from the client"
          },
          "internal_notes": {
            "type": "string",
            "description": "Internal notes for the venue staff."
          },
          "duration": {
            "type": "integer",
            "description": "Custom duration in minutes. Note this will override shift defaults"
          },
          "mf_ratio_male": {
            "type": "integer",
            "description": "Number of males in the party"
          },
          "mf_ratio_female": {
            "type": "integer",
            "description": "Number of females in the party"
          },
          "send_client_email": {
            "type": "string",
            "description": "Send the client an email confirmation"
          },
          "external_user_id": {
            "type": "string",
            "description": "ID for 3rd-party user foreign key to this reservation"
          },
          "client_id": {
            "type": "string"
          },
          "loyalty_id": {
            "type": "string",
            "description": "Client loyalty ID for 3rd parties"
          }
        },
        "required": []
      },
      "DeleteReservationRequest_body": {
        "properties": {
          "request_ids": {
            "type": "string",
            "description": "List of request IDs to delete. You can pass as a comma-separated string (e.g., 'request-id-1,request-id-2') or a list of strings (e.g., ['request-id-1', 'request-id-2'])"
          }
        },
        "required": [
          "request_ids"
        ]
      },
      "CreateCharge_body": {
        "properties": {
          "transaction_id": {
            "type": "string",
            "description": "Charge transaction ID in gateway or source system"
          },
          "subtotal": {
            "type": "string",
            "description": "Subtotal of charge amount before taxes, gratuities, and fees. Must be a non-zero, positive value"
          },
          "card_id": {
            "type": "string",
            "description": "ID of the tokenized card in the source system"
          },
          "card_last4": {
            "type": "string",
            "description": "Tokenized card last 4 digits (if applicable)"
          },
          "card_brand": {
            "type": "string",
            "description": "Brand of the tokenized/stored card (if applicable)"
          },
          "gratuity": {
            "type": "string",
            "description": "Gratuity charged"
          },
          "tax": {
            "type": "string",
            "description": "Tax percentage, between 0 and 100"
          },
          "additional_fee": {
            "type": "string",
            "description": "Any additional fees incurred"
          },
          "upsell_amount": {
            "type": "string",
            "description": "Total amount of upsells on the specific charge"
          },
          "promo_code_id": {
            "type": "string",
            "description": "Identifier of the promo code used on the charge"
          },
          "promo_discount_amount": {
            "type": "string",
            "description": "Promotion discount amount applied on the charge"
          },
          "total": {
            "type": "string",
            "description": "Total of the charge after taxes, gratuities, and fees. Must be a non-zero, positive value"
          },
          "skip_validation": {
            "type": "boolean",
            "default": false,
            "description": "Boolean value to skip validation on the concierge charge or not"
          },
          "venue_id": {
            "type": "string",
            "description": "Unique identifier for the venue."
          }
        },
        "required": [
          "transaction_id",
          "subtotal"
        ]
      }
    },
    "parameters": {
      "path": {
        "description": "Unique identifier of the Concierge",
        "name": "concierge_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "venue_id_path": {
        "description": "Unique identifier for the Venue.",
        "name": "venue_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "reservation_hold_id_path": {
        "description": "Unique identifier of the previously booked Reservation Hold.",
        "name": "reservation_hold_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    }
  },
  "x-original-swagger-version": "2.0"
}